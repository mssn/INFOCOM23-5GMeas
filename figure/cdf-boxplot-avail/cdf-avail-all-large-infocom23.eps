%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 4 4 109 122
%%HiResBoundingBox: 4.500000 4.500000 108.500000 121.500000
%%Creator: GPL Ghostscript 923 (ps2write)
%%LanguageLevel: 2
%%CreationDate: D:20220731152650-04'00'
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%BeginProlog
/DSC_OPDFREAD true def
/SetPageSize true def
/EPS2Write false def
currentdict/DSC_OPDFREAD known{
currentdict/DSC_OPDFREAD get
}{
false
}ifelse
10 dict begin
/DSC_OPDFREAD exch def
/this currentdict def
/y 720 def
/ebuf 200 string def
/prnt{
36//this/y get moveto//ebuf cvs show
//this/y 2 copy get 12 sub put
}bind def
/newline{
36//this/y get moveto
//this/y 2 copy get 12 sub put
}bind def
errordict/handleerror
{systemdict begin
$error begin
newerror
{(%%[ Error handled by opdfread.ps : )print errorname//ebuf cvs print(; OffendingCommand: )
print/command load//ebuf cvs print( ]%%)= flush
/newerror false store vmstatus pop pop 0 ne
{grestoreall
}if
errorname(VMerror)ne
{showpage
}if
initgraphics
0 720 moveto
errorname(VMerror)eq
{//this/ehsave known
{clear//this/ehsave get restore 2 vmreclaim
}if
vmstatus exch pop exch pop
}
/Courier 12 selectfont
{
(ERROR: )//prnt exec errorname//prnt exec
(OFFENDING COMMAND: )//prnt exec
/command load//prnt exec
$error/ostack known{
(%%[STACK:)=
(STACK:)//prnt exec
$error/ostack get aload length{
//newline exec
dup mark eq{
(-mark-)dup = show
}{
dup type/nametype eq{
dup xcheck not{
(/)show
(/)print
}if
}if
dup =//ebuf cvs show
}ifelse
}repeat
}if
}ifelse
(%%]%)=
//systemdict/showpage get exec
quit
}if
end
end
}bind readonly put
end
50 dict begin
/DefaultSwitch
{
dup where{
pop pop
}{
false def
}ifelse
}bind def
/=string 256 string def
/=only{
//=string cvs print
}bind def
/HexDigits(0123456789ABCDEF)readonly def
/PrintHex
{8{
dup -28 bitshift 15 and//HexDigits exch 1 getinterval//=only exec
4 bitshift
}repeat
pop
}bind def
/PDFR_DEBUG DefaultSwitch
/PDFR_DUMP DefaultSwitch
/PDFR_STREAM DefaultSwitch
/TTFDEBUG DefaultSwitch
/RotatePages DefaultSwitch
/FitPages DefaultSwitch
/CenterPages DefaultSwitch
/SetPageSize DefaultSwitch
/error
{
counttomark 1 sub -1 0{
index dup type/arraytype eq{==}{=only}ifelse
}for
()=
cleartomark
....Undefined
}bind def
//SetPageSize{
//RotatePages//FitPages or//CenterPages or{
mark(/RotatePages, /FitPages and CenterPages are not allowed with /SetPageSize)//error exec
}if
}
{
//FitPages//CenterPages and{
mark(CenterPages is not allowed with /FitPages)//error exec
}if
}
ifelse
/knownget
{
2 copy known{
get true
}{
pop pop false
}ifelse
}bind def
/IsUpper
{dup(A)0 get ge exch(Z)0 get le and
}bind def
/cpa2g{
dup length array
0 1 2 index length 1 sub{
dup 3 index exch get cp2g
3 copy put pop pop
}for
exch pop
}bind def
/cpd2g{
dup length dict exch{
cp2g 2 index 3 1 roll put
}forall
}bind def
/cps2g{
dup length string copy
}bind def
/cp2gprocs
<</arraytype//cpa2g/dicttype//cpd2g/packedarraytype//cpa2g/stringtype//cps2g >>
def
/cp2g{
dup gcheck not{
dup//cp2gprocs 1 index type
2 copy known{
get currentglobal 3 1 roll true setglobal exec exch setglobal
1 index wcheck not{readonly}if
1 index xcheck{cvx}if
exch pop
}{
pop pop
}ifelse
}if
}bind def
/BlockBuffer 65535 string def
/PDFReader currentdict def
/ObjectRegistryMaxLength 50000 def
/ObjectRegistry 10 dict def
ObjectRegistry
begin
0 ObjectRegistryMaxLength dict def
end
/CurrentObject null def
/DoneDocumentStructure false def
/GraphicState 20 dict begin
/InitialTextMatrix matrix def
/InitialMatrix matrix currentmatrix def
currentdict end def
/TempMatrix matrix def
/GraphicStateStack 20 array def
/GraphicStateStackPointer 0 def
/InitialTextMatrixStack 20 array def
/InitialTextMatrixStackPointer 0 def
/PDFColorSpaces 50 dict def
/InstalledFonts 50 dict def
/MacRomanEncodingInverse null def
currentglobal false setglobal
userdict/PDFR_InitialGS gstate put
userdict/PDFR_Patterns 50 dict put
userdict/FuncDataReader 10 dict put
setglobal
/InitialExtGState 20 dict begin
/BG2 currentblackgeneration cp2g def
/UCR2 currentundercolorremoval cp2g def
/TR2 currentglobal false setglobal[currentcolortransfer]exch setglobal cp2g def
/HT currenthalftone cp2g def
currentdict end readonly def
/InitialGraphicState 20 dict begin
/FontSize 0 def
/CharacterSpacing 0 def
/TextLeading 0 def
/TextRenderingMode 0 def
/WordSpacing 0 def
currentdict end readonly def
/SimpleColorSpaceNames 15 dict begin
/DeviceGray true def
/DeviceRGB true def
/DeviceCMYK true def
currentdict end readonly def
/1_24_bitshift_1_sub 1 24 bitshift 1 sub def
/ReadFontProcs 10 dict def
/GetObject
{
dup ObjectRegistryMaxLength idiv
//PDFReader/ObjectRegistry get exch knownget{
exch knownget
}{
pop false
}ifelse
}bind def
/PutObject
{
1 index ObjectRegistryMaxLength idiv
//PDFReader/ObjectRegistry get 1 index knownget{
exch pop
3 1 roll put
}{
//PDFReader/ObjectRegistry get dup
begin
1 index ObjectRegistryMaxLength dict def
end
exch get
3 1 roll put
}ifelse
}bind def
/Register
{
1 index GetObject{
dup xcheck{
4 3 roll pop
//PDFR_DEBUG{
(Have a daemon for )print 2 index ==
}if
exec
}{
dup null ne{
mark(The object )4 index(is already defined : )4 index//error exec
}{
pop
}ifelse
3 2 roll
exec
}ifelse
}{
3 2 roll
exec
}ifelse
PutObject
}bind def
/IsRegistered
{
GetObject{
null ne
}{
false
}ifelse
}bind def
/GetRegistered
{
dup GetObject not{
exch mark exch(Object )exch( isn't defined before needed (1).)//error exec
}if
dup xcheck{
exch mark exch(Object )exch( isn't defined before needed (2).)//error exec
}{
dup null eq{
exch mark exch(Object )exch( isn't defined before needed (3).)//error exec
}if
exch pop
}ifelse
}bind def
/StandardFontNames<<
/Times-Roman true
/Helvetica true
/Courier true
/Symbol true
/Times-Bold true
/Helvetica-Bold true
/Courier-Bold true
/ZapfDingbats true
/Times-Italic true
/Helvetica-Oblique true
/Courier-Oblique true
/Times-BoldItalic true
/Helvetica-BoldOblique true
/Courier-BoldOblique true
>>def
/CleanAllResources
{//PDFR_DEBUG{
(CleanAllResources beg)=
}if
//PDFReader/ObjectRegistry get{
dup length 0 exch 1 exch 1 sub{
2 copy get dup xcheck{
pop pop
}{
dup null eq{
pop pop
}{
dup type/dicttype eq{/.Global known}{pop false}ifelse{
pop
}{
//PDFR_DEBUG{
(Dropping )print dup =
}if
1 index exch/DroppedObject put
}ifelse
}ifelse
}ifelse
}for
pop
}forall
FontDirectory length dict begin
FontDirectory{
pop
dup//StandardFontNames exch known not{
dup null def
}if
pop
}forall
currentdict
end{
pop
//PDFR_DEBUG{
(Undefining font )print dup =
}if
undefinefont
}forall
//PDFR_DEBUG{
(CleanAllResources end)=
}if
}bind def
/PrintReference
{
//PDFR_DEBUG{
({ )print
dup{
=only( )print
}forall
( })=
}if
}bind def
/R
{
0 ne{
exch mark exch(A referred object generation )exch( isn't 0.)//error exec
}if
[
exch//GetRegistered/exec load
]cvx
//PrintReference exec
}bind def
/IsObjRef
{
dup type/arraytype eq{
dup length 3 eq{
dup xcheck exch
dup 0 get type/integertype eq 3 2 roll and exch
dup 1 get//GetRegistered eq 3 2 roll and exch
2 get/exec load eq and
}{
pop false
}ifelse
}{
pop false
}ifelse
}bind def
/DoNothing
{
}def
/RunTypeDaemon
{
dup type/dicttype eq{
dup/Type//knownget exec{
//PDFReader/TypeDaemons get exch
//knownget exec{
exec
}if
}if
}if
}bind def
/obj
{
//PDFR_DEBUG{
(Defining )print 1 index =only( )print dup =only( obj)=
}if
0 ne{
exch mark exch(An object generation )exch( isn't 0.)//error exec
}if
}bind def
/endobj
{
//PDFR_DEBUG{
(endobj )=
}if
count 1 eq{
pop
}{
dup type/dicttype eq{
dup/.endobj_daemon//knownget exec{
//PDFR_DEBUG{(.endobj_daemon for )print 2 index =}if
exec
}if
}if
dup type/dicttype eq{dup/ImmediateExec known}{false}ifelse{
pop pop
}{
//PDFR_DEBUG{
(Storing )print 1 index =
}if
//RunTypeDaemon exec
//DoNothing 3 1 roll//Register exec
}ifelse
}ifelse
}bind def
/StoreBlock
{
//PDFR_DEBUG{
(StoreBlock )print//PDFReader/BlockCount get =only(, Length = )print dup length =
}if
dup length string copy
//PDFReader/BlockCount get exch
//PDFReader/CurrentObject get 3 1 roll
put
//PDFReader/BlockCount get 1 add
//PDFReader exch/BlockCount exch put
}bind def
/CheckLength
{dup type/integertype ne{
mark(Object length isn't an integer.)//error exec
}if
}bind def
/ResolveD
{
3 copy pop get
dup//IsObjRef exec{
//PDFR_DEBUG{
(Resolving )print//PrintReference exec
}if
exec
exch exec
}{
exch pop
}ifelse
dup 4 1 roll
put
}bind def
/ResolveA
{2 index 2 index get
dup//IsObjRef exec{
exec
exch exec
3 copy put
}{
exch pop
}ifelse
exch pop exch pop
}bind def
/StoreStream
{
dup//PDFReader exch/CurrentObject exch put
//PDFReader/BlockCount 0 put
dup/Length//CheckLength//ResolveD exec
//PDFR_DEBUG{
(StoreStream Length = )print dup =
}if
currentfile exch()/SubFileDecode filter
{dup//BlockBuffer readstring{
//StoreBlock exec
}{
//StoreBlock exec
exit
}ifelse
}loop
pop
//PDFReader/CurrentObject null put
//PDFR_DEBUG{
(StoreStream end.)=
}if
}bind def
/MakeStreamDumper
{
//PDFR_DEBUG{
(MakeStreamDumper beg.)=
}if
currentglobal exch dup gcheck setglobal
[exch
1 dict dup/c 0 put exch
1024 string
{readstring pop
(StreamDumper )print 1 index/c get =string cvs print( )print
dup length =string cvs print( <)print dup print(>\n)print
dup length
3 2 roll
dup/c get
3 2 roll
add/c exch put
}/exec load
]
cvx 0()/SubFileDecode filter
exch setglobal
//PDFR_DEBUG{
(MakeStreamDumper end.)=
}if
}bind def
/ShortFilterNames 15 dict begin
/AHx/ASCIIHexDecode def
/A85/ASCII85Decode def
/LZW/LZWDecode def
/Fl/FlateDecode def
/RL/RunLengthDecode def
/CCF/CCITTFaxDecode def
/DCT/DCTDecode def
currentdict end readonly def
/AppendFilters
{
//PDFR_DEBUG{
(AppendFilters beg.)=
}if
dup 3 1 roll
/Filter//knownget exec{
dup type/nametype eq{
dup//ShortFilterNames exch//knownget exec{
exch pop
}if
2 index/DecodeParms//knownget exec{
exch
}if
filter
}{
dup 0 exch 1 exch length 1 sub{
2 copy get
dup//ShortFilterNames exch//knownget exec{
exch pop
}if
3 1 roll
4 index/DecodeParms//knownget exec{
exch get
}{
pop null
}ifelse
dup null eq{
pop 3 1 roll filter exch
}{
3 1 roll
4 1 roll filter exch
}ifelse
}for
pop
}ifelse
//PDFR_DEBUG//PDFR_DUMP and{
//MakeStreamDumper exec
}if
}if
exch pop
//PDFR_DEBUG{
(AppendFilters end.)=
}if
}bind def
/ExecuteStream
{
dup//PDFReader exch/CurrentObject exch put
dup/Length//CheckLength//ResolveD exec
//PDFR_DEBUG{
(ExecuteStream id = )print 2 index =only( Length = )print dup =
}if
//PDFReader/InitialGraphicState get
//PDFReader/GraphicState get copy pop
//PDFReader/Operators get begin
currentfile exch()/SubFileDecode filter
1 index//AppendFilters exec
cvx mark exch
exec
counttomark 0 ne{
mark(Data left on ostack after an immediate stream execution.)//error exec
}if
cleartomark
end
//PDFR_DEBUG{
(ExecuteStream end.)=
}if
//PDFReader/CurrentObject null put
dup/IsPage known{
dup/Context get/NumCopies//knownget exec{
1 sub{
copypage
}repeat
}if
EPS2Write not{showpage}if
}if
}bind def
/stream
{
//PDFR_DEBUG{
1 index =only( stream)=
}if
1 index GetObject{
dup xcheck{
exec
1 index null PutObject
}{
pop
}ifelse
}if
dup/ImmediateExec known{
dup/GlobalExec//knownget exec{
currentglobal 4 1 roll
setglobal
//ExecuteStream exec
3 2 roll setglobal
}{
//ExecuteStream exec
}ifelse
}{
//StoreStream exec
}ifelse
dup/.CleanResources//knownget exec{
/All eq{
//CleanAllResources exec
}if
}if
}bind def
/HookFont
{
//PDFR_DEBUG{
(Loaded the font )print dup/FontName get =
}if
{
dup/FontFileType get dup/Type1 eq exch/MMType1 eq or{
dup/FontName get
//PDFReader/RemoveFontNamePrefix get exec
findfont
exit
}if
dup/FontFileType get/TrueType eq{
//PDFReader/MakeType42 get exec
//PDFR_DEBUG{
(Font dict <<)=
dup{
1 index/sfnts eq{
exch pop
(/sfnts [)print
{
(-string\()print length//=only exec(\)- )=
}forall
(])=
}{
exch//=only exec( )print ==
}ifelse
}forall
(>>)=
}if
dup/FontName get exch definefont
exit
}if
mark(FontHook has no proc for )2 index/FontFileType get//error exec
}loop
/Font exch put
}bind def
/endstream
{
}bind def
/xref
{
//PDFR_DEBUG{
(xref)=
//PDFR_DUMP{
//PDFReader/ObjectRegistry get ==
}if
}if
end
count 0 ne{
mark(Excessive data on estack at the end of the interpretation.)//error exec
}if
currentfile 1(%%EOF)/SubFileDecode filter
flushfile
cleardictstack
}bind def
/ResolveDict
{dup{
pop 1 index exch
//DoNothing//ResolveD exec
pop
}forall
pop
}bind def
/SetupPageView
{
//PDFR_DEBUG{
(SetupPageView beg)=
}if
//DSC_OPDFREAD not{
//GraphicState/InitialMatrix get setmatrix
}if
/MediaBox get aload pop
3 index neg 3 index neg translate
3 -1 roll sub 3 1 roll exch sub exch
userdict/.HWMargins//knownget exec{
aload pop
}{
currentpagedevice/.HWMargins//knownget exec{
aload pop
}{
0 0 0 0
}ifelse
}ifelse
currentpagedevice/PageSize get aload pop
3 -1 roll sub 3 1 roll exch sub exch
exch 3 index sub exch 3 index sub
//SetPageSize{
//PDFR_DEBUG{
(Setting page size to )print 1 index//=only exec( )print dup =
}if
pop pop 3 index 3 index 2 copy
currentglobal false setglobal 3 1 roll
currentpagedevice dup/PageSize known{
/PageSize get aload pop
}{
0 0
}ifelse
round cvi 2 index round cvi eq
exch round cvi 3 index round cvi eq and
{
//PDFR_DEBUG{(PageSize matches request)== flush}if
pop pop
}{
/MediaRequested where{
//PDFR_DEBUG{(MediaRequested is true, check against new request)== flush}if
/MediaRequested get aload pop
round cvi 2 index round cvi eq
exch round cvi 3 index round cvi eq and
{
//PDFR_DEBUG{(MediaRequested same as current request, ignore)== flush}if
pop pop false
}{
//PDFR_DEBUG{(MediaRequested different to current request)== flush}if
true
}ifelse
}{
//PDFR_DEBUG{(No MediaRequested yet)== flush}if
true
}ifelse
{
//PDFR_DEBUG{(Setting pagesize)== flush}if
2 array astore
dup/MediaRequested exch def
<< exch/PageSize exch >>setpagedevice
}if
}ifelse
userdict/PDFR_InitialGS gstate put
setglobal
}if
//RotatePages{
2 copy gt 6 index 6 index gt ne{
1 index 5 index le 1 index 5 index le and not
}{
false
}ifelse
}{
false
}ifelse
{//CenterPages{
//PDFR_DEBUG{
(Rotating page, and then centering it)==
}if
90 rotate
0 5 index neg translate
5 index 1 index exch sub 2 div
2 index 6 index sub 2 div neg
translate
}{
//FitPages{
1 index 5 index div 1 index 7 index div
2 copy gt{
exch
}if
pop dup scale
}if
90 rotate
0 5 index neg translate
}ifelse
}{
//CenterPages{
//PDFR_DEBUG{
(Ccentering page)==
}if
1 index 6 index sub 2 div
1 index 6 index sub 2 div
translate
}{
//FitPages{
1 index 6 index div 1 index 6 index div
2 copy gt{
exch
}if
pop dup scale
}if
}ifelse
}ifelse
pop pop
translate
pop pop
//PDFR_DEBUG{
(SetupPageView end)=
}if
}bind def
/PageContentsDaemon
{
//PDFR_DEBUG{
(Executing PageContentsDaemon for )print 2 index =
}if
1 index exch/Context exch put
dup/ImmediateExec true put
dup/IsPage true put
SetPageSize{dup/Context get//SetupPageView exec}if
}bind def
/FontFileDaemon
{
//PDFR_DEBUG{
(Executing FontFileDaemon for )print 2 index =
}if
dup/FontFileType get
2 index exch
dup//ReadFontProcs exch//knownget exec{
exch pop exec
}{
mark(FontFile reader for )2 index( isn't implemented yet.)//error exec
}ifelse
//PDFR_DEBUG{
(FontFileDaemon end)=
}if
pop
}bind def
/FontDescriptorDaemon
{
//PDFR_DEBUG{
(Executing FontDescriptorDaemon for )print 2 index =
}if
2 copy/FontResource exch put
/Subtype get 1 index exch/FontFileType exch put
}bind def
/UnPDFEscape{
dup dup length string cvs
dup(#)search{
{
pop
(16#--)2 index 0 2 getinterval
1 index 3 2 getinterval copy pop
cvi
0 exch put
0
1 index 2 1 index length 2 sub getinterval
3 copy putinterval
length
3 copy exch put
getinterval
(#)search not{
pop exit
}if
}loop
(\0)search pop exch pop exch pop
cvn
exch pop
}{
pop pop
}ifelse
}bind def
/TypeDaemons<<
/Page
{//PDFR_DEBUG{
(Recognized a page.)=
}if
dup/Contents//knownget exec{
0 get//DoNothing exch
[
3 index//PageContentsDaemon/exec load
]cvx
//Register exec
}{
(fixme: page with no Contents won't be printed.)=
}ifelse
}bind
/FontDescriptor
{//PDFR_DEBUG{
(Recognized a font descriptor.)=
}if
dup/FontName//knownget exec{
1 index/FontName 3 -1 roll//UnPDFEscape exec put
}if
dup dup/FontFile known{/FontFile}{/FontFile2}ifelse
//knownget exec{
0 get//DoNothing exch
[
3 index//FontFileDaemon/exec load
]cvx
//Register exec
}{
(Font descriptor )print 1 index =only( has no FontFile.)=
}ifelse
}bind
/Font
{//PDFR_DEBUG{
(Recognized a font resource.)=
}if
dup/BaseFont//knownget exec{
//UnPDFEscape exec 2 copy/BaseFont exch put
//PDFReader/RemoveFontNamePrefix get exec
currentglobal exch
dup/Font resourcestatus{
pop pop
//PDFReader/GetInstalledFont get exec pop
}{
pop
}ifelse
setglobal
}if
dup/FontDescriptor//knownget exec{
0 get
dup//IsRegistered exec{
//PDFR_DEBUG{
(already registered )print dup =
}if
pop
}{
//DoNothing exch
[
3 index//FontDescriptorDaemon/exec load
]cvx
//Register exec
}ifelse
}if
}bind
>>def
/MakeStreamReader
{dup
[
exch
//PDFR_DEBUG{
(Stream proc )
/print load
//PDFR_STREAM{
(<)
/print load
}if
}if
1 dict dup/i -1 put
/dup load
/i
/get load
1
/add load
/dup load
3
1
/roll load
/i
/exch load
/put load
//knownget
/exec load
/not load
{()}
/if load
//PDFR_DEBUG{
//PDFR_STREAM{
/dup load
/print load
(>)
/print load
}if
( end of stream proc.\n)
/print load
}if
]cvx
//PDFR_DEBUG{
(Stream reader )print dup ==
}if
0()/SubFileDecode filter
exch//AppendFilters exec
}bind def
/RunDelayedStream
{
//GraphicState/InitialTextMatrix get
//InitialTextMatrixStack//PDFReader/InitialTextMatrixStackPointer get
2 copy get null eq{
2 copy currentglobal true setglobal matrix exch setglobal put
}if
get copy pop
//PDFReader/InitialTextMatrixStackPointer 2 copy get 1 add put
//MakeStreamReader exec
mark exch
cvx exec
counttomark 0 ne{
mark(Data left on ostack after a delayed stream execution.)//error exec
}if
cleartomark
//PDFReader/InitialTextMatrixStackPointer 2 copy get 1 sub put
//InitialTextMatrixStack//PDFReader/InitialTextMatrixStackPointer get get
//GraphicState/InitialTextMatrix get
copy pop
}bind def
//ReadFontProcs begin
/Type1
{//PDFR_DEBUG{
(ReadFontProcs.Type1)=
}if
dup/.endobj_daemon[4 index//HookFont/exec load]cvx put
dup/ImmediateExec true put
/GlobalExec true put
}bind def
/MMType1//Type1 def
/TrueType
{//PDFR_DEBUG{
(ReadFontProcs.TrueType)=
}if
dup/.endobj_daemon[4 index//HookFont/exec load]cvx put
pop
}bind def
end
/.opdloadttfontdict 50 dict def
.opdloadttfontdict begin
/maxstring 65400 def
end
/.InsertionSort
{
/CompareProc exch def
/Array exch def
1 1 Array length 1 sub
{
/Ix exch def
/Value1 Array Ix get def
/Jx Ix 1 sub def
{
Jx 0 lt{
exit
}if
/Value2 Array Jx get def
Value1 Value2 CompareProc{
exit
}if
Array Jx 1 add Value2 put
/Jx Jx 1 sub def
}loop
Array Jx 1 add Value1 put
}for
Array
}bind def
/putu16{
3 copy -8 bitshift put
exch 1 add exch 16#ff and put
}bind def
/putu32{
3 copy -16 bitshift putu16
exch 2 add exch 16#ffff and putu16
}bind def
/.readtable{
dup dup 1 and add string
dup 0 4 -1 roll getinterval
3 -1 roll exch
dup()ne{readstring}if pop pop
}bind def
/.readbigtable{
dup maxstring lt{
.readtable
}{
currentuserparams/VMReclaim get -2 vmreclaim
[4 2 roll{
dup maxstring le{exit}if
1 index maxstring string readstring pop 3 1 roll maxstring sub
}loop .readtable]
exch vmreclaim
}ifelse
}bind def
/ReadTTF
{
.opdloadttfontdict begin
/TTFontFile exch def
/TableDir TTFontFile 12 string readstring pop def
/tables TTFontFile TableDir 4 getu16 16 mul string readstring pop def
/tabarray tables length 16 idiv array def
TableDir 0 4 getinterval(ttcf)eq{
QUIET not{(Can't handle TrueType font Collections.)=}if
/.loadttfonttables cvx/invalidfont signalerror
}{
0 16 tables length 1 sub{
dup
tables exch 16 getinterval
exch 16 div cvi exch
tabarray 3 1 roll put
}for
}ifelse
tabarray{exch 8 getu32 exch 8 getu32 gt}.InsertionSort pop
/Read TableDir length tables length add def
/tabs[
tabarray{
dup 8 getu32
Read sub
dup 0 gt{
dup string TTFontFile exch readstring pop pop
Read add/Read exch def
}{
pop
}ifelse
12 getu32
dup Read add
/Read exch def
TTFontFile exch .readbigtable
}forall
]def
end
}bind def
/GetLocaType
{
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(head)eq{
tabs exch get
50 gets16
/LocaType exch def
exit
}{
pop
}ifelse
}for
}bind def
/GetNumGlyphs
{
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(maxp)eq{
tabs exch get
4 getu16
/NumGlyphs exch def
exit
}{
pop
}ifelse
}for
}bind def
/StringToLoca
{
/LocaIndex exch def
/StringOffset 0 def
{
dup length StringOffset gt{
dup
LocaType 1 eq{
StringOffset getu32
LocaArray LocaIndex 3 -1 roll put
/LocaIndex LocaIndex 1 add def
/StringOffset StringOffset 4 add
def
}{
StringOffset getu16 2 mul
LocaArray length LocaIndex gt{
LocaArray LocaIndex 3 -1 roll put
}{
pop
}ifelse
/LocaIndex LocaIndex 1 add def
/StringOffset StringOffset 2 add
def
}ifelse
}{
pop
LocaIndex
exit
}ifelse
}loop
}bind def
/GetSortedLoca
{
NumGlyphs 1 add array/LocaArray exch def
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(loca)eq{
tabs exch get
exit
}{
pop
}ifelse
}for
dup type/stringtype eq{
0 StringToLoca pop
}{
0 exch
{
exch StringToLoca
}forall
pop
}ifelse
LocaArray{gt}.InsertionSort pop
}bind def
/GetWorkingString
{
WorkString 0
GlyfArray GlyfStringIndex get
putinterval
/WorkBytes GlyfArray GlyfStringIndex get length def
/GlyfStringIndex GlyfStringIndex 1 add def
}bind def
/GetWorkingBytes
{
/BytesToRead exch def
WorkString 0 BytesToRead getinterval
dup length string copy
WorkString BytesToRead WorkBytes BytesToRead sub getinterval
dup length string copy
WorkString 0 3 -1 roll putinterval
/WorkBytes WorkBytes BytesToRead sub def
}bind def
/GetGlyfBytes
{
/ToRead exch def
WorkBytes 0 eq{
GetWorkingString
}if
WorkBytes ToRead ge{
ToRead string dup 0
ToRead GetWorkingBytes putinterval
}{
ToRead string
dup
0
WorkString 0 WorkBytes getinterval
putinterval
dup
WorkBytes
ToRead WorkBytes sub
GetWorkingString
GetWorkingBytes
putinterval
}ifelse
}bind def
/SplitGlyf
{
/GlyfArray exch def
/DestArray GlyfArray length 2 mul array def
/DestArrayIndex 0 def
/LastLoca 0 def
/NextLocaIndex 0 def
/LastLocaIndex 0 def
/GlyfStringIndex 0 def
/WorkString maxstring string def
/WorkBytes 0 def
{
LocaArray NextLocaIndex get
LastLoca sub maxstring gt
{
LocaArray LastLocaIndex get LastLoca sub
GetGlyfBytes
DestArray DestArrayIndex 3 -1 roll put
/DestArrayIndex DestArrayIndex 1 add def
LocaArray LastLocaIndex get/LastLoca exch def
}{
/LastLocaIndex NextLocaIndex def
/NextLocaIndex NextLocaIndex 1 add def
NextLocaIndex NumGlyphs gt
{
WorkBytes
GlyfStringIndex GlyfArray length lt{
GlyfArray GlyfStringIndex get length
add string dup
0
WorkString 0 WorkBytes getinterval
putinterval
dup
WorkBytes
GetWorkingString
WorkString 0 WorkBytes getinterval
putinterval
}{
pop
WorkString 0 WorkBytes getinterval
}ifelse
dup length string copy
DestArray DestArrayIndex 3 -1 roll put
exit
}if
}ifelse
}loop
DestArray
}bind def
/ProcessTTData
{
.opdloadttfontdict begin
0 1 tabarray length 1 sub{
/ix exch def
tabarray ix get
12 getu32 dup maxstring le{
dup 4 mod 0 ne{
4 div cvi 1 add 4 mul string/newstring exch def
/oldstring tabs ix get def
newstring 0 oldstring putinterval
0 1 newstring length oldstring length sub 1 sub{
newstring exch oldstring length add 0 put
}for
tabs ix newstring put
}{
pop
}ifelse
}{
dup 4 mod 0 ne{
dup maxstring idiv maxstring mul sub
4 idiv 1 add 4 mul string/newstring exch def
tabs ix get
dup length 1 sub dup/iy exch def get/oldstring exch def
newstring 0 oldstring putinterval
0 1 newstring length oldstring length sub 1 sub{
newstring exch oldstring length add 0 put
}for
tabs ix get iy newstring put
}{
pop
}ifelse
}ifelse
}for
0 1 tabarray length 1 sub{
dup tabarray exch get
dup 12 getu32 maxstring gt{
0 4 getinterval dup(glyf)eq{
pop
GetLocaType
GetNumGlyphs
GetSortedLoca
dup tabs exch get
SplitGlyf
tabs 3 1 roll put
}{
(Warning, table )print print( > 64Kb\n)print
pop
}ifelse
}{
pop
pop
}ifelse
}for
end
}bind def
/Makesfnts
{
.opdloadttfontdict begin
0
tabs{
dup type/stringtype eq{
pop
1 add
}{
{
type/stringtype eq{
1 add
}if
}forall
}ifelse
}forall
1 add
/TTOffset
TableDir length
tabarray length 16 mul add
def
0
tabarray{
exch dup 1 add
3 1 roll
dup
tabs exch get
dup type/stringtype eq{
length
2 index exch
TTOffset
dup 3 1 roll add
/TTOffset exch def
8 exch putu32
exch tabarray 3 1 roll
put
}{
0 exch
{
dup type/stringtype eq{
length add
}{
pop
}ifelse
}forall
2 index exch
TTOffset
dup 3 1 roll add
/TTOffset exch def
8 exch putu32
exch tabarray 3 1 roll
put
}ifelse
}forall
pop
array
dup 0
TableDir length
tables length add
string
dup 0 TableDir putinterval
dup 12 tables putinterval
put
dup
/ix 1 def
tabs{
dup type/stringtype eq{
ix exch
put dup
/ix ix 1 add def
}{
{
dup type/stringtype eq{
ix exch put dup
/ix ix 1 add def
}{
pop
}ifelse
}forall
}ifelse
}forall
pop
end
}bind def
/MakeType42
{
//PDFR_DEBUG{
(MakeType42 beg)=
}if
10 dict begin
/FontName 1 index/FontName get def
/FontType 42 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox 1 index/FontBBox get def
dup/FontResource get
dup/Encoding known{
//PDFReader/ObtainEncoding get exec
/Encoding get
}{
pop null
}ifelse
/PDFEncoding exch def
/CharStrings 2 index//PDFReader/MakeTTCharStrings get exec def
/sfnts 2 index//MakeStreamReader exec
ReadTTF
ProcessTTData
Makesfnts
def
/Encoding StandardEncoding def
/PaintType 0 def
currentdict end
//PDFR_DEBUG{
(MakeType42 end)=
}if
}bind def
/GetInstalledFont
{
dup//InstalledFonts exch knownget{
exch pop
}{
dup findfont dup 3 1 roll
//InstalledFonts 3 1 roll put
}ifelse
}bind def
/RemoveFontNamePrefix
{//=string cvs true
0 1 5{
2 index exch get//IsUpper exec not{
pop false exit
}if
}for
{(+)search{
pop pop
}if
}if
cvn
}bind def
/CheckFont
{dup/Type get/Font ne{
mark(Resource )3 index( must have /Type/Font .)//error exec
}if
}bind def
/CheckEncoding
{dup type/nametype ne{
dup/Type get/Encoding ne{
mark(Resource )3 index( must have /Type/Encoding .)//error exec
}if
}if
}bind def
/ObtainEncoding
{dup/Encoding known{
dup dup/Encoding//CheckEncoding//ResolveD exec
dup type dup/arraytype eq exch/packedarraytype eq or{
pop pop
}{
dup type/nametype eq{
/Encoding findresource
}{
dup/BaseEncoding//knownget exec not{
/StandardEncoding
}if
/Encoding findresource
exch
/Differences//knownget exec{
exch dup length array copy exch
0 exch
{
dup type/integertype eq{
exch pop
}{
3 copy put pop
1 add
}ifelse
}forall
pop
}if
}ifelse
/Encoding exch put
}ifelse
}{
dup/Encoding/StandardEncoding/Encoding findresource put
}ifelse
}bind def
/ObtainMetrics
{dup/Widths//knownget exec{
1 index/Encoding get
256 dict
3 index/Subtype get/TrueType eq{
1000
}{
1
}ifelse
4 index/MissingWidth//knownget exec not{
0
}if
5 index/FirstChar//knownget exec not{
0
}if
6 5 roll
dup 0 exch 1 exch length 1 sub{
2 copy get
exch 3 index add
7 index exch get
dup dup null ne exch/.notdef ne and{
6 index 3 1 roll exch
6 index div
3 copy pop//knownget exec{
0 eq
}{
true
}ifelse
{put
}{
pop pop pop
}ifelse
}{
pop pop
}ifelse
}for
pop pop pop pop exch pop
1 index exch/Metrics exch put
}{
dup/MissingWidth//knownget exec{
256 dict
2 index/Encoding get{
dup null ne{
3 copy 3 2 roll put
}if
pop
}forall
exch pop
1 index exch/Metrics exch put
}if
}ifelse
}bind def
/NotDef
{
FontMatrix aload pop pop pop exch pop exch pop
1 exch div exch
1 exch div exch
1 index 0 setcharwidth
0 setlinewidth
0 0 moveto
2 copy rlineto
1 index 0 rlineto
neg exch neg exch rlineto
closepath stroke
}bind def
/SaveResourcesToStack
{
[
//PDFReader/OldResources known{
//PDFReader/OldResources get
}{
null
}ifelse
//PDFReader/CurrentObject get/Context get/Resources get
]
//PDFReader/OldResources 3 -1 roll put
}bind def
/RestoreResourcesFromStack
{
//PDFReader/OldResources get dup
0 get//PDFReader/OldResources 3 -1 roll put
1 get//PDFReader/CurrentObject get/Context get/Resources 3 -1 roll put
}bind def
/BuildChar
{//PDFR_DEBUG{
(BuildChar )print dup//=only exec( )print
}if
exch begin
Encoding exch get
//PDFR_DEBUG{
dup =
}if
dup null eq{
pop//NotDef exec
}
{
CharProcs exch//knownget exec
{
currentfont/Font get/Resources//knownget exec{
exec
SaveResourcesToStack
//PDFReader/CurrentObject get/Context get
/Resources 3 -1 roll put
//RunDelayedStream exec
RestoreResourcesFromStack
}{
//RunDelayedStream exec
}ifelse
}
{
//NotDef exec
}ifelse
}ifelse
end
}bind def
/printdict
{(<<)=
{exch = ==}forall
(>>)=
}bind def
/printfont
{
dup{
exch dup =
dup/Encoding eq{
pop =
}{
dup/FontInfo eq exch/Private eq or{
//printdict exec
}{
==
}ifelse
}ifelse
}forall
}bind def
/ScaleMetrics
{1 index{
2 index div
3 index
3 1 roll put
}forall
pop
}bind def
/ResolveAndSetFontAux
{exch dup
//PDFReader/CurrentObject get/Context get/Resources get
/Font//DoNothing//ResolveD exec
exch//CheckFont//ResolveD exec
dup/Font//knownget exec{
exch pop exch pop
}{
{
dup/Subtype get dup dup/Type1 eq exch/TrueType eq or exch/MMType1 eq or{
exch pop
dup/BaseFont get
//RemoveFontNamePrefix exec
//PDFR_DEBUG{
(Font )print dup =
}if
1 index/FontDescriptor known{
//PDFR_DEBUG{
(Font from a font descriptor.)=
}if
1 index
/FontDescriptor//DoNothing//ResolveD exec
/Font//knownget exec{
exch pop
}{
//PDFR_DEBUG{
(Font descriptor has no Font resolved.)=
}if
//GetInstalledFont exec
}ifelse
}{
//GetInstalledFont exec
}ifelse
exch
dup/Encoding known not{
1 index/Encoding get 1 index exch/Encoding exch put
}if
//ObtainEncoding exec
//ObtainMetrics exec
exch
dup length dict copy
dup 2 index/Encoding get
/Encoding exch put
1 index/Metrics//knownget exec{
2 index/Subtype get/TrueType ne{
1 index/FontMatrix get 0 get
dup 0 eq{
pop
1 index/FontMatrix get 1 get
dup 0 eq{pop 1}if
}if
0.001 div
//ScaleMetrics exec
}{
1 index/sfnts known not{
1 index/FontMatrix get 0 get
dup 0 eq{
pop
1 index/FontMatrix get 1 get
dup 0 eq{pop 1}if
}if
//ScaleMetrics exec
}if
}ifelse
1 index exch/Metrics exch put
}if
1 index/BaseFont get
exch
dup/FID undef
dup/UniqueID undef
definefont
dup 3 1 roll
/Font exch put
exit
}if
dup/Subtype get/Type3 eq{
//ObtainEncoding exec
2 copy exch/FontName exch put
dup/CharProcs get//ResolveDict exec
dup/FontType 3 put
dup/BuildChar//BuildChar put
dup dup/Font exch put
dup 3 1 roll
definefont
2 copy ne{
2 copy/Font exch put
}if
exch pop
exit
}if
dup/Subtype get/Type0 eq{
}if
dup/Subtype get/CIDFontType0 eq{
}if
dup/Subtype get/CIDFontType2 eq{
}if
mark(Unknown font type )2 index/Subtype get//error exec
}loop
}ifelse
exch scalefont setfont
}bind def
/ResolveAndSetFont
{
//ResolveAndSetFontAux exec
}bind def
/.knownget
{2 copy known{
get true
}{
pop pop false
}ifelse
}bind def
/.min
{2 copy lt{
exch
}if
pop
}bind def
/.max
{2 copy gt{
exch
}if
pop
}bind def
/.dicttomark
{>>
}bind def
/getu16{
2 copy get 8 bitshift 3 1 roll 1 add get add
}bind def
/gets16{
getu16 16#8000 xor 16#8000 sub
}bind def
/getu32{
2 copy getu16 16 bitshift 3 1 roll 2 add getu16 add
}bind def
/gets32{
2 copy gets16 16 bitshift 3 1 roll 2 add getu16 add
}bind def
/cmapformats mark
0{
6 256 getinterval{}forall 256 packedarray
}bind
2{
/sHK_sz 2 def
/sH_sz 8 def
dup 2 getu16/cmapf2_tblen exch def
dup 4 getu16/cmapf2_lang exch def
dup 6 256 sHK_sz mul getinterval/sHKs exch def
0
0 1 255{
sHKs exch
2 mul getu16
1 index
1 index
lt{exch}if pop
}for
/sH_len exch def
dup 6 256 sHK_sz mul add
cmapf2_tblen 1 index sub getinterval
/sH_gIA exch def
/cmapf2_glyph_array 65535 array def
/.cmapf2_putGID{
/cmapf2_ch cmapf2_ch_hi 8 bitshift cmapf2_ch_lo add def
firstCode cmapf2_ch_lo le
cmapf2_ch_lo firstCode entryCount add lt
and{
sH_offset idRangeOffset add
cmapf2_ch_lo firstCode sub 2 mul
add 6 add
sH_gIA exch getu16
dup 0 gt{
idDelta add
cmapf2_glyph_array exch cmapf2_ch exch put
}{
pop
}ifelse
}{
}ifelse
}def
16#00 1 16#ff{
/cmapf2_ch_hi exch def
sHKs cmapf2_ch_hi sHK_sz mul getu16
/sH_offset exch def
sH_gIA sH_offset sH_sz getinterval
dup 0 getu16/firstCode exch def
dup 2 getu16/entryCount exch def
dup 4 gets16/idDelta exch def
dup 6 getu16/idRangeOffset exch def
pop
sH_offset 0 eq{
/cmapf2_ch_lo cmapf2_ch_hi def
/cmapf2_ch_hi 0 def
.cmapf2_putGID
}{
16#00 1 16#ff{
/cmapf2_ch_lo exch def
.cmapf2_putGID
}for
}ifelse
}for
pop
0 1 cmapf2_glyph_array length 1 sub{
dup cmapf2_glyph_array exch get
null eq{cmapf2_glyph_array exch 0 put}{pop}ifelse
}for
cmapf2_glyph_array
}bind
4{
/etab exch def
/nseg2 etab 6 getu16 def
14/endc etab 2 index nseg2 getinterval def
2 add
nseg2 add/startc etab 2 index nseg2 getinterval def
nseg2 add/iddelta etab 2 index nseg2 getinterval def
nseg2 add/idroff etab 2 index nseg2 getinterval def
pop
/firstcode startc 0 getu16 16#ff00 and dup 16#f000 ne{pop 0}if def
/lastcode firstcode def
/striptopbyte false def
/putglyph{
glyphs code 3 -1 roll put/code code 1 add def
}bind def
/numcodes 0 def/glyphs 0 0 2 nseg2 3 sub{
/i2 exch def
/scode startc i2 getu16 def
/ecode endc i2 getu16 def
ecode lastcode gt{
/lastcode ecode def
}if
}for pop
firstcode 16#f000 ge lastcode firstcode sub 255 le and{
lastcode 255 and
/striptopbyte true def
}{
lastcode
}ifelse
1 add
array def
glyphs length 1024 ge{
.array1024z 0 1024 glyphs length 1023 sub{glyphs exch 2 index putinterval}for
glyphs dup length 1024 sub 3 -1 roll
putinterval
}{
0 1 glyphs length 1 sub{glyphs exch 0 put}for
}ifelse
/numcodes 0 def/code 0 def
0 2 nseg2 3 sub{
/i2 exch def
/scode startc i2 getu16 def
/ecode endc i2 getu16 def
numcodes scode firstcode sub
exch sub 0 .max dup/code exch code exch add def
ecode scode sub 1 add add numcodes add/numcodes exch def
/delta iddelta i2 gets16 def
TTFDEBUG{
(scode=)print scode =only
( ecode=)print ecode =only
( delta=)print delta =only
( droff=)print idroff i2 getu16 =
}if
idroff i2 getu16 dup 0 eq{
pop scode delta add 65535 and 1 ecode delta add 65535 and
striptopbyte{
/code scode 255 and def
}{
/code scode def
}ifelse
{putglyph}for
}{
/gloff exch 14 nseg2 3 mul add 2 add i2 add add def
striptopbyte{
/code scode 255 and def
}{
/code scode def
}ifelse
0 1 ecode scode sub{
2 mul gloff add etab exch getu16
dup 0 ne{delta add 65535 and}if putglyph
}for
}ifelse
}for glyphs/glyphs null def
}bind
6{
dup 6 getu16/firstcode exch def dup 8 getu16/ng exch def
firstcode ng add array
0 1 firstcode 1 sub{2 copy 0 put pop}for
dup firstcode ng getinterval
0 1 ng 1 sub{
dup 2 mul 10 add 4 index exch getu16 3 copy put pop pop
}for pop exch pop
}bind
.dicttomark readonly def
/cmaparray{
dup 0 getu16 cmapformats exch .knownget{
TTFDEBUG{
(cmap: format )print 1 index 0 getu16 = flush
}if exec
}{
(Can't handle format )print 0 getu16 = flush
0 1 255{}for 256 packedarray
}ifelse
TTFDEBUG{
(cmap: length=)print dup length = dup ==
}if
}bind def
/postremap mark
/Cdot/Cdotaccent
/Edot/Edotaccent
/Eoverdot/Edotaccent
/Gdot/Gdotaccent
/Ldot/Ldotaccent
/Zdot/Zdotaccent
/cdot/cdotaccent
/edot/edotaccent
/eoverdot/edotaccent
/gdot/gdotaccent
/ldot/ldotaccent
/zdot/zdotaccent
.dicttomark readonly def
/get_from_stringarray
{1 index type/stringtype eq{
get
}{
exch{
2 copy length ge{
length sub
}{
exch get exit
}ifelse
}forall
}ifelse
}bind def
/getinterval_from_stringarray
{
2 index type/stringtype eq{
getinterval
}{
string exch 0
4 3 roll{
dup length
dup 4 index lt{
3 index exch sub
exch pop 3 1 roll exch pop
}{
dup 3 1 roll
4 index sub
5 index length 4 index sub
2 copy gt{exch}if pop
dup 3 1 roll
5 index exch getinterval
5 index 4 index 3 index
getinterval
copy pop
exch pop add exch pop 0 exch
dup 3 index length ge{exit}if
}ifelse
}forall
pop pop
}ifelse
}bind def
/string_array_size
{dup type/stringtype eq{
length
}{
0 exch{length add}forall
}ifelse
}bind def
/postformats mark
16#00010000{
pop MacGlyphEncoding
}
16#00020000{
dup dup type/arraytype eq{0 get}if length 36 lt{
TTFDEBUG{(post format 2.0 invalid.)= flush}if
pop[]
}{
/postglyphs exch def
/post_first postglyphs dup type/arraytype eq{0 get}if def
post_first 32 getu16/numglyphs exch def
/glyphnames numglyphs 2 mul 34 add def
/postpos glyphnames def
/total_length postglyphs//string_array_size exec def
numglyphs array 0 1 numglyphs 1 sub{
postpos total_length ge{
1 numglyphs 1 sub{1 index exch/.notdef put}for
exit
}if
postglyphs postpos//get_from_stringarray exec
postglyphs postpos 1 add 2 index//getinterval_from_stringarray exec cvn
exch postpos add 1 add/postpos exch def
2 index 3 1 roll
put
}for
/postnames exch def
numglyphs array 0 1 numglyphs 1 sub{
dup 2 mul 34 add postglyphs exch 2//getinterval_from_stringarray exec
dup 0 get 8 bitshift exch 1 get add dup 258 lt{
MacGlyphEncoding exch get
}{
dup 32768 ge{
pop/.notdef
}{
258 sub dup postnames length ge{
TTFDEBUG{(   *** warning: glyph index past end of 'post' table)= flush}if
pop
exit
}if
postnames exch get
postremap 1 index .knownget{exch pop}if
}ifelse
}ifelse
2 index 3 1 roll put
}for
}
ifelse
}bind
16#00030000{
pop[]
}bind
.dicttomark readonly def
/first_post_string
{
post dup type/arraytype eq{0 get}if
}bind def
/.getpost{
/glyphencoding post null eq{
TTFDEBUG{(post missing)= flush}if[]
}{
postformats first_post_string 0 getu32 .knownget{
TTFDEBUG{
(post: format )print
first_post_string
dup 0 getu16 =only(,)print 2 getu16 = flush
}if
post exch exec
}{
TTFDEBUG{(post: unknown format )print post 0 getu32 = flush}if[]
}ifelse
}ifelse def
}bind def
/MacRomanEncoding[
StandardEncoding 0 39 getinterval aload pop
/quotesingle
StandardEncoding 40 56 getinterval aload pop
/grave
StandardEncoding 97 31 getinterval aload pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave
/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde
/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef
/florin/.notdef/.notdef/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/.notdef
/ydieresis/Ydieresis/fraction/currency
/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex
/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
]/Encoding defineresource pop
/TTParser<<
/Pos 0
/post null
>>def
/readu8
{read not{
mark(Insufficient data in the stream.)//error exec
}if
}bind def
/readu16
{dup//readu8 exec 8 bitshift exch//readu8 exec or
}bind def
/reads16
{//readu16 exec 16#8000 xor 16#8000 sub
}bind def
/readu32
{dup//readu16 exec 16 bitshift exch//readu16 exec or
}bind def
/reads32
{dup//reads16 exec 16 bitshift exch//readu16 exec or
}bind def
/SkipToPosition
{dup//TTParser/Pos get
exch//TTParser exch/Pos exch put
sub
//PDFR_DEBUG{
(Skipping )print dup//=only exec( bytes.)=
}if
dup 0 eq{
pop pop
}{
dup 3 1 roll
()/SubFileDecode filter
exch
{1 index//BlockBuffer readstring pop length
dup 0 eq{pop exch pop exit}if
sub
}loop
0 ne{
mark(Insufficient data in the stream for SkipToPosition.)//error exec
}if
}ifelse
}bind def
/TagBuffer 4 string def
/ParseTTTableDirectory
{//PDFR_DEBUG{
(ParseTTTableDirectory beg)=
}if
15 dict begin
dup//readu32 exec 16#00010000 ne{
mark(Unknown True Type version.)//error exec
}if
dup//readu16 exec/NumTables exch def
dup//readu16 exec/SearchRange exch def
dup//readu16 exec/EntrySelector exch def
dup//readu16 exec/RangeShift exch def
//PDFR_DEBUG{
(NumTables = )print NumTables =
}if
NumTables{
dup//TagBuffer readstring not{
mark(Could not read TT tag.)//error exec
}if
cvn
[2 index//readu32 exec pop
2 index//readu32 exec
3 index//readu32 exec
]
//PDFR_DEBUG{
2 copy exch//=only exec( )print ==
}if
def
}repeat
pop
//TTParser/Pos 12 NumTables 16 mul add put
currentdict end
//PDFR_DEBUG{
(ParseTTTableDirectory end)=
}if
}bind def
/ParseTTcmap
{//PDFR_DEBUG{
(ParseTTcmap beg)=
}if
/cmap get aload pop
3 1 roll
7 dict begin
//PDFR_DEBUG{
(Current position = )print//TTParser/Pos get =
(cmap position = )print dup =
}if
1 index exch//SkipToPosition exec
//TTParser/Pos get/TablePos exch def
dup//readu16 exec pop
dup//readu16 exec/NumEncodings exch def
//PDFR_DEBUG{
(NumEncodings = )print NumEncodings =
}if
null
NumEncodings{
1 index//readu32 exec
2 index//readu32 exec
3 array dup 3 2 roll 0 exch put
2 index null ne{
dup 0 get 3 index 0 get sub
3 index exch 1 exch put
}if
dup 4 3 roll pop 3 1 roll
def
}repeat
dup 0 get
4 3 roll exch sub
1 exch put
//PDFR_DEBUG{
currentdict{
exch dup type/integertype eq{
//PrintHex exec( )print ==
}{
pop pop
}ifelse
}forall
}if
4 NumEncodings 8 mul add/HeaderLength exch def
//TTParser/Pos//TTParser/Pos get HeaderLength add put
0
NumEncodings{
16#7FFFFFF null
currentdict{
1 index type/integertype eq{
exch pop dup 0 get
dup 5 index gt{
dup 4 index lt{
4 1 roll
exch pop exch pop
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}forall
//PDFR_DEBUG{
(Obtaining subtable for )print dup ==
}if
3 2 roll pop
3 copy pop
TablePos add//SkipToPosition exec
3 copy exch pop 1 get
//TTParser/Pos//TTParser/Pos get 3 index add put
string
readstring not{
mark(Can't read a cmap subtable.)//error exec
}if
2 exch put
}repeat
pop pop
currentdict end
//PDFR_DEBUG{
(ParseTTcmap end)=
}if
}bind def
/GetTTEncoding
{//PDFR_DEBUG{
(GetTTEncoding beg)=
}if
get
exch pop
2 get
10 dict begin
/TTFDEBUG//PDFR_DEBUG def
//cmaparray exec
end
//PDFR_DEBUG{
(GetTTEncoding end)=
dup ==
}if
}bind def
/InverseEncoding
{
256 dict begin
dup length 1 sub -1 0{
2 copy get
exch
1 index currentdict exch//knownget exec{
dup type/arraytype eq{
aload length 1 add array astore
}{
2 array astore
}ifelse
}if
def
}for
pop
currentdict end
}bind def
/GetMacRomanEncodingInverse
{//PDFReader/MacRomanEncodingInverse get
dup null eq{
pop
MacRomanEncoding//InverseEncoding exec
dup//PDFReader exch/MacRomanEncodingInverse exch put
}if
}bind def
/PutCharStringSingle
{
dup 3 index length lt{
2 index exch get
dup 0 ne{
def
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}bind def
/PutCharString
{1 index type/nametype ne{
mark(Bad charstring name)//error exec
}if
dup type/arraytype eq{
{
3 copy//PutCharStringSingle exec
pop pop
}forall
pop
}{
//PutCharStringSingle exec
}ifelse
}bind def
/ComposeCharStrings
{
//PDFR_DEBUG{
(ComposeCharStrings beg)=
}if
1 index length 1 add dict begin
/.notdef 0 def
exch
//TTParser/post get
dup null ne{
exch
1 index length 1 sub -1 0{
dup 3 index exch get exch
dup 0 eq 2 index/.notdef eq or{
pop pop
}{
def
}ifelse
}for
}if
exch pop exch
{
//PutCharString exec
}forall
pop
currentdict end
//PDFR_DEBUG{
(ComposeCharStrings end)=
}if
}bind def
/ParseTTpost
{
//PDFR_DEBUG{
(ParseTTpost beg)=
}if
/post get aload pop
3 1 roll
//PDFR_DEBUG{
(Current position = )print//TTParser/Pos get =
(post position = )print dup =
}if
1 index exch//SkipToPosition exec
//TTParser/Pos//TTParser/Pos get 4 index add put
exch dup 65535 le{
string
readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
}{
[3 1 roll
dup 16384 div floor cvi
exch 1 index 16384 mul
sub exch
1 sub 0 1 3 -1 roll
{
1 add index
16384 string readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
}for
counttomark -2 roll
string readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
]
}ifelse
1 dict begin
/post exch def
//.getpost exec
//TTParser/post glyphencoding put
//PDFR_DEBUG{
(ParseTTpost end)=
glyphencoding ==
}if
end
}bind def
/MakeTTCharStrings
{//MakeStreamReader exec
dup dup//ParseTTTableDirectory exec
//TTParser/post null put
dup/post//knownget exec{
0 get
1 index/cmap get 0 get
lt{
2 copy//ParseTTpost exec
//ParseTTcmap exec
}{
2 copy//ParseTTcmap exec
3 1 roll
//ParseTTpost exec
}ifelse
}{
//ParseTTcmap exec
}ifelse
{
dup 16#00030001 known{
//PDFR_DEBUG{
(Using the TT cmap encoding for Windows Unicode.)=
}if
16#00030001//GetTTEncoding exec
AdobeGlyphList//ComposeCharStrings exec
exit
}if
dup 16#00010000 known{
//PDFR_DEBUG{
(Using the TT cmap encoding for Macintosh Roman.)=
}if
16#00010000//GetTTEncoding exec
PDFEncoding dup null eq{
pop//GetMacRomanEncodingInverse exec
}{
//InverseEncoding exec
}ifelse
//ComposeCharStrings exec
exit
}if
dup 16#00030000 known{
//PDFR_DEBUG{
(Using the TT cmap encoding 3.0 - not sure why Ghostscript writes it since old versions.)=
}if
16#00030000//GetTTEncoding exec
PDFEncoding dup null eq{
pop//GetMacRomanEncodingInverse exec
}{
//InverseEncoding exec
}ifelse
//ComposeCharStrings exec
exit
}if
mark(True Type cmap has no useful encodings.)//error exec
}loop
//PDFR_DEBUG{
(CharStrings <<)=
dup{
exch
dup type/nametype eq{
//=only exec
}{
==
}ifelse
( )print ==
}forall
(>>)=
}if
}bind def
/ScaleVal
{
aload pop
1 index sub
3 2 roll mul add
}bind def
/ScaleArg
{
aload pop
1 index sub
3 1 roll
sub exch div
}bind def
/ScaleArgN
{
dup length 2 sub -2 0{
2
2 index 3 1 roll getinterval
3 2 roll
exch//ScaleArg exec
1 index length 2 idiv 1 add 1 roll
}for
pop
}bind def
/ComputeFunction_10
{
//PDFR_DEBUG{
(ComputeFunction_10 beg )print 1 index//=only exec( stack=)print count =
}if
exch
dup 1 eq{
pop dup length 1 sub get
}{
1 index length 1 sub mul
dup dup floor sub
dup 0 eq{
pop cvi get
}{
3 1 roll floor cvi
2 getinterval
aload pop
2 index mul 3 2 roll 1 exch sub 3 2 roll mul add
}ifelse
}ifelse
//PDFR_DEBUG{
(ComputeFunction_10 end )print dup//=only exec( stack=)print count =
}if
}bind def
/ComputeFunction_n0
{
//PDFR_DEBUG{
(ComputeFunction_n0 beg N=)print dup//=only exec( stack=)print count =
}if
dup 0 eq{
pop
}{
dup 2 add -1 roll
dup 3 index length 1 sub ge{
pop 1 sub
exch dup length 1 sub get exch
//PDFReader/ComputeFunction_n0 get exec
}{
dup floor cvi dup
4 index exch get
3 index dup
5 add copy
6 2 roll
pop pop pop pop
1 sub
//PDFReader/ComputeFunction_n0 get exec
3 2 roll pop
exch
4 3 roll exch
4 add 2 roll 1 add
3 2 roll exch get
exch 1 sub
//PDFReader/ComputeFunction_n0 get exec
1 index mul
3 1 roll
1 exch sub mul add
}ifelse
}ifelse
//PDFR_DEBUG{
(ComputeFunction_n0 end )print dup//=only exec( stack=)print count =
}if
}bind def
/FunctionToProc_x01
{
dup/Domain get exch
dup/Data get 0 get exch
/Size get length
[4 1 roll
//PDFR_DEBUG{
{(function beg, stack =)print count//=only exec(\n)print}/exec load
5 2 roll
}if
dup 1 gt{
{mark exch
3 add 2 roll
//ScaleArgN exec
counttomark dup
3 add -2 roll
pop exch
//ComputeFunction_n0 exec
}/exec load
}{
pop
3 1/roll load//ScaleArg/exec load
/exch load
//ComputeFunction_10/exec load
}ifelse
//PDFR_DEBUG{
(function end, stack =)/print load/count load//=only/exec load(\n)/print load
}if
]cvx
//PDFR_DEBUG{
(Made a procedure for the 1-result function :)=
dup ==
}if
}bind def
/FunctionProcDebugBeg
{(FunctionProcDebugBeg )print count =
}bind def
/FunctionProcDebugEnd
{(FunctionProcDebugEnd )print count =
}bind def
/FunctionToProc_x0n
{
PDFR_DEBUG{
(FunctionToProc_x0n beg m=)print dup =
}if
1 index/Size get length exch
dup 7 mul 2 add array
PDFR_DEBUG{
dup 0//FunctionProcDebugBeg put
}{
dup 0//DoNothing put
}ifelse
dup 1/exec load put
dup 2 5 index/Domain get put
2 index 1 eq{
dup 3//ScaleArg put
}{
dup 3//ScaleArgN put
}ifelse
dup 4/exec load put
1 index 1 sub 0 exch 1 exch{
dup 7 mul 5 add
1 index 4 index 1 sub ne{
dup 3 index exch 6 index put 1 add
dup 3 index exch/copy load put 1 add
}if
[
6 index/Data get 3 index get
6 index 1 eq{
//ComputeFunction_10/exec load
}{
6 index
//ComputeFunction_n0/exec load
}ifelse
]cvx
3 index exch 2 index exch put 1 add
2 index 1 index/exec load put 1 add
1 index 4 index 1 sub ne{
2 index 1 index 6 index 1 add put 1 add
2 index 1 index 1 put 1 add
2 index 1 index/roll load put
}if
pop pop
}for
PDFR_DEBUG{
dup dup length 2 sub//FunctionProcDebugEnd put
}{
dup dup length 2 sub//DoNothing put
}ifelse
dup dup length 1 sub/exec load put
cvx exch pop exch pop exch pop
//PDFR_DEBUG{
(Made a procedure for the n-argument function :)=
dup ==
}if
PDFR_DEBUG{
(FunctionToProc_x0n end)=
}if
}bind def
/MakeTableRec
{
0
exec
}bind def
/MakeTable
{//PDFR_DEBUG{
(MakeTable beg )print count =
}if
1 index/Size get exch
1 sub dup
3 1 roll
get
array
1 index 0 eq{
exch pop exch pop
}{
dup length 1 sub -1 0{
3 index 3 index//MakeTableRec exec
2 index 3 1 roll put
}for
exch pop exch pop
}ifelse
//PDFR_DEBUG{
(MakeTable end )print count =
}if
}bind def
//MakeTableRec 0//MakeTable put
/StoreSample
{
1 sub
dup 0 eq{
pop
}{
-1 1{
I exch get get
}for
}ifelse
I 0 get 3 2 roll put
}bind def
/ReadSample32
{
4{
File read not{
mark(Insufficient data for function.)//error exec
}if
}repeat
pop
3 1 roll exch
256 mul add 256 mul add
//1_24_bitshift_1_sub div
}bind def
/ReadSample
{
Buffer BitsLeft BitsPerSample
{2 copy ge{
exit
}if
3 1 roll
8 add 3 1 roll
256 mul File read not{
mark(Insufficient data for function.)//error exec
}if
add
3 1 roll
}loop
sub dup
2 index exch
neg bitshift
2 copy exch bitshift
4 3 roll exch sub
/Buffer exch def
exch/BitsLeft exch def
Div div
}bind def
/ReadSamplesRec
{0
exec
}bind def
/ReadSamples
{
//PDFR_DEBUG{
(ReadSamples beg )print count =
}if
dup 1 eq{
pop
0 1 Size 0 get 1 sub{
I exch 0 exch put
0 1 M 1 sub{
dup Range exch 2 mul 2 getinterval
//PDFR_DEBUG{
(Will read a sample ... )print
}if
BitsPerSample 32 eq{//ReadSample32}{//ReadSample}ifelse
exec exch//ScaleVal exec
//PDFR_DEBUG{
(value=)print dup =
}if
exch Table exch get
Size length//StoreSample exec
}for
}for
}{
1 sub
dup Size exch get 0 exch 1 exch 1 sub{
I exch 2 index exch put
dup//ReadSamplesRec exec
}for
pop
}ifelse
//PDFR_DEBUG{
(ReadSamples end )print count =
}if
}bind def
//ReadSamplesRec 0//ReadSamples put
/StreamToArray
{//PDFR_DEBUG{
(StreamToArray beg )print count =
}if
userdict/FuncDataReader get begin
dup/BitsPerSample get/BitsPerSample exch def
dup/Size get length/N exch def
dup/Range get length 2 idiv/M exch def
1 BitsPerSample bitshift 1 sub/Div exch def
/BitsLeft 0 def
/Buffer 0 def
dup/Size get/Size exch def
dup/Range get/Range exch def
/File 1 index//MakeStreamReader exec def
/I[N{0}repeat]def
M array
dup length 1 sub -1 0{
2 index N//MakeTable exec
2 index 3 1 roll put
}for
/Table exch def
N//ReadSamples exec
PDFR_DEBUG{
(Table = )print Table ==
}if
/Data Table put
end
//PDFR_DEBUG{
(StreamToArray end )print count =
}if
}bind def
/FunctionToProc10
{
PDFR_DEBUG{
(FunctionToProc10 beg, Range = )print dup/Range get ==
}if
dup/Order//knownget exec{
1 ne{
(Underimplemented function Type 0 Order 3.)=
}if
}if
dup//StreamToArray exec
dup/Range get length dup 2 eq{
pop//FunctionToProc_x01 exec
}{
2 idiv//FunctionToProc_x0n exec
}ifelse
PDFR_DEBUG{
(FunctionToProc10 end)=
}if
}bind def
/FunctionToProc12
{begin
currentdict/C0//knownget exec{length 1 eq}{true}ifelse{
N
currentdict/C0//knownget exec{
0 get
}{
0
}ifelse
currentdict/C1//knownget exec{
0 get
}{
1
}ifelse
1 index sub
[4 1 roll
{
4 2 roll
exp mul add
}aload pop
]cvx
}{
[
0 1 C0 length 1 sub{
N
C0 2 index get
C1 3 index get
4 3 roll pop
1 index sub
[/dup load
5 2 roll
{
4 2 roll
exp mul add
exch
}aload pop
]cvx
/exec load
}for
/pop load
]cvx
}ifelse
end
//PDFR_DEBUG{
(FunctionType2Proc : )print dup ==
}if
}bind def
/FunctionToProc14
{//MakeStreamReader exec cvx exec
//PDFR_DEBUG{
(FunctionType4Proc : )print dup ==
}if
}bind def
/FunctionToProc1
{
dup/FunctionType get
{dup 0 eq{
pop//FunctionToProc10 exec exit
}if
dup 2 eq{
pop//FunctionToProc12 exec exit
}if
dup 4 eq{
pop//FunctionToProc14 exec exit
}if
mark exch(Function type )exch( isn't implemented yet.)//error exec
}loop
}bind def
/FunctionToProc20
{
PDFR_DEBUG{
(FunctionToProc20, Range = )print dup/Range get ==
}if
dup/Order//knownget exec{
1 ne{
(Underimplemented function Type 0 Order 3.)=
}if
}if
dup//StreamToArray exec
dup/Range get length dup 2 eq{
pop//FunctionToProc_x01 exec
}{
2 idiv//FunctionToProc_x0n exec
}ifelse
}bind def
/FunctionToProc
{//PDFR_DEBUG{
(FunctionToProc beg )print count =
}if
dup type/dicttype eq{
dup/Domain get length 2 idiv
{
dup 1 eq{
pop//FunctionToProc1 exec exit
}if
dup 2 eq{
pop//FunctionToProc20 exec exit
}if
mark(Functions with many arguments aren't implemented yet.)//error exec
}loop
}{
//PDFR_DEBUG{(Not a function dict, assume already a procedure.)print}if
}ifelse
//PDFR_DEBUG{
(FunctionToProc end )print count =
}if
}bind def
/spotfunctions mark
/Round{
abs exch abs 2 copy add 1 le{
dup mul exch dup mul add 1 exch sub
}{
1 sub dup mul exch 1 sub dup mul add 1 sub
}ifelse
}
/Diamond{
abs exch abs 2 copy add .75 le{
dup mul exch dup mul add 1 exch sub
}{
2 copy add 1.23 le{
.85 mul add 1 exch sub
}{
1 sub dup mul exch 1 sub dup mul add 1 sub
}ifelse
}ifelse
}
/Ellipse{
abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt{
pop dup mul exch .75 div dup mul add 4 div 1 exch sub
}{
dup 1 gt{
pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub
}{
.5 exch sub exch pop exch pop
}ifelse
}ifelse
}
/EllipseA{dup mul .9 mul exch dup mul add 1 exch sub}
/InvertedEllipseA{dup mul .9 mul exch dup mul add 1 sub}
/EllipseB{dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub}
/EllipseC{dup mul .9 mul exch dup mul add 1 exch sub}
/InvertedEllipseC{dup mul .9 mul exch dup mul add 1 sub}
/Line{exch pop abs neg}
/LineX{pop}
/LineY{exch pop}
/Square{abs exch abs 2 copy lt{exch}if pop neg}
/Cross{abs exch abs 2 copy gt{exch}if pop neg}
/Rhomboid{abs exch abs 0.9 mul add 2 div}
/DoubleDot{2{360 mul sin 2 div exch}repeat add}
/InvertedDoubleDot{2{360 mul sin 2 div exch}repeat add neg}
/SimpleDot{dup mul exch dup mul add 1 exch sub}
/InvertedSimpleDot{dup mul exch dup mul add 1 sub}
/CosineDot{180 mul cos exch 180 mul cos add 2 div}
/Double{exch 2 div exch 2{360 mul sin 2 div exch}repeat add}
/InvertedDouble{
exch 2 div exch 2{360 mul sin 2 div exch}repeat add neg
}
.dicttomark readonly def
/CheckColorSpace
{
dup type/arraytype ne{
mark(Resource )3 index( must be an array.)//error exec
}if
}bind def
/SubstitutePDFColorSpaceRec
{0
exec
}bind def
/SubstitutePDFColorSpace
{
{
dup 0 get/Pattern eq{
dup length 1 gt{
dup dup 1//CheckColorSpace//ResolveA exec
dup type/nametype ne{
//SubstitutePDFColorSpaceRec exec
}if
1 exch put
}if
exit
}if
dup 0 get/Indexed eq{
exit
}if
dup 0 get/Separation eq{
dup dup 2//CheckColorSpace//ResolveA exec
dup type/nametype ne{
//SubstitutePDFColorSpaceRec exec
}if
2 exch put
exit
}if
dup 0 get/CalGray eq{
1 get
dup/Gamma//knownget exec{
[exch[exch/exp load]cvx dup dup]
1 index exch/DecodeLMN exch put
}if
[exch/CIEBasedA exch]
exit
}if
dup 0 get/CalRGB eq{
1 get
dup/Matrix//knownget exec{
1 index exch/MatrixLMN exch put
}if
dup/Gamma//knownget exec{
aload pop
[exch/exp load]cvx
3 1 roll
[exch/exp load]cvx
3 1 roll
[exch/exp load]cvx
3 1 roll
3 array astore
1 index exch/DecodeLMN exch put
}if
[exch/CIEBasedABC exch]
exit
}if
dup 0 get/Lab eq{
1 get
begin
currentdict/Range//knownget exec{aload pop}{-100 100 -100 100}ifelse
0 100 6 2 roll 6 array astore
/RangeABC exch def
/DecodeABC[{16 add 116 div}bind{500 div}bind{200 div}bind]def
/MatrixABC[1 1 1 1 0 0 0 0 -1]def
{dup 6 29 div ge{dup dup mul mul}{4 29 div sub 108 841 div mul}ifelse}
/DecodeLMN[
[3 index aload pop WhitePoint 0 get/mul load]cvx
[4 index aload pop WhitePoint 1 get/mul load]cvx
[5 index aload pop WhitePoint 2 get/mul load]cvx
]def pop
//PDFR_DEBUG{
(Constructed from Lab <<)=
currentdict{exch = ==}forall
(>>)=
}if
[/CIEBasedABC currentdict]
end
exit
pop
}if
dup 0 get/CIEBasedA eq{exit}if
dup 0 get/CIEBasedABC eq{exit}if
mark exch(Unimplemented color space )exch//error exec
}loop
}bind def
//SubstitutePDFColorSpaceRec 0//SubstitutePDFColorSpace put
/ResolveArrayElement
{2 copy get
dup type dup/arraytype eq exch
/packedarraytype eq or{
dup length 1 ge exch xcheck and{
2 copy get
dup 0 get type/integertype eq
1 index 1 get type dup/arraytype
eq exch
/packedarraytype eq or
and{
exec
2 index 4 1 roll put
}{
pop pop
}ifelse
}{
pop
}ifelse
}{
pop pop
}ifelse
}bind def
/ResolveColorSpaceArrayRec
{0
exec
}bind def
/SetColorSpaceSafe
{
PDFR_DEBUG{
(SetColorSpaceSafe beg)=
}if
currentcolorspace dup type/arraytype eq{
1 index type/arraytype eq{
dup length 2 index length eq{
false exch
dup length 0 exch 1 exch 1 sub{
dup
4 index exch get exch
2 index exch get
ne{
exch pop true exch exit
}if
}for
pop
{
setcolorspace
}{
pop
}ifelse
}{
pop setcolorspace
}ifelse
}{
pop setcolorspace
}ifelse
}{
pop setcolorspace
}ifelse
PDFR_DEBUG{
(SetColorSpaceSafe end)=
}if
}bind def
/ResolveColorSpaceArray
{
//PDFR_DEBUG{
(ResolveColorSpaceArray beg )print dup ==
}if
dup 0 get/Indexed eq{
1//ResolveArrayElement exec
dup dup 1 get
dup type/arraytype eq{
//SubstitutePDFColorSpace exec
//ResolveColorSpaceArrayRec exec
1 exch put
}{
pop pop
}ifelse
}if
dup 0 get/Separation eq{
dup dup 1 get UnPDFEscape 1 exch put
3//ResolveArrayElement exec
dup 3 get//FunctionToProc exec
2 copy 3 exch put
pop
}if
dup 0 get/Pattern eq{
dup length 1 gt{
dup 1 get dup type/arraytype eq{
ResolveColorSpaceArray
1 index 1 3 -1 roll put
}{
pop
}ifelse
}if
}if
PDFR_DEBUG{
(Construcrted color space :)=
dup ==
}if
//PDFR_DEBUG{
(ResolveColorSpaceArray end )print dup ==
}if
}bind def
//ResolveColorSpaceArrayRec 0//ResolveColorSpaceArray put
/ResolveColorSpace
{
//PDFR_DEBUG{
(ResolveColorSpace beg )print dup =
}if
dup//SimpleColorSpaceNames exch known not{
dup//PDFColorSpaces exch//knownget exec{
exch pop
//PDFR_DEBUG{
(ResolveColorSpace known )=
}if
}{
dup
//PDFReader/CurrentObject get/Context get/Resources get
/ColorSpace//DoNothing//ResolveD exec
exch//CheckColorSpace//ResolveD exec
dup type/arraytype eq{
//SubstitutePDFColorSpace exec
//ResolveColorSpaceArray exec
dup//PDFColorSpaces 4 2 roll put
}if
}ifelse
}if
//PDFR_DEBUG{
(ResolveColorSpace end )print dup ==
}if
}bind def
/CheckPattern
{
dup/PatternType//knownget exec{
dup 1 ne{
mark(Resource )4 index( is a shading, which can't be handled at level 2. )//error exec
}if
pop
}if
dup/Type knownget{
/Pattern ne{
mark(Resource )4 index( must have /Type/Pattern .)//error exec
}if
}if
}bind def
/PaintProc
{/Context get
//RunDelayedStream exec
}bind def
/ResolvePattern
{
dup
userdict/PDFR_Patterns get
exch//knownget exec{
exch pop
}{
dup
//PDFReader/CurrentObject get/Context get/Resources get
/Pattern//DoNothing//ResolveD exec
exch//CheckPattern//ResolveD exec
dup dup/Context exch put
dup/Resources//DoNothing//ResolveD exec pop
dup/PaintProc//PaintProc put
gsave userdict/PDFR_InitialGS get setgstate
currentglobal exch false setglobal
dup/Matrix get
makepattern
exch setglobal
grestore
dup userdict/PDFR_Patterns get
4 2 roll
put
}ifelse
}bind def
/SetColor
{//PDFR_DEBUG{
(SetColor beg)=
}if
currentcolorspace dup type/nametype eq{
pop setcolor
}{
0 get/Pattern eq{
//ResolvePattern exec setpattern
}{
setcolor
}ifelse
}ifelse
//PDFR_DEBUG{
(SetColor end)=
}if
}bind def
/ImageKeys 15 dict begin
/BPC/BitsPerComponent def
/CS/ColorSpace def
/D/Decode def
/DP/DecodeParms def
/F/Filter def
/H/Height def
/IM/ImageMask def
/I/Interpolate def
/W/Width def
currentdict end readonly def
/ImageValues 15 dict begin
/G/DeviceGray def
/RGB/DeviceRGB def
/CMYK/DeviceCMYK def
/I/Indexed def
/AHx/ASCIIHexDecode def
/A85/ASCII85Decode def
/LZW/LZWDecode def
/Fl/FlateDecode def
/RL/RunLengthDecode def
/CCF/CCITTFaxDecode def
/DCT/DCTDecode def
currentdict end readonly def
/GetColorSpaceRange
{2 index/ColorSpace get
dup type/arraytype eq{
1 get
}if
exch//knownget exec{
exch pop
}if
}bind def
/DecodeArrays 15 dict begin
/DeviceGray{[0 1]}def
/DeviceRGB{[0 1 0 1 0 1]}def
/DeviceCMYK{[0 1 0 1 0 1 0 1]}def
/Indexed{
dup/BitsPerComponent get 1 exch bitshift 1 sub[exch 0 exch]
}def
/Separation{[0 1]}def
/CIEBasedA{[0 1]/RangeA//GetColorSpaceRange exec}def
/CIEBasedABC{[0 1 0 1 0 1]/RangeABC//GetColorSpaceRange exec}def
currentdict end readonly def
/Substitute
{1 index//knownget exec{
exch pop
}if
}bind def
/DebugImagePrinting
{
//PDFR_DEBUG{
(Image :)=
dup{exch//=only exec( )print ==
}forall
}if
}bind def
/CompleteImage
{
dup/ColorSpace known{
dup/ColorSpace//CheckColorSpace//ResolveD exec pop
}if
dup/Decode known not{
dup/ColorSpace//knownget exec{
dup type/arraytype eq{
0 get
}if
//DecodeArrays exch get exec
}{
[0 1]
}ifelse
1 index exch/Decode exch put
}if
dup/ImageMatrix[2 index/Width get 0 0 5 index/Height get neg
0 7 index/Height get]put
//DebugImagePrinting exec
}bind def
/CompleteInlineImage
{
//PDFR_DEBUG{
(CompleteInlineImage beg)=
}if
dup/ImageType known not{
dup/ImageType 1 put
}if
dup length dict exch{
exch//ImageKeys//Substitute exec
dup/Filter eq{
exch//ImageValues//Substitute exec exch
}if
dup/ColorSpace eq{
exch
dup//ImageValues exch//knownget exec{
exch pop
}{
//ResolveColorSpace exec
}ifelse
exch
}if
exch
2 index 3 1 roll put
}forall
//CompleteImage exec
dup/DataSource 2 copy get
2 index//AppendFilters exec put
//PDFR_DEBUG{
(CompleteInlineImage end)=
}if
}bind def
/CompleteOutlineImage
{
currentglobal exch dup gcheck setglobal
//PDFR_DEBUG{
(CompleteOutlineImage beg)=
}if
dup dup//MakeStreamReader exec/DataSource exch put
dup/ImageType known not{
//CompleteImage exec
dup/ImageType 1 put
dup/ColorSpace known{
dup/ColorSpace//CheckColorSpace//ResolveD exec
dup type/arraytype eq{
//ResolveColorSpaceArray exec
//SubstitutePDFColorSpace exec
1 index exch/ColorSpace exch put
}{
pop
}ifelse
}if
}if
//PDFR_DEBUG{
(CompleteOutlineImage end)=
}if
exch setglobal
}bind def
/DoImage
{
//PDFR_DEBUG{
(DoImage beg)=
}if
gsave
dup/ColorSpace//knownget exec{setcolorspace}if
dup/ImageMask//knownget exec not{false}if
{imagemask}{image}ifelse
grestore
//PDFR_DEBUG{
(DoImage end)=
}if
}bind def
/GSave
{
gsave
//PDFReader/GraphicStateStackPointer get
dup//GraphicStateStack exch get null eq{
dup//GraphicStateStack exch//InitialGraphicState length dict put
}if
dup//GraphicStateStack exch get
//GraphicState exch copy pop
1 add//PDFReader exch/GraphicStateStackPointer exch put
}bind def
/GRestore
{
grestore
//PDFReader/GraphicStateStackPointer get
1 sub dup
//PDFReader exch/GraphicStateStackPointer exch put
//GraphicStateStack exch get
//GraphicState copy pop
}bind def
/SetFont
{dup//GraphicState exch/FontSize exch put
//ResolveAndSetFont exec
//GraphicState/FontMatrixNonHV currentfont/FontMatrix get 1 get 0 ne put
}bind def
/ShowText
{//GraphicState/TextRenderingMode get 0 eq{
//GraphicState/WordSpacing get 0
32
//GraphicState/CharacterSpacing get 0
6 5 roll
//GraphicState/FontMatrixNonHV get{
[
7 -2 roll pop
5 -2 roll pop
5 -1 roll
{
exch
pop
3 index add
exch 2 index eq{3 index add}if
4 1 roll
}
currentfont/FontMatrix get 0 get 0 ne{
1 1 index length 1 sub getinterval cvx
}if
5 index
cshow
pop pop pop]
xshow
}{
awidthshow
}ifelse
}{
//GraphicState/CharacterSpacing get 0 eq
//GraphicState/FontMatrixNonHV get not and
//GraphicState/WordSpacing get 0 eq and{
true charpath
}{
{
exch
pop 0
currentpoint 5 4 roll
( )dup 0 3 index put true charpath
5 1 roll
moveto rmoveto
//GraphicState/CharacterSpacing get 0 rmoveto
32 eq{
//GraphicState/WordSpacing get 0 rmoveto
}if
}
//GraphicState/FontMatrixNonHV get dup not exch{
pop currentfont/FontMatrix get 0 get 0 ne
}if{
1 1 index length 1 sub getinterval cvx
}if
exch cshow
}ifelse
}ifelse
}bind def
/ShowTextBeg
{//GraphicState/TextRenderingMode get 0 ne{
currentpoint newpath moveto
}if
}bind def
/ShowTextEnd
{//GraphicState/TextRenderingMode get
{dup 1 eq{
stroke exit
}if
dup 2 eq{
gsave fill grestore stroke exit
}if
dup 3 eq{
currentpoint newpath moveto
}if
dup 4 eq{
gsave fill grestore clip exit
}if
dup 5 eq{
gsave stroke grestore clip exit
}if
dup 6 eq{
gsave fill grestore gsave stroke grestore fill exit
}if
dup 7 eq{
clip exit
}if
exit
}loop
pop
}bind def
/ShowTextWithGlyphPositioning
{//ShowTextBeg exec
{dup type/stringtype eq{
//ShowText exec
}{
neg 1000 div//GraphicState/FontSize get mul 0 rmoveto
}ifelse
}forall
//ShowTextEnd exec
}bind def
/CheckFont
{dup/Type get/ExtGState ne{
mark(Resource )3 index( must have /Type/ExtGState.)//error exec
}if
}bind def
/SetTransfer
{
//PDFR_DEBUG{(SetTransfer beg )print count =}if
dup type/arraytype eq 1 index xcheck not and{
0 4 getinterval aload pop
setcolortransfer
}{
settransfer
}ifelse
//PDFR_DEBUG{(SetTransfer end )print count =}if
}bind def
/CheckExtGState
{dup/Type get/ExtGState ne{
mark(Resource )3 index( must have /Type/ExtGState.)//error exec
}if
}bind def
/CheckHalftone
{dup/HalftoneType known not{
mark(Resource )3 index( must have /HalftoneType.)//error exec
}if
}bind def
/ResolveFunction
{
//PDFR_DEBUG{(ResolveFunction beg )print dup = count =}if
2 copy get//IsObjRef exec{
2 copy//DoNothing//ResolveD exec
3 copy put pop
}if
2 copy get dup type/arraytype eq exch xcheck and not{
2 copy get
dup type/arraytype eq 1 index xcheck not and{
dup length 1 sub -1 0{
2 copy//DoNothing ResolveA
dup/Identity eq{
pop 2 copy{}put
}{
//FunctionToProc exec
3 copy put pop
}ifelse
pop
}for
}{
dup/Default eq{
}{
dup/Identity eq{
pop{}
}{dup type/nametype eq{
//spotfunctions exch get
}{
//FunctionToProc exec
}ifelse
}ifelse
}ifelse
}ifelse
3 copy put
exch pop
}{
1 index exch get
}ifelse
//PDFR_DEBUG{(ResolveFunction end )print dup == count =}if
}bind def
/ResolveFunctionSafe
{2 copy known{
//ResolveFunction exec
}if
pop
}bind def
/CreateHalftoneThresholds
{
dup/Thresholds known not{
dup/HalftoneType get 10 eq{
dup dup//MakeStreamReader exec
/Thresholds exch put
}if
dup/HalftoneType get dup 3 eq exch 6 eq or{
dup dup//MakeStreamReader exec
//BlockBuffer readstring pop
dup length
dup 0 eq{
mark(Could not read Thresholds)//error exec
}if
string copy/Thresholds exch put
dup/HalftoneType 3 put
}if
}if
}bind def
/SetExtGState
{
//PDFReader/CurrentObject get/Context get/Resources get
/ExtGState//DoNothing//ResolveD exec
exch//CheckExtGState//ResolveD exec
dup/LW//knownget exec{
setlinewidth
}if
dup/LC//knownget exec{
setlinecap
}if
dup/LJ//knownget exec{
setlinejoin
}if
dup/ML//knownget exec{
setmeterlimit
}if
dup/D//knownget exec{
setdash
}if
dup/RI//knownget exec{
mark(Unimplemented ExtGState.RI)//error exec
}if
dup/OP//knownget exec{
setoverprint
}if
dup/op//knownget exec{
setoverprint
}if
dup/OPM//knownget exec{
mark(Unimplemented ExtGState.OPM)//error exec
}if
dup/Font//knownget exec{
mark(Unimplemented ExtGState.Font)//error exec
}if
dup/BG known{
/BG//ResolveFunction exec
setblackgeneration
}if
dup/BG2 known{
/BG2//ResolveFunction exec
dup/Default eq{
//InitialExtGState/BG2 get
}if
setblackgeneration
}if
dup/UCR known{
/UCR//ResolveFunction exec
setundercolorremoval
}if
dup/UCR2 known{
/UCR2//ResolveFunction exec
dup/Default eq{
//InitialExtGState/UCR2 get
}if
setundercolorremoval
}if
dup/TR known{
/TR//ResolveFunction exec
//SetTransfer exec
}if
dup/TR2 known{
/TR2//ResolveFunction exec
dup/Default eq{
pop//InitialExtGState/TR2 get
aload pop setcolortransfer
}{
//SetTransfer exec
}ifelse
}if
dup/HT//knownget exec{
dup/Default eq{
pop//InitialExtGState/HT get
sethalftone
}{
//PDFR_DEBUG{(Ht beg)=}if
pop dup/HT//CheckHalftone//ResolveD exec
/SpotFunction//ResolveFunctionSafe exec
/TransferFunction//ResolveFunctionSafe exec
null exch
dup/HalftoneType get dup 5 eq exch dup 4 eq exch 2 eq or or{
dup{
dup//IsObjRef exec{
pop
1 index exch//CheckHalftone ResolveD
}if
dup type/dicttype eq{
dup/SpotFunction//ResolveFunctionSafe exec
/TransferFunction//ResolveFunctionSafe exec
//CreateHalftoneThresholds exec
dup/HalftoneType get 5 gt{
4 3 roll pop
dup 4 1 roll
}if
}if
pop pop
}forall
}if
//CreateHalftoneThresholds exec
//PDFR_DEBUG{
(HT:)=
dup{
1 index/Default eq{
(Default <<)=
exch pop
{exch = ==}forall
(>>)=
}{
exch = ==
}ifelse
}forall
(HT end)= flush
}if
exch dup null ne{
(Warning: Ignoring a halftone with a Level 3 component halftone Type )print dup/HalftoneType get =
pop pop
}{
pop
dup/HalftoneType get 5 gt{
(Warning: Ignoring a Level 3 halftone Type )print dup/HalftoneType get =
pop
}{
sethalftone
}ifelse
}ifelse
//PDFR_DEBUG{(HT set)= flush}if
}ifelse
}if
dup/FL//knownget exec{
setflattness
}if
dup/SM//knownget exec{
setsmoothness
}if
dup/SA//knownget exec{
setstrokeadjust
}if
dup/BM//knownget exec{
mark(Unimplemented ExtGState.BM)//error exec
}if
dup/SMask//knownget exec{
mark(Unimplemented ExtGState.SMask)//error exec
}if
dup/CA//knownget exec{
mark(Unimplemented ExtGState.CA)//error exec
}if
dup/ca//knownget exec{
mark(Unimplemented ExtGState.ca)//error exec
}if
dup/AIS//knownget exec{
mark(Unimplemented ExtGState.AIS)//error exec
}if
dup/TK//knownget exec{
mark(Unimplemented ExtGState.TK)//error exec
}if
pop
}bind def
/CheckXObject
{dup/Subtype get dup/Image ne exch dup/Form ne exch/PS ne and and{
mark(Resource )3 index( must have /Subtype /Image or /Form or /PS.)//error exec
}if
}bind def
/DoXObject
{
//PDFReader/CurrentObject get/Context get/Resources get
/XObject//DoNothing//ResolveD exec
exch//CheckXObject//ResolveD exec
dup/Subtype get
dup/Image eq{
pop
//CompleteOutlineImage exec
//DoImage exec
}{
dup/PS eq{
PDFR_DEBUG{
(Executing a PS Xobject)=
}if
pop
//RunDelayedStream exec
}{
dup/Form eq{
pop
PDFR_DEBUG{
(Executing a Form XObject)=
}if
//PDFReader/CurrentObject get exch
dup//PDFReader exch<< exch/Context exch >>/CurrentObject exch put
dup/Matrix get concat
dup/BBox get aload pop exch 3 index sub exch 2 index sub rectclip
//RunDelayedStream exec
//PDFReader exch/CurrentObject exch put
}{
mark exch(unimplemented XObject type )exch//error exec
}ifelse
}ifelse
}ifelse
}bind def
/Operators 50 dict begin
/q{//GSave exec}bind def
/Q{//GRestore exec}bind def
/cm{//TempMatrix astore concat}bind def
/i{1 .min setflat}bind def
/J/setlinecap load def
/d/setdash load def
/j/setlinejoin load def
/w/setlinewidth load def
/M/setmiterlimit load def
/gs{SetExtGState}bind def
/g/setgray load def
/rg/setrgbcolor load def
/k/setcmykcolor load def
/cs{//ResolveColorSpace exec//SetColorSpaceSafe exec
}bind def
/sc/setcolor load def
/scn{//SetColor exec}bind def
/G/setgray load def
/RG/setrgbcolor load def
/K/setcmykcolor load def
/CS//cs def
/ri{SetColorRenderingIntent}bind def
/SC/setcolor load def
/SCN{//SetColor exec}bind def
/m/moveto load def
/l/lineto load def
/c/curveto load def
/v{currentpoint 6 2 roll curveto}bind def
/y{2 copy curveto}bind def
/re{
4 2 roll moveto exch dup 0 rlineto 0 3 -1 roll rlineto neg 0 rlineto
closepath
}def
/h/closepath load def
/n/newpath load def
/S/stroke load def
/s{closepath stroke}bind def
/f/fill load def
/f*/eofill load def
/B{gsave fill grestore stroke}bind def
/b{closepath gsave fill grestore stroke}bind def
/B*{gsave eofill grestore stroke}bind def
/b*{closepath gsave eofill grestore stroke}bind def
/W/clip load def
/W*/eoclip load def
/sh{
ResolveShading
dup/Background known{
gsave
dup/ColorSpace get setcolorspace
dup/Background get aload pop setcolor
pathbbox
2 index sub exch 3 index sub exch
rectfill
grestore
}if
shfill
}bind def
/Do{//DoXObject exec}bind def
/BI{currentglobal false setglobal<<}bind def
/ID{>>
dup/DataSource currentfile
2 index/F//knownget exec{
/A85 eq{
0(~>)/SubFileDecode filter
}if
}if
put
//CompleteInlineImage exec
exch setglobal
//DoImage exec
}bind def
/EI{}bind def
/BT{gsave//GraphicState/InitialTextMatrix get currentmatrix pop}bind def
/ET{grestore}bind def
/Tc{//GraphicState exch/CharacterSpacing exch put}bind def
/TL{//GraphicState exch/TextLeading exch put}bind def
/Tr{//GraphicState exch/TextRenderingMode exch put}bind def
/Ts{
mark(Unimplemented SetTextRise)//error exec
}bind def
/Tw{//GraphicState exch/WordSpacing exch put}bind def
/Tz{
mark(Unimplemented SetHorizontalTextScaling)//error exec
}bind def
/Td{translate 0 0 moveto}bind def
/TD{dup neg//TL exec//Td exec}bind def
/Tm{//GraphicState/InitialTextMatrix get setmatrix
//TempMatrix astore concat
0 0 moveto}bind def
/T*{0//GraphicState/TextLeading get neg//Td exec}bind def
/Tj{//ShowTextBeg exec//ShowText exec//ShowTextEnd exec}bind def
/'{//T* exec//ShowText exec//ShowTextEnd exec}bind def
/"{3 2 roll//Tw exec exch//Tc exec//' exec}bind def
/TJ//ShowTextWithGlyphPositioning def
/Tf//SetFont def
/d0/setcharwidth load def
/d1/setcachedevice load def
/BDC{pop pop}bind def
/BMC{pop}bind def
/EMC{}bind def
/BX{BeginCompatibilitySection}bind def
/EX{EndCompatibilitySection}bind def
/DP{DefineMarkedContentPointWithPropertyList}bind def
/MP{DefineMarkedContentPoint}bind def
/PS{cvx exec}bind def
currentdict end def
//PDFR_STREAM{
//Operators length dict begin
//Operators{
exch dup
[exch//=only/exec load
( )/print load
8 7 roll
dup type/arraytype eq{
/exec load
}if
( )/print load
]cvx
def
}forall
currentdict end/Operators exch def
}if
/.registerencoding
{pop pop
}bind def
/.defineencoding
{def
}bind def
/.findencoding
{load
}bind def
/currentglobal where
{pop currentglobal{setglobal}true setglobal}
{{}}
ifelse
/MacRomanEncoding
StandardEncoding 0 39 getinterval aload pop
/quotesingle
StandardEncoding 40 56 getinterval aload pop
/grave
StandardEncoding 97 31 getinterval aload pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave
/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde
/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef
/florin/.notdef/.notdef/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/.notdef
/ydieresis/Ydieresis/fraction/currency
/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex
/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
256 packedarray
5 1 index .registerencoding
.defineencoding
exec
/AdobeGlyphList mark
/A 16#0041
/AE 16#00c6
/AEacute 16#01fc
/AEmacron 16#01e2
/AEsmall 16#f7e6
/Aacute 16#00c1
/Aacutesmall 16#f7e1
/Abreve 16#0102
/Abreveacute 16#1eae
/Abrevecyrillic 16#04d0
/Abrevedotbelow 16#1eb6
/Abrevegrave 16#1eb0
/Abrevehookabove 16#1eb2
/Abrevetilde 16#1eb4
/Acaron 16#01cd
/Acircle 16#24b6
/Acircumflex 16#00c2
/Acircumflexacute 16#1ea4
/Acircumflexdotbelow 16#1eac
/Acircumflexgrave 16#1ea6
/Acircumflexhookabove 16#1ea8
/Acircumflexsmall 16#f7e2
/Acircumflextilde 16#1eaa
/Acute 16#f6c9
/Acutesmall 16#f7b4
/Acyrillic 16#0410
/Adblgrave 16#0200
/Adieresis 16#00c4
/Adieresiscyrillic 16#04d2
/Adieresismacron 16#01de
/Adieresissmall 16#f7e4
/Adotbelow 16#1ea0
/Adotmacron 16#01e0
/Agrave 16#00c0
/Agravesmall 16#f7e0
/Ahookabove 16#1ea2
/Aiecyrillic 16#04d4
/Ainvertedbreve 16#0202
/Alpha 16#0391
/Alphatonos 16#0386
/Amacron 16#0100
/Amonospace 16#ff21
/Aogonek 16#0104
/Aring 16#00c5
/Aringacute 16#01fa
/Aringbelow 16#1e00
/Aringsmall 16#f7e5
/Asmall 16#f761
/Atilde 16#00c3
/Atildesmall 16#f7e3
/Aybarmenian 16#0531
/B 16#0042
/Bcircle 16#24b7
/Bdotaccent 16#1e02
/Bdotbelow 16#1e04
/Becyrillic 16#0411
/Benarmenian 16#0532
/Beta 16#0392
/Bhook 16#0181
/Blinebelow 16#1e06
/Bmonospace 16#ff22
/Brevesmall 16#f6f4
/Bsmall 16#f762
/Btopbar 16#0182
/C 16#0043
/Caarmenian 16#053e
/Cacute 16#0106
/Caron 16#f6ca
/Caronsmall 16#f6f5
/Ccaron 16#010c
/Ccedilla 16#00c7
/Ccedillaacute 16#1e08
/Ccedillasmall 16#f7e7
/Ccircle 16#24b8
/Ccircumflex 16#0108
/Cdot 16#010a
/Cdotaccent 16#010a
/Cedillasmall 16#f7b8
/Chaarmenian 16#0549
/Cheabkhasiancyrillic 16#04bc
/Checyrillic 16#0427
/Chedescenderabkhasiancyrillic 16#04be
/Chedescendercyrillic 16#04b6
/Chedieresiscyrillic 16#04f4
/Cheharmenian 16#0543
/Chekhakassiancyrillic 16#04cb
/Cheverticalstrokecyrillic 16#04b8
/Chi 16#03a7
/Chook 16#0187
/Circumflexsmall 16#f6f6
/Cmonospace 16#ff23
/Coarmenian 16#0551
/Csmall 16#f763
/D 16#0044
/DZ 16#01f1
/DZcaron 16#01c4
/Daarmenian 16#0534
/Dafrican 16#0189
/Dcaron 16#010e
/Dcedilla 16#1e10
/Dcircle 16#24b9
/Dcircumflexbelow 16#1e12
/Dcroat 16#0110
/Ddotaccent 16#1e0a
/Ddotbelow 16#1e0c
/Decyrillic 16#0414
/Deicoptic 16#03ee
/Delta 16#2206
/Deltagreek 16#0394
/Dhook 16#018a
/Dieresis 16#f6cb
/DieresisAcute 16#f6cc
/DieresisGrave 16#f6cd
/Dieresissmall 16#f7a8
/Digammagreek 16#03dc
/Djecyrillic 16#0402
/Dlinebelow 16#1e0e
/Dmonospace 16#ff24
/Dotaccentsmall 16#f6f7
/Dslash 16#0110
/Dsmall 16#f764
/Dtopbar 16#018b
/Dz 16#01f2
/Dzcaron 16#01c5
/Dzeabkhasiancyrillic 16#04e0
/Dzecyrillic 16#0405
/Dzhecyrillic 16#040f
/E 16#0045
/Eacute 16#00c9
/Eacutesmall 16#f7e9
/Ebreve 16#0114
/Ecaron 16#011a
/Ecedillabreve 16#1e1c
/Echarmenian 16#0535
/Ecircle 16#24ba
/Ecircumflex 16#00ca
/Ecircumflexacute 16#1ebe
/Ecircumflexbelow 16#1e18
/Ecircumflexdotbelow 16#1ec6
/Ecircumflexgrave 16#1ec0
/Ecircumflexhookabove 16#1ec2
/Ecircumflexsmall 16#f7ea
/Ecircumflextilde 16#1ec4
/Ecyrillic 16#0404
/Edblgrave 16#0204
/Edieresis 16#00cb
/Edieresissmall 16#f7eb
/Edot 16#0116
/Edotaccent 16#0116
/Edotbelow 16#1eb8
/Efcyrillic 16#0424
/Egrave 16#00c8
/Egravesmall 16#f7e8
/Eharmenian 16#0537
/Ehookabove 16#1eba
/Eightroman 16#2167
/Einvertedbreve 16#0206
/Eiotifiedcyrillic 16#0464
/Elcyrillic 16#041b
/Elevenroman 16#216a
/Emacron 16#0112
/Emacronacute 16#1e16
/Emacrongrave 16#1e14
/Emcyrillic 16#041c
/Emonospace 16#ff25
/Encyrillic 16#041d
/Endescendercyrillic 16#04a2
/Eng 16#014a
/Enghecyrillic 16#04a4
/Enhookcyrillic 16#04c7
/Eogonek 16#0118
/Eopen 16#0190
/Epsilon 16#0395
/Epsilontonos 16#0388
/Ercyrillic 16#0420
/Ereversed 16#018e
/Ereversedcyrillic 16#042d
/Escyrillic 16#0421
/Esdescendercyrillic 16#04aa
/Esh 16#01a9
/Esmall 16#f765
/Eta 16#0397
/Etarmenian 16#0538
/Etatonos 16#0389
/Eth 16#00d0
/Ethsmall 16#f7f0
/Etilde 16#1ebc
/Etildebelow 16#1e1a
/Euro 16#20ac
/Ezh 16#01b7
/Ezhcaron 16#01ee
/Ezhreversed 16#01b8
/F 16#0046
/Fcircle 16#24bb
/Fdotaccent 16#1e1e
/Feharmenian 16#0556
/Feicoptic 16#03e4
/Fhook 16#0191
/Fitacyrillic 16#0472
/Fiveroman 16#2164
/Fmonospace 16#ff26
/Fourroman 16#2163
/Fsmall 16#f766
/G 16#0047
/GBsquare 16#3387
/Gacute 16#01f4
/Gamma 16#0393
/Gammaafrican 16#0194
/Gangiacoptic 16#03ea
/Gbreve 16#011e
/Gcaron 16#01e6
/Gcedilla 16#0122
/Gcircle 16#24bc
/Gcircumflex 16#011c
/Gcommaaccent 16#0122
/Gdot 16#0120
/Gdotaccent 16#0120
/Gecyrillic 16#0413
/Ghadarmenian 16#0542
/Ghemiddlehookcyrillic 16#0494
/Ghestrokecyrillic 16#0492
/Gheupturncyrillic 16#0490
/Ghook 16#0193
/Gimarmenian 16#0533
/Gjecyrillic 16#0403
/Gmacron 16#1e20
/Gmonospace 16#ff27
/Grave 16#f6ce
/Gravesmall 16#f760
/Gsmall 16#f767
/Gsmallhook 16#029b
/Gstroke 16#01e4
/H 16#0048
/H18533 16#25cf
/H18543 16#25aa
/H18551 16#25ab
/H22073 16#25a1
/HPsquare 16#33cb
/Haabkhasiancyrillic 16#04a8
/Hadescendercyrillic 16#04b2
/Hardsigncyrillic 16#042a
/Hbar 16#0126
/Hbrevebelow 16#1e2a
/Hcedilla 16#1e28
/Hcircle 16#24bd
/Hcircumflex 16#0124
/Hdieresis 16#1e26
/Hdotaccent 16#1e22
/Hdotbelow 16#1e24
/Hmonospace 16#ff28
/Hoarmenian 16#0540
/Horicoptic 16#03e8
/Hsmall 16#f768
/Hungarumlaut 16#f6cf
/Hungarumlautsmall 16#f6f8
/Hzsquare 16#3390
/I 16#0049
/IAcyrillic 16#042f
/IJ 16#0132
/IUcyrillic 16#042e
/Iacute 16#00cd
/Iacutesmall 16#f7ed
/Ibreve 16#012c
/Icaron 16#01cf
/Icircle 16#24be
/Icircumflex 16#00ce
/Icircumflexsmall 16#f7ee
/Icyrillic 16#0406
/Idblgrave 16#0208
/Idieresis 16#00cf
/Idieresisacute 16#1e2e
/Idieresiscyrillic 16#04e4
/Idieresissmall 16#f7ef
/Idot 16#0130
/Idotaccent 16#0130
/Idotbelow 16#1eca
/Iebrevecyrillic 16#04d6
/Iecyrillic 16#0415
/Ifraktur 16#2111
/Igrave 16#00cc
/Igravesmall 16#f7ec
/Ihookabove 16#1ec8
/Iicyrillic 16#0418
/Iinvertedbreve 16#020a
/Iishortcyrillic 16#0419
/Imacron 16#012a
/Imacroncyrillic 16#04e2
/Imonospace 16#ff29
/Iniarmenian 16#053b
/Iocyrillic 16#0401
/Iogonek 16#012e
/Iota 16#0399
/Iotaafrican 16#0196
/Iotadieresis 16#03aa
/Iotatonos 16#038a
/Ismall 16#f769
/Istroke 16#0197
/Itilde 16#0128
/Itildebelow 16#1e2c
/Izhitsacyrillic 16#0474
/Izhitsadblgravecyrillic 16#0476
/J 16#004a
/Jaarmenian 16#0541
/Jcircle 16#24bf
/Jcircumflex 16#0134
/Jecyrillic 16#0408
/Jheharmenian 16#054b
/Jmonospace 16#ff2a
/Jsmall 16#f76a
/K 16#004b
/KBsquare 16#3385
/KKsquare 16#33cd
/Kabashkircyrillic 16#04a0
/Kacute 16#1e30
/Kacyrillic 16#041a
/Kadescendercyrillic 16#049a
/Kahookcyrillic 16#04c3
/Kappa 16#039a
/Kastrokecyrillic 16#049e
/Kaverticalstrokecyrillic 16#049c
/Kcaron 16#01e8
/Kcedilla 16#0136
/Kcircle 16#24c0
/Kcommaaccent 16#0136
/Kdotbelow 16#1e32
/Keharmenian 16#0554
/Kenarmenian 16#053f
/Khacyrillic 16#0425
/Kheicoptic 16#03e6
/Khook 16#0198
/Kjecyrillic 16#040c
/Klinebelow 16#1e34
/Kmonospace 16#ff2b
/Koppacyrillic 16#0480
/Koppagreek 16#03de
/Ksicyrillic 16#046e
/Ksmall 16#f76b
/L 16#004c
/LJ 16#01c7
/LL 16#f6bf
/Lacute 16#0139
/Lambda 16#039b
/Lcaron 16#013d
/Lcedilla 16#013b
/Lcircle 16#24c1
/Lcircumflexbelow 16#1e3c
/Lcommaaccent 16#013b
/Ldot 16#013f
/Ldotaccent 16#013f
/Ldotbelow 16#1e36
/Ldotbelowmacron 16#1e38
/Liwnarmenian 16#053c
/Lj 16#01c8
/Ljecyrillic 16#0409
/Llinebelow 16#1e3a
/Lmonospace 16#ff2c
/Lslash 16#0141
/Lslashsmall 16#f6f9
/Lsmall 16#f76c
/M 16#004d
/MBsquare 16#3386
/Macron 16#f6d0
/Macronsmall 16#f7af
/Macute 16#1e3e
/Mcircle 16#24c2
/Mdotaccent 16#1e40
/Mdotbelow 16#1e42
/Menarmenian 16#0544
/Mmonospace 16#ff2d
/Msmall 16#f76d
/Mturned 16#019c
/Mu 16#039c
/N 16#004e
/NJ 16#01ca
/Nacute 16#0143
/Ncaron 16#0147
/Ncedilla 16#0145
/Ncircle 16#24c3
/Ncircumflexbelow 16#1e4a
/Ncommaaccent 16#0145
/Ndotaccent 16#1e44
/Ndotbelow 16#1e46
/Nhookleft 16#019d
/Nineroman 16#2168
/Nj 16#01cb
/Njecyrillic 16#040a
/Nlinebelow 16#1e48
/Nmonospace 16#ff2e
/Nowarmenian 16#0546
/Nsmall 16#f76e
/Ntilde 16#00d1
/Ntildesmall 16#f7f1
/Nu 16#039d
/O 16#004f
/OE 16#0152
/OEsmall 16#f6fa
/Oacute 16#00d3
/Oacutesmall 16#f7f3
/Obarredcyrillic 16#04e8
/Obarreddieresiscyrillic 16#04ea
/Obreve 16#014e
/Ocaron 16#01d1
/Ocenteredtilde 16#019f
/Ocircle 16#24c4
/Ocircumflex 16#00d4
/Ocircumflexacute 16#1ed0
/Ocircumflexdotbelow 16#1ed8
/Ocircumflexgrave 16#1ed2
/Ocircumflexhookabove 16#1ed4
/Ocircumflexsmall 16#f7f4
/Ocircumflextilde 16#1ed6
/Ocyrillic 16#041e
/Odblacute 16#0150
/Odblgrave 16#020c
/Odieresis 16#00d6
/Odieresiscyrillic 16#04e6
/Odieresissmall 16#f7f6
/Odotbelow 16#1ecc
/Ogoneksmall 16#f6fb
/Ograve 16#00d2
/Ogravesmall 16#f7f2
/Oharmenian 16#0555
/Ohm 16#2126
/Ohookabove 16#1ece
/Ohorn 16#01a0
/Ohornacute 16#1eda
/Ohorndotbelow 16#1ee2
/Ohorngrave 16#1edc
/Ohornhookabove 16#1ede
/Ohorntilde 16#1ee0
/Ohungarumlaut 16#0150
/Oi 16#01a2
/Oinvertedbreve 16#020e
/Omacron 16#014c
/Omacronacute 16#1e52
/Omacrongrave 16#1e50
/Omega 16#2126
/Omegacyrillic 16#0460
/Omegagreek 16#03a9
/Omegaroundcyrillic 16#047a
/Omegatitlocyrillic 16#047c
/Omegatonos 16#038f
/Omicron 16#039f
/Omicrontonos 16#038c
/Omonospace 16#ff2f
/Oneroman 16#2160
/Oogonek 16#01ea
/Oogonekmacron 16#01ec
/Oopen 16#0186
/Oslash 16#00d8
/Oslashacute 16#01fe
/Oslashsmall 16#f7f8
/Osmall 16#f76f
/Ostrokeacute 16#01fe
/Otcyrillic 16#047e
/Otilde 16#00d5
/Otildeacute 16#1e4c
/Otildedieresis 16#1e4e
/Otildesmall 16#f7f5
/P 16#0050
/Pacute 16#1e54
/Pcircle 16#24c5
/Pdotaccent 16#1e56
/Pecyrillic 16#041f
/Peharmenian 16#054a
/Pemiddlehookcyrillic 16#04a6
/Phi 16#03a6
/Phook 16#01a4
/Pi 16#03a0
/Piwrarmenian 16#0553
/Pmonospace 16#ff30
/Psi 16#03a8
/Psicyrillic 16#0470
/Psmall 16#f770
/Q 16#0051
/Qcircle 16#24c6
/Qmonospace 16#ff31
/Qsmall 16#f771
/R 16#0052
/Raarmenian 16#054c
/Racute 16#0154
/Rcaron 16#0158
/Rcedilla 16#0156
/Rcircle 16#24c7
/Rcommaaccent 16#0156
/Rdblgrave 16#0210
/Rdotaccent 16#1e58
/Rdotbelow 16#1e5a
/Rdotbelowmacron 16#1e5c
/Reharmenian 16#0550
/Rfraktur 16#211c
/Rho 16#03a1
/Ringsmall 16#f6fc
/Rinvertedbreve 16#0212
/Rlinebelow 16#1e5e
/Rmonospace 16#ff32
/Rsmall 16#f772
/Rsmallinverted 16#0281
/Rsmallinvertedsuperior 16#02b6
/S 16#0053
/SF010000 16#250c
/SF020000 16#2514
/SF030000 16#2510
/SF040000 16#2518
/SF050000 16#253c
/SF060000 16#252c
/SF070000 16#2534
/SF080000 16#251c
/SF090000 16#2524
/SF100000 16#2500
/SF110000 16#2502
/SF190000 16#2561
/SF200000 16#2562
/SF210000 16#2556
/SF220000 16#2555
/SF230000 16#2563
/SF240000 16#2551
/SF250000 16#2557
/SF260000 16#255d
/SF270000 16#255c
/SF280000 16#255b
/SF360000 16#255e
/SF370000 16#255f
/SF380000 16#255a
/SF390000 16#2554
/SF400000 16#2569
/SF410000 16#2566
/SF420000 16#2560
/SF430000 16#2550
/SF440000 16#256c
/SF450000 16#2567
/SF460000 16#2568
/SF470000 16#2564
/SF480000 16#2565
/SF490000 16#2559
/SF500000 16#2558
/SF510000 16#2552
/SF520000 16#2553
/SF530000 16#256b
/SF540000 16#256a
/Sacute 16#015a
/Sacutedotaccent 16#1e64
/Sampigreek 16#03e0
/Scaron 16#0160
/Scarondotaccent 16#1e66
/Scaronsmall 16#f6fd
/Scedilla 16#015e
/Schwa 16#018f
/Schwacyrillic 16#04d8
/Schwadieresiscyrillic 16#04da
/Scircle 16#24c8
/Scircumflex 16#015c
/Scommaaccent 16#0218
/Sdotaccent 16#1e60
/Sdotbelow 16#1e62
/Sdotbelowdotaccent 16#1e68
/Seharmenian 16#054d
/Sevenroman 16#2166
/Shaarmenian 16#0547
/Shacyrillic 16#0428
/Shchacyrillic 16#0429
/Sheicoptic 16#03e2
/Shhacyrillic 16#04ba
/Shimacoptic 16#03ec
/Sigma 16#03a3
/Sixroman 16#2165
/Smonospace 16#ff33
/Softsigncyrillic 16#042c
/Ssmall 16#f773
/Stigmagreek 16#03da
/T 16#0054
/Tau 16#03a4
/Tbar 16#0166
/Tcaron 16#0164
/Tcedilla 16#0162
/Tcircle 16#24c9
/Tcircumflexbelow 16#1e70
/Tcommaaccent 16#0162
/Tdotaccent 16#1e6a
/Tdotbelow 16#1e6c
/Tecyrillic 16#0422
/Tedescendercyrillic 16#04ac
/Tenroman 16#2169
/Tetsecyrillic 16#04b4
/Theta 16#0398
/Thook 16#01ac
/Thorn 16#00de
/Thornsmall 16#f7fe
/Threeroman 16#2162
/Tildesmall 16#f6fe
/Tiwnarmenian 16#054f
/Tlinebelow 16#1e6e
/Tmonospace 16#ff34
/Toarmenian 16#0539
/Tonefive 16#01bc
/Tonesix 16#0184
/Tonetwo 16#01a7
/Tretroflexhook 16#01ae
/Tsecyrillic 16#0426
/Tshecyrillic 16#040b
/Tsmall 16#f774
/Twelveroman 16#216b
/Tworoman 16#2161
/U 16#0055
/Uacute 16#00da
/Uacutesmall 16#f7fa
/Ubreve 16#016c
/Ucaron 16#01d3
/Ucircle 16#24ca
/Ucircumflex 16#00db
/Ucircumflexbelow 16#1e76
/Ucircumflexsmall 16#f7fb
/Ucyrillic 16#0423
/Udblacute 16#0170
/Udblgrave 16#0214
/Udieresis 16#00dc
/Udieresisacute 16#01d7
/Udieresisbelow 16#1e72
/Udieresiscaron 16#01d9
/Udieresiscyrillic 16#04f0
/Udieresisgrave 16#01db
/Udieresismacron 16#01d5
/Udieresissmall 16#f7fc
/Udotbelow 16#1ee4
/Ugrave 16#00d9
/Ugravesmall 16#f7f9
/Uhookabove 16#1ee6
/Uhorn 16#01af
/Uhornacute 16#1ee8
/Uhorndotbelow 16#1ef0
/Uhorngrave 16#1eea
/Uhornhookabove 16#1eec
/Uhorntilde 16#1eee
/Uhungarumlaut 16#0170
/Uhungarumlautcyrillic 16#04f2
/Uinvertedbreve 16#0216
/Ukcyrillic 16#0478
/Umacron 16#016a
/Umacroncyrillic 16#04ee
/Umacrondieresis 16#1e7a
/Umonospace 16#ff35
/Uogonek 16#0172
/Upsilon 16#03a5
/Upsilon1 16#03d2
/Upsilonacutehooksymbolgreek 16#03d3
/Upsilonafrican 16#01b1
/Upsilondieresis 16#03ab
/Upsilondieresishooksymbolgreek 16#03d4
/Upsilonhooksymbol 16#03d2
/Upsilontonos 16#038e
/Uring 16#016e
/Ushortcyrillic 16#040e
/Usmall 16#f775
/Ustraightcyrillic 16#04ae
/Ustraightstrokecyrillic 16#04b0
/Utilde 16#0168
/Utildeacute 16#1e78
/Utildebelow 16#1e74
/V 16#0056
/Vcircle 16#24cb
/Vdotbelow 16#1e7e
/Vecyrillic 16#0412
/Vewarmenian 16#054e
/Vhook 16#01b2
/Vmonospace 16#ff36
/Voarmenian 16#0548
/Vsmall 16#f776
/Vtilde 16#1e7c
/W 16#0057
/Wacute 16#1e82
/Wcircle 16#24cc
/Wcircumflex 16#0174
/Wdieresis 16#1e84
/Wdotaccent 16#1e86
/Wdotbelow 16#1e88
/Wgrave 16#1e80
/Wmonospace 16#ff37
/Wsmall 16#f777
/X 16#0058
/Xcircle 16#24cd
/Xdieresis 16#1e8c
/Xdotaccent 16#1e8a
/Xeharmenian 16#053d
/Xi 16#039e
/Xmonospace 16#ff38
/Xsmall 16#f778
/Y 16#0059
/Yacute 16#00dd
/Yacutesmall 16#f7fd
/Yatcyrillic 16#0462
/Ycircle 16#24ce
/Ycircumflex 16#0176
/Ydieresis 16#0178
/Ydieresissmall 16#f7ff
/Ydotaccent 16#1e8e
/Ydotbelow 16#1ef4
/Yericyrillic 16#042b
/Yerudieresiscyrillic 16#04f8
/Ygrave 16#1ef2
/Yhook 16#01b3
/Yhookabove 16#1ef6
/Yiarmenian 16#0545
/Yicyrillic 16#0407
/Yiwnarmenian 16#0552
/Ymonospace 16#ff39
/Ysmall 16#f779
/Ytilde 16#1ef8
/Yusbigcyrillic 16#046a
/Yusbigiotifiedcyrillic 16#046c
/Yuslittlecyrillic 16#0466
/Yuslittleiotifiedcyrillic 16#0468
/Z 16#005a
/Zaarmenian 16#0536
/Zacute 16#0179
/Zcaron 16#017d
/Zcaronsmall 16#f6ff
/Zcircle 16#24cf
/Zcircumflex 16#1e90
/Zdot 16#017b
/Zdotaccent 16#017b
/Zdotbelow 16#1e92
/Zecyrillic 16#0417
/Zedescendercyrillic 16#0498
/Zedieresiscyrillic 16#04de
/Zeta 16#0396
/Zhearmenian 16#053a
/Zhebrevecyrillic 16#04c1
/Zhecyrillic 16#0416
/Zhedescendercyrillic 16#0496
/Zhedieresiscyrillic 16#04dc
/Zlinebelow 16#1e94
/Zmonospace 16#ff3a
/Zsmall 16#f77a
/Zstroke 16#01b5
/a 16#0061
/aabengali 16#0986
/aacute 16#00e1
/aadeva 16#0906
/aagujarati 16#0a86
/aagurmukhi 16#0a06
/aamatragurmukhi 16#0a3e
/aarusquare 16#3303
/aavowelsignbengali 16#09be
/aavowelsigndeva 16#093e
/aavowelsigngujarati 16#0abe
/abbreviationmarkarmenian 16#055f
/abbreviationsigndeva 16#0970
/abengali 16#0985
/abopomofo 16#311a
/abreve 16#0103
/abreveacute 16#1eaf
/abrevecyrillic 16#04d1
/abrevedotbelow 16#1eb7
/abrevegrave 16#1eb1
/abrevehookabove 16#1eb3
/abrevetilde 16#1eb5
/acaron 16#01ce
/acircle 16#24d0
/acircumflex 16#00e2
/acircumflexacute 16#1ea5
/acircumflexdotbelow 16#1ead
/acircumflexgrave 16#1ea7
/acircumflexhookabove 16#1ea9
/acircumflextilde 16#1eab
/acute 16#00b4
/acutebelowcmb 16#0317
/acutecmb 16#0301
/acutecomb 16#0301
/acutedeva 16#0954
/acutelowmod 16#02cf
/acutetonecmb 16#0341
/acyrillic 16#0430
/adblgrave 16#0201
/addakgurmukhi 16#0a71
/adeva 16#0905
/adieresis 16#00e4
/adieresiscyrillic 16#04d3
/adieresismacron 16#01df
/adotbelow 16#1ea1
/adotmacron 16#01e1
/ae 16#00e6
/aeacute 16#01fd
/aekorean 16#3150
/aemacron 16#01e3
/afii00208 16#2015
/afii08941 16#20a4
/afii10017 16#0410
/afii10018 16#0411
/afii10019 16#0412
/afii10020 16#0413
/afii10021 16#0414
/afii10022 16#0415
/afii10023 16#0401
/afii10024 16#0416
/afii10025 16#0417
/afii10026 16#0418
/afii10027 16#0419
/afii10028 16#041a
/afii10029 16#041b
/afii10030 16#041c
/afii10031 16#041d
/afii10032 16#041e
/afii10033 16#041f
/afii10034 16#0420
/afii10035 16#0421
/afii10036 16#0422
/afii10037 16#0423
/afii10038 16#0424
/afii10039 16#0425
/afii10040 16#0426
/afii10041 16#0427
/afii10042 16#0428
/afii10043 16#0429
/afii10044 16#042a
/afii10045 16#042b
/afii10046 16#042c
/afii10047 16#042d
/afii10048 16#042e
/afii10049 16#042f
/afii10050 16#0490
/afii10051 16#0402
/afii10052 16#0403
/afii10053 16#0404
/afii10054 16#0405
/afii10055 16#0406
/afii10056 16#0407
/afii10057 16#0408
/afii10058 16#0409
/afii10059 16#040a
/afii10060 16#040b
/afii10061 16#040c
/afii10062 16#040e
/afii10063 16#f6c4
/afii10064 16#f6c5
/afii10065 16#0430
/afii10066 16#0431
/afii10067 16#0432
/afii10068 16#0433
/afii10069 16#0434
/afii10070 16#0435
/afii10071 16#0451
/afii10072 16#0436
/afii10073 16#0437
/afii10074 16#0438
/afii10075 16#0439
/afii10076 16#043a
/afii10077 16#043b
/afii10078 16#043c
/afii10079 16#043d
/afii10080 16#043e
/afii10081 16#043f
/afii10082 16#0440
/afii10083 16#0441
/afii10084 16#0442
/afii10085 16#0443
/afii10086 16#0444
/afii10087 16#0445
/afii10088 16#0446
/afii10089 16#0447
/afii10090 16#0448
/afii10091 16#0449
/afii10092 16#044a
/afii10093 16#044b
/afii10094 16#044c
/afii10095 16#044d
/afii10096 16#044e
/afii10097 16#044f
/afii10098 16#0491
/afii10099 16#0452
/afii10100 16#0453
/afii10101 16#0454
/afii10102 16#0455
/afii10103 16#0456
/afii10104 16#0457
/afii10105 16#0458
/afii10106 16#0459
/afii10107 16#045a
/afii10108 16#045b
/afii10109 16#045c
/afii10110 16#045e
/afii10145 16#040f
/afii10146 16#0462
/afii10147 16#0472
/afii10148 16#0474
/afii10192 16#f6c6
/afii10193 16#045f
/afii10194 16#0463
/afii10195 16#0473
/afii10196 16#0475
/afii10831 16#f6c7
/afii10832 16#f6c8
/afii10846 16#04d9
/afii299 16#200e
/afii300 16#200f
/afii301 16#200d
/afii57381 16#066a
/afii57388 16#060c
/afii57392 16#0660
/afii57393 16#0661
/afii57394 16#0662
/afii57395 16#0663
/afii57396 16#0664
/afii57397 16#0665
/afii57398 16#0666
/afii57399 16#0667
/afii57400 16#0668
/afii57401 16#0669
/afii57403 16#061b
/afii57407 16#061f
/afii57409 16#0621
/afii57410 16#0622
/afii57411 16#0623
/afii57412 16#0624
/afii57413 16#0625
/afii57414 16#0626
/afii57415 16#0627
/afii57416 16#0628
/afii57417 16#0629
/afii57418 16#062a
/afii57419 16#062b
/afii57420 16#062c
/afii57421 16#062d
/afii57422 16#062e
/afii57423 16#062f
/afii57424 16#0630
/afii57425 16#0631
/afii57426 16#0632
/afii57427 16#0633
/afii57428 16#0634
/afii57429 16#0635
/afii57430 16#0636
/afii57431 16#0637
/afii57432 16#0638
/afii57433 16#0639
/afii57434 16#063a
/afii57440 16#0640
/afii57441 16#0641
/afii57442 16#0642
/afii57443 16#0643
/afii57444 16#0644
/afii57445 16#0645
/afii57446 16#0646
/afii57448 16#0648
/afii57449 16#0649
/afii57450 16#064a
/afii57451 16#064b
/afii57452 16#064c
/afii57453 16#064d
/afii57454 16#064e
/afii57455 16#064f
/afii57456 16#0650
/afii57457 16#0651
/afii57458 16#0652
/afii57470 16#0647
/afii57505 16#06a4
/afii57506 16#067e
/afii57507 16#0686
/afii57508 16#0698
/afii57509 16#06af
/afii57511 16#0679
/afii57512 16#0688
/afii57513 16#0691
/afii57514 16#06ba
/afii57519 16#06d2
/afii57534 16#06d5
/afii57636 16#20aa
/afii57645 16#05be
/afii57658 16#05c3
/afii57664 16#05d0
/afii57665 16#05d1
/afii57666 16#05d2
/afii57667 16#05d3
/afii57668 16#05d4
/afii57669 16#05d5
/afii57670 16#05d6
/afii57671 16#05d7
/afii57672 16#05d8
/afii57673 16#05d9
/afii57674 16#05da
/afii57675 16#05db
/afii57676 16#05dc
/afii57677 16#05dd
/afii57678 16#05de
/afii57679 16#05df
/afii57680 16#05e0
/afii57681 16#05e1
/afii57682 16#05e2
/afii57683 16#05e3
/afii57684 16#05e4
/afii57685 16#05e5
/afii57686 16#05e6
/afii57687 16#05e7
/afii57688 16#05e8
/afii57689 16#05e9
/afii57690 16#05ea
/afii57694 16#fb2a
/afii57695 16#fb2b
/afii57700 16#fb4b
/afii57705 16#fb1f
/afii57716 16#05f0
/afii57717 16#05f1
/afii57718 16#05f2
/afii57723 16#fb35
/afii57793 16#05b4
/afii57794 16#05b5
/afii57795 16#05b6
/afii57796 16#05bb
/afii57797 16#05b8
/afii57798 16#05b7
/afii57799 16#05b0
/afii57800 16#05b2
/afii57801 16#05b1
/afii57802 16#05b3
/afii57803 16#05c2
/afii57804 16#05c1
/afii57806 16#05b9
/afii57807 16#05bc
/afii57839 16#05bd
/afii57841 16#05bf
/afii57842 16#05c0
/afii57929 16#02bc
/afii61248 16#2105
/afii61289 16#2113
/afii61352 16#2116
/afii61573 16#202c
/afii61574 16#202d
/afii61575 16#202e
/afii61664 16#200c
/afii63167 16#066d
/afii64937 16#02bd
/agrave 16#00e0
/agujarati 16#0a85
/agurmukhi 16#0a05
/ahiragana 16#3042
/ahookabove 16#1ea3
/aibengali 16#0990
/aibopomofo 16#311e
/aideva 16#0910
/aiecyrillic 16#04d5
/aigujarati 16#0a90
/aigurmukhi 16#0a10
/aimatragurmukhi 16#0a48
/ainarabic 16#0639
/ainfinalarabic 16#feca
/aininitialarabic 16#fecb
/ainmedialarabic 16#fecc
/ainvertedbreve 16#0203
/aivowelsignbengali 16#09c8
/aivowelsigndeva 16#0948
/aivowelsigngujarati 16#0ac8
/akatakana 16#30a2
/akatakanahalfwidth 16#ff71
/akorean 16#314f
/alef 16#05d0
/alefarabic 16#0627
/alefdageshhebrew 16#fb30
/aleffinalarabic 16#fe8e
/alefhamzaabovearabic 16#0623
/alefhamzaabovefinalarabic 16#fe84
/alefhamzabelowarabic 16#0625
/alefhamzabelowfinalarabic 16#fe88
/alefhebrew 16#05d0
/aleflamedhebrew 16#fb4f
/alefmaddaabovearabic 16#0622
/alefmaddaabovefinalarabic 16#fe82
/alefmaksuraarabic 16#0649
/alefmaksurafinalarabic 16#fef0
/alefmaksurainitialarabic 16#fef3
/alefmaksuramedialarabic 16#fef4
/alefpatahhebrew 16#fb2e
/alefqamatshebrew 16#fb2f
/aleph 16#2135
/allequal 16#224c
/alpha 16#03b1
/alphatonos 16#03ac
/amacron 16#0101
/amonospace 16#ff41
/ampersand 16#0026
/ampersandmonospace 16#ff06
/ampersandsmall 16#f726
/amsquare 16#33c2
/anbopomofo 16#3122
/angbopomofo 16#3124
/angkhankhuthai 16#0e5a
/angle 16#2220
/anglebracketleft 16#3008
/anglebracketleftvertical 16#fe3f
/anglebracketright 16#3009
/anglebracketrightvertical 16#fe40
/angleleft 16#2329
/angleright 16#232a
/angstrom 16#212b
/anoteleia 16#0387
/anudattadeva 16#0952
/anusvarabengali 16#0982
/anusvaradeva 16#0902
/anusvaragujarati 16#0a82
/aogonek 16#0105
/apaatosquare 16#3300
/aparen 16#249c
/apostrophearmenian 16#055a
/apostrophemod 16#02bc
/apple 16#f8ff
/approaches 16#2250
/approxequal 16#2248
/approxequalorimage 16#2252
/approximatelyequal 16#2245
/araeaekorean 16#318e
/araeakorean 16#318d
/arc 16#2312
/arighthalfring 16#1e9a
/aring 16#00e5
/aringacute 16#01fb
/aringbelow 16#1e01
/arrowboth 16#2194
/arrowdashdown 16#21e3
/arrowdashleft 16#21e0
/arrowdashright 16#21e2
/arrowdashup 16#21e1
/arrowdblboth 16#21d4
/arrowdbldown 16#21d3
/arrowdblleft 16#21d0
/arrowdblright 16#21d2
/arrowdblup 16#21d1
/arrowdown 16#2193
/arrowdownleft 16#2199
/arrowdownright 16#2198
/arrowdownwhite 16#21e9
/arrowheaddownmod 16#02c5
/arrowheadleftmod 16#02c2
/arrowheadrightmod 16#02c3
/arrowheadupmod 16#02c4
/arrowhorizex 16#f8e7
/arrowleft 16#2190
/arrowleftdbl 16#21d0
/arrowleftdblstroke 16#21cd
/arrowleftoverright 16#21c6
/arrowleftwhite 16#21e6
/arrowright 16#2192
/arrowrightdblstroke 16#21cf
/arrowrightheavy 16#279e
/arrowrightoverleft 16#21c4
/arrowrightwhite 16#21e8
/arrowtableft 16#21e4
/arrowtabright 16#21e5
/arrowup 16#2191
/arrowupdn 16#2195
/arrowupdnbse 16#21a8
/arrowupdownbase 16#21a8
/arrowupleft 16#2196
/arrowupleftofdown 16#21c5
/arrowupright 16#2197
/arrowupwhite 16#21e7
/arrowvertex 16#f8e6
/asciicircum 16#005e
/asciicircummonospace 16#ff3e
/asciitilde 16#007e
/asciitildemonospace 16#ff5e
/ascript 16#0251
/ascriptturned 16#0252
/asmallhiragana 16#3041
/asmallkatakana 16#30a1
/asmallkatakanahalfwidth 16#ff67
/asterisk 16#002a
/asteriskaltonearabic 16#066d
/asteriskarabic 16#066d
/asteriskmath 16#2217
/asteriskmonospace 16#ff0a
/asterisksmall 16#fe61
/asterism 16#2042
/asuperior 16#f6e9
/asymptoticallyequal 16#2243
/at 16#0040
/atilde 16#00e3
/atmonospace 16#ff20
/atsmall 16#fe6b
/aturned 16#0250
/aubengali 16#0994
/aubopomofo 16#3120
/audeva 16#0914
/augujarati 16#0a94
/augurmukhi 16#0a14
/aulengthmarkbengali 16#09d7
/aumatragurmukhi 16#0a4c
/auvowelsignbengali 16#09cc
/auvowelsigndeva 16#094c
/auvowelsigngujarati 16#0acc
/avagrahadeva 16#093d
/aybarmenian 16#0561
/ayin 16#05e2
/ayinaltonehebrew 16#fb20
/ayinhebrew 16#05e2
/b 16#0062
/babengali 16#09ac
/backslash 16#005c
/backslashmonospace 16#ff3c
/badeva 16#092c
/bagujarati 16#0aac
/bagurmukhi 16#0a2c
/bahiragana 16#3070
/bahtthai 16#0e3f
/bakatakana 16#30d0
/bar 16#007c
/barmonospace 16#ff5c
/bbopomofo 16#3105
/bcircle 16#24d1
/bdotaccent 16#1e03
/bdotbelow 16#1e05
/beamedsixteenthnotes 16#266c
/because 16#2235
/becyrillic 16#0431
/beharabic 16#0628
/behfinalarabic 16#fe90
/behinitialarabic 16#fe91
/behiragana 16#3079
/behmedialarabic 16#fe92
/behmeeminitialarabic 16#fc9f
/behmeemisolatedarabic 16#fc08
/behnoonfinalarabic 16#fc6d
/bekatakana 16#30d9
/benarmenian 16#0562
/bet 16#05d1
/beta 16#03b2
/betasymbolgreek 16#03d0
/betdagesh 16#fb31
/betdageshhebrew 16#fb31
/bethebrew 16#05d1
/betrafehebrew 16#fb4c
/bhabengali 16#09ad
/bhadeva 16#092d
/bhagujarati 16#0aad
/bhagurmukhi 16#0a2d
/bhook 16#0253
/bihiragana 16#3073
/bikatakana 16#30d3
/bilabialclick 16#0298
/bindigurmukhi 16#0a02
/birusquare 16#3331
/blackcircle 16#25cf
/blackdiamond 16#25c6
/blackdownpointingtriangle 16#25bc
/blackleftpointingpointer 16#25c4
/blackleftpointingtriangle 16#25c0
/blacklenticularbracketleft 16#3010
/blacklenticularbracketleftvertical 16#fe3b
/blacklenticularbracketright 16#3011
/blacklenticularbracketrightvertical 16#fe3c
/blacklowerlefttriangle 16#25e3
/blacklowerrighttriangle 16#25e2
/blackrectangle 16#25ac
/blackrightpointingpointer 16#25ba
/blackrightpointingtriangle 16#25b6
/blacksmallsquare 16#25aa
/blacksmilingface 16#263b
/blacksquare 16#25a0
/blackstar 16#2605
/blackupperlefttriangle 16#25e4
/blackupperrighttriangle 16#25e5
/blackuppointingsmalltriangle 16#25b4
/blackuppointingtriangle 16#25b2
/blank 16#2423
/blinebelow 16#1e07
/block 16#2588
/bmonospace 16#ff42
/bobaimaithai 16#0e1a
/bohiragana 16#307c
/bokatakana 16#30dc
/bparen 16#249d
/bqsquare 16#33c3
/braceex 16#f8f4
/braceleft 16#007b
/braceleftbt 16#f8f3
/braceleftmid 16#f8f2
/braceleftmonospace 16#ff5b
/braceleftsmall 16#fe5b
/bracelefttp 16#f8f1
/braceleftvertical 16#fe37
/braceright 16#007d
/bracerightbt 16#f8fe
/bracerightmid 16#f8fd
/bracerightmonospace 16#ff5d
/bracerightsmall 16#fe5c
/bracerighttp 16#f8fc
/bracerightvertical 16#fe38
/bracketleft 16#005b
/bracketleftbt 16#f8f0
/bracketleftex 16#f8ef
/bracketleftmonospace 16#ff3b
/bracketlefttp 16#f8ee
/bracketright 16#005d
/bracketrightbt 16#f8fb
/bracketrightex 16#f8fa
/bracketrightmonospace 16#ff3d
/bracketrighttp 16#f8f9
/breve 16#02d8
/brevebelowcmb 16#032e
/brevecmb 16#0306
/breveinvertedbelowcmb 16#032f
/breveinvertedcmb 16#0311
/breveinverteddoublecmb 16#0361
/bridgebelowcmb 16#032a
/bridgeinvertedbelowcmb 16#033a
/brokenbar 16#00a6
/bstroke 16#0180
/bsuperior 16#f6ea
/btopbar 16#0183
/buhiragana 16#3076
/bukatakana 16#30d6
/bullet 16#2022
/bulletinverse 16#25d8
/bulletoperator 16#2219
/bullseye 16#25ce
/c 16#0063
/caarmenian 16#056e
/cabengali 16#099a
/cacute 16#0107
/cadeva 16#091a
/cagujarati 16#0a9a
/cagurmukhi 16#0a1a
/calsquare 16#3388
/candrabindubengali 16#0981
/candrabinducmb 16#0310
/candrabindudeva 16#0901
/candrabindugujarati 16#0a81
/capslock 16#21ea
/careof 16#2105
/caron 16#02c7
/caronbelowcmb 16#032c
/caroncmb 16#030c
/carriagereturn 16#21b5
/cbopomofo 16#3118
/ccaron 16#010d
/ccedilla 16#00e7
/ccedillaacute 16#1e09
/ccircle 16#24d2
/ccircumflex 16#0109
/ccurl 16#0255
/cdot 16#010b
/cdotaccent 16#010b
/cdsquare 16#33c5
/cedilla 16#00b8
/cedillacmb 16#0327
/cent 16#00a2
/centigrade 16#2103
/centinferior 16#f6df
/centmonospace 16#ffe0
/centoldstyle 16#f7a2
/centsuperior 16#f6e0
/chaarmenian 16#0579
/chabengali 16#099b
/chadeva 16#091b
/chagujarati 16#0a9b
/chagurmukhi 16#0a1b
/chbopomofo 16#3114
/cheabkhasiancyrillic 16#04bd
/checkmark 16#2713
/checyrillic 16#0447
/chedescenderabkhasiancyrillic 16#04bf
/chedescendercyrillic 16#04b7
/chedieresiscyrillic 16#04f5
/cheharmenian 16#0573
/chekhakassiancyrillic 16#04cc
/cheverticalstrokecyrillic 16#04b9
/chi 16#03c7
/chieuchacirclekorean 16#3277
/chieuchaparenkorean 16#3217
/chieuchcirclekorean 16#3269
/chieuchkorean 16#314a
/chieuchparenkorean 16#3209
/chochangthai 16#0e0a
/chochanthai 16#0e08
/chochingthai 16#0e09
/chochoethai 16#0e0c
/chook 16#0188
/cieucacirclekorean 16#3276
/cieucaparenkorean 16#3216
/cieuccirclekorean 16#3268
/cieuckorean 16#3148
/cieucparenkorean 16#3208
/cieucuparenkorean 16#321c
/circle 16#25cb
/circlemultiply 16#2297
/circleot 16#2299
/circleplus 16#2295
/circlepostalmark 16#3036
/circlewithlefthalfblack 16#25d0
/circlewithrighthalfblack 16#25d1
/circumflex 16#02c6
/circumflexbelowcmb 16#032d
/circumflexcmb 16#0302
/clear 16#2327
/clickalveolar 16#01c2
/clickdental 16#01c0
/clicklateral 16#01c1
/clickretroflex 16#01c3
/club 16#2663
/clubsuitblack 16#2663
/clubsuitwhite 16#2667
/cmcubedsquare 16#33a4
/cmonospace 16#ff43
/cmsquaredsquare 16#33a0
/coarmenian 16#0581
/colon 16#003a
/colonmonetary 16#20a1
/colonmonospace 16#ff1a
/colonsign 16#20a1
/colonsmall 16#fe55
/colontriangularhalfmod 16#02d1
/colontriangularmod 16#02d0
/comma 16#002c
/commaabovecmb 16#0313
/commaaboverightcmb 16#0315
/commaaccent 16#f6c3
/commaarabic 16#060c
/commaarmenian 16#055d
/commainferior 16#f6e1
/commamonospace 16#ff0c
/commareversedabovecmb 16#0314
/commareversedmod 16#02bd
/commasmall 16#fe50
/commasuperior 16#f6e2
/commaturnedabovecmb 16#0312
/commaturnedmod 16#02bb
/compass 16#263c
/congruent 16#2245
/contourintegral 16#222e
/control 16#2303
/controlACK 16#0006
/controlBEL 16#0007
/controlBS 16#0008
/controlCAN 16#0018
/controlCR 16#000d
/controlDC1 16#0011
/controlDC2 16#0012
/controlDC3 16#0013
/controlDC4 16#0014
/controlDEL 16#007f
/controlDLE 16#0010
/controlEM 16#0019
/controlENQ 16#0005
/controlEOT 16#0004
/controlESC 16#001b
/controlETB 16#0017
/controlETX 16#0003
/controlFF 16#000c
/controlFS 16#001c
/controlGS 16#001d
/controlHT 16#0009
/controlLF 16#000a
/controlNAK 16#0015
/controlRS 16#001e
/controlSI 16#000f
/controlSO 16#000e
/controlSOT 16#0002
/controlSTX 16#0001
/controlSUB 16#001a
/controlSYN 16#0016
/controlUS 16#001f
/controlVT 16#000b
/copyright 16#00a9
/copyrightsans 16#f8e9
/copyrightserif 16#f6d9
/cornerbracketleft 16#300c
/cornerbracketlefthalfwidth 16#ff62
/cornerbracketleftvertical 16#fe41
/cornerbracketright 16#300d
/cornerbracketrighthalfwidth 16#ff63
/cornerbracketrightvertical 16#fe42
/corporationsquare 16#337f
/cosquare 16#33c7
/coverkgsquare 16#33c6
/cparen 16#249e
/cruzeiro 16#20a2
/cstretched 16#0297
/curlyand 16#22cf
/curlyor 16#22ce
/currency 16#00a4
/cyrBreve 16#f6d1
/cyrFlex 16#f6d2
/cyrbreve 16#f6d4
/cyrflex 16#f6d5
/d 16#0064
/daarmenian 16#0564
/dabengali 16#09a6
/dadarabic 16#0636
/dadeva 16#0926
/dadfinalarabic 16#febe
/dadinitialarabic 16#febf
/dadmedialarabic 16#fec0
/dagesh 16#05bc
/dageshhebrew 16#05bc
/dagger 16#2020
/daggerdbl 16#2021
/dagujarati 16#0aa6
/dagurmukhi 16#0a26
/dahiragana 16#3060
/dakatakana 16#30c0
/dalarabic 16#062f
/dalet 16#05d3
/daletdagesh 16#fb33
/daletdageshhebrew 16#fb33
/dalethebrew 16#05d3
/dalfinalarabic 16#feaa
/dammaarabic 16#064f
/dammalowarabic 16#064f
/dammatanaltonearabic 16#064c
/dammatanarabic 16#064c
/danda 16#0964
/dargahebrew 16#05a7
/dargalefthebrew 16#05a7
/dasiapneumatacyrilliccmb 16#0485
/dblGrave 16#f6d3
/dblanglebracketleft 16#300a
/dblanglebracketleftvertical 16#fe3d
/dblanglebracketright 16#300b
/dblanglebracketrightvertical 16#fe3e
/dblarchinvertedbelowcmb 16#032b
/dblarrowleft 16#21d4
/dblarrowright 16#21d2
/dbldanda 16#0965
/dblgrave 16#f6d6
/dblgravecmb 16#030f
/dblintegral 16#222c
/dbllowline 16#2017
/dbllowlinecmb 16#0333
/dbloverlinecmb 16#033f
/dblprimemod 16#02ba
/dblverticalbar 16#2016
/dblverticallineabovecmb 16#030e
/dbopomofo 16#3109
/dbsquare 16#33c8
/dcaron 16#010f
/dcedilla 16#1e11
/dcircle 16#24d3
/dcircumflexbelow 16#1e13
/dcroat 16#0111
/ddabengali 16#09a1
/ddadeva 16#0921
/ddagujarati 16#0aa1
/ddagurmukhi 16#0a21
/ddalarabic 16#0688
/ddalfinalarabic 16#fb89
/dddhadeva 16#095c
/ddhabengali 16#09a2
/ddhadeva 16#0922
/ddhagujarati 16#0aa2
/ddhagurmukhi 16#0a22
/ddotaccent 16#1e0b
/ddotbelow 16#1e0d
/decimalseparatorarabic 16#066b
/decimalseparatorpersian 16#066b
/decyrillic 16#0434
/degree 16#00b0
/dehihebrew 16#05ad
/dehiragana 16#3067
/deicoptic 16#03ef
/dekatakana 16#30c7
/deleteleft 16#232b
/deleteright 16#2326
/delta 16#03b4
/deltaturned 16#018d
/denominatorminusonenumeratorbengali 16#09f8
/dezh 16#02a4
/dhabengali 16#09a7
/dhadeva 16#0927
/dhagujarati 16#0aa7
/dhagurmukhi 16#0a27
/dhook 16#0257
/dialytikatonos 16#0385
/dialytikatonoscmb 16#0344
/diamond 16#2666
/diamondsuitwhite 16#2662
/dieresis 16#00a8
/dieresisacute 16#f6d7
/dieresisbelowcmb 16#0324
/dieresiscmb 16#0308
/dieresisgrave 16#f6d8
/dieresistonos 16#0385
/dihiragana 16#3062
/dikatakana 16#30c2
/dittomark 16#3003
/divide 16#00f7
/divides 16#2223
/divisionslash 16#2215
/djecyrillic 16#0452
/dkshade 16#2593
/dlinebelow 16#1e0f
/dlsquare 16#3397
/dmacron 16#0111
/dmonospace 16#ff44
/dnblock 16#2584
/dochadathai 16#0e0e
/dodekthai 16#0e14
/dohiragana 16#3069
/dokatakana 16#30c9
/dollar 16#0024
/dollarinferior 16#f6e3
/dollarmonospace 16#ff04
/dollaroldstyle 16#f724
/dollarsmall 16#fe69
/dollarsuperior 16#f6e4
/dong 16#20ab
/dorusquare 16#3326
/dotaccent 16#02d9
/dotaccentcmb 16#0307
/dotbelowcmb 16#0323
/dotbelowcomb 16#0323
/dotkatakana 16#30fb
/dotlessi 16#0131
/dotlessj 16#f6be
/dotlessjstrokehook 16#0284
/dotmath 16#22c5
/dottedcircle 16#25cc
/doubleyodpatah 16#fb1f
/doubleyodpatahhebrew 16#fb1f
/downtackbelowcmb 16#031e
/downtackmod 16#02d5
/dparen 16#249f
/dsuperior 16#f6eb
/dtail 16#0256
/dtopbar 16#018c
/duhiragana 16#3065
/dukatakana 16#30c5
/dz 16#01f3
/dzaltone 16#02a3
/dzcaron 16#01c6
/dzcurl 16#02a5
/dzeabkhasiancyrillic 16#04e1
/dzecyrillic 16#0455
/dzhecyrillic 16#045f
/e 16#0065
/eacute 16#00e9
/earth 16#2641
/ebengali 16#098f
/ebopomofo 16#311c
/ebreve 16#0115
/ecandradeva 16#090d
/ecandragujarati 16#0a8d
/ecandravowelsigndeva 16#0945
/ecandravowelsigngujarati 16#0ac5
/ecaron 16#011b
/ecedillabreve 16#1e1d
/echarmenian 16#0565
/echyiwnarmenian 16#0587
/ecircle 16#24d4
/ecircumflex 16#00ea
/ecircumflexacute 16#1ebf
/ecircumflexbelow 16#1e19
/ecircumflexdotbelow 16#1ec7
/ecircumflexgrave 16#1ec1
/ecircumflexhookabove 16#1ec3
/ecircumflextilde 16#1ec5
/ecyrillic 16#0454
/edblgrave 16#0205
/edeva 16#090f
/edieresis 16#00eb
/edot 16#0117
/edotaccent 16#0117
/edotbelow 16#1eb9
/eegurmukhi 16#0a0f
/eematragurmukhi 16#0a47
/efcyrillic 16#0444
/egrave 16#00e8
/egujarati 16#0a8f
/eharmenian 16#0567
/ehbopomofo 16#311d
/ehiragana 16#3048
/ehookabove 16#1ebb
/eibopomofo 16#311f
/eight 16#0038
/eightarabic 16#0668
/eightbengali 16#09ee
/eightcircle 16#2467
/eightcircleinversesansserif 16#2791
/eightdeva 16#096e
/eighteencircle 16#2471
/eighteenparen 16#2485
/eighteenperiod 16#2499
/eightgujarati 16#0aee
/eightgurmukhi 16#0a6e
/eighthackarabic 16#0668
/eighthangzhou 16#3028
/eighthnotebeamed 16#266b
/eightideographicparen 16#3227
/eightinferior 16#2088
/eightmonospace 16#ff18
/eightoldstyle 16#f738
/eightparen 16#247b
/eightperiod 16#248f
/eightpersian 16#06f8
/eightroman 16#2177
/eightsuperior 16#2078
/eightthai 16#0e58
/einvertedbreve 16#0207
/eiotifiedcyrillic 16#0465
/ekatakana 16#30a8
/ekatakanahalfwidth 16#ff74
/ekonkargurmukhi 16#0a74
/ekorean 16#3154
/elcyrillic 16#043b
/element 16#2208
/elevencircle 16#246a
/elevenparen 16#247e
/elevenperiod 16#2492
/elevenroman 16#217a
/ellipsis 16#2026
/ellipsisvertical 16#22ee
/emacron 16#0113
/emacronacute 16#1e17
/emacrongrave 16#1e15
/emcyrillic 16#043c
/emdash 16#2014
/emdashvertical 16#fe31
/emonospace 16#ff45
/emphasismarkarmenian 16#055b
/emptyset 16#2205
/enbopomofo 16#3123
/encyrillic 16#043d
/endash 16#2013
/endashvertical 16#fe32
/endescendercyrillic 16#04a3
/eng 16#014b
/engbopomofo 16#3125
/enghecyrillic 16#04a5
/enhookcyrillic 16#04c8
/enspace 16#2002
/eogonek 16#0119
/eokorean 16#3153
/eopen 16#025b
/eopenclosed 16#029a
/eopenreversed 16#025c
/eopenreversedclosed 16#025e
/eopenreversedhook 16#025d
/eparen 16#24a0
/epsilon 16#03b5
/epsilontonos 16#03ad
/equal 16#003d
/equalmonospace 16#ff1d
/equalsmall 16#fe66
/equalsuperior 16#207c
/equivalence 16#2261
/erbopomofo 16#3126
/ercyrillic 16#0440
/ereversed 16#0258
/ereversedcyrillic 16#044d
/escyrillic 16#0441
/esdescendercyrillic 16#04ab
/esh 16#0283
/eshcurl 16#0286
/eshortdeva 16#090e
/eshortvowelsigndeva 16#0946
/eshreversedloop 16#01aa
/eshsquatreversed 16#0285
/esmallhiragana 16#3047
/esmallkatakana 16#30a7
/esmallkatakanahalfwidth 16#ff6a
/estimated 16#212e
/esuperior 16#f6ec
/eta 16#03b7
/etarmenian 16#0568
/etatonos 16#03ae
/eth 16#00f0
/etilde 16#1ebd
/etildebelow 16#1e1b
/etnahtafoukhhebrew 16#0591
/etnahtafoukhlefthebrew 16#0591
/etnahtahebrew 16#0591
/etnahtalefthebrew 16#0591
/eturned 16#01dd
/eukorean 16#3161
/euro 16#20ac
/evowelsignbengali 16#09c7
/evowelsigndeva 16#0947
/evowelsigngujarati 16#0ac7
/exclam 16#0021
/exclamarmenian 16#055c
/exclamdbl 16#203c
/exclamdown 16#00a1
/exclamdownsmall 16#f7a1
/exclammonospace 16#ff01
/exclamsmall 16#f721
/existential 16#2203
/ezh 16#0292
/ezhcaron 16#01ef
/ezhcurl 16#0293
/ezhreversed 16#01b9
/ezhtail 16#01ba
/f 16#0066
/fadeva 16#095e
/fagurmukhi 16#0a5e
/fahrenheit 16#2109
/fathaarabic 16#064e
/fathalowarabic 16#064e
/fathatanarabic 16#064b
/fbopomofo 16#3108
/fcircle 16#24d5
/fdotaccent 16#1e1f
/feharabic 16#0641
/feharmenian 16#0586
/fehfinalarabic 16#fed2
/fehinitialarabic 16#fed3
/fehmedialarabic 16#fed4
/feicoptic 16#03e5
/female 16#2640
/ff 16#fb00
/ffi 16#fb03
/ffl 16#fb04
/fi 16#fb01
/fifteencircle 16#246e
/fifteenparen 16#2482
/fifteenperiod 16#2496
/figuredash 16#2012
/filledbox 16#25a0
/filledrect 16#25ac
/finalkaf 16#05da
/finalkafdagesh 16#fb3a
/finalkafdageshhebrew 16#fb3a
/finalkafhebrew 16#05da
/finalmem 16#05dd
/finalmemhebrew 16#05dd
/finalnun 16#05df
/finalnunhebrew 16#05df
/finalpe 16#05e3
/finalpehebrew 16#05e3
/finaltsadi 16#05e5
/finaltsadihebrew 16#05e5
/firsttonechinese 16#02c9
/fisheye 16#25c9
/fitacyrillic 16#0473
/five 16#0035
/fivearabic 16#0665
/fivebengali 16#09eb
/fivecircle 16#2464
/fivecircleinversesansserif 16#278e
/fivedeva 16#096b
/fiveeighths 16#215d
/fivegujarati 16#0aeb
/fivegurmukhi 16#0a6b
/fivehackarabic 16#0665
/fivehangzhou 16#3025
/fiveideographicparen 16#3224
/fiveinferior 16#2085
/fivemonospace 16#ff15
/fiveoldstyle 16#f735
/fiveparen 16#2478
/fiveperiod 16#248c
/fivepersian 16#06f5
/fiveroman 16#2174
/fivesuperior 16#2075
/fivethai 16#0e55
/fl 16#fb02
/florin 16#0192
/fmonospace 16#ff46
/fmsquare 16#3399
/fofanthai 16#0e1f
/fofathai 16#0e1d
/fongmanthai 16#0e4f
/forall 16#2200
/four 16#0034
/fourarabic 16#0664
/fourbengali 16#09ea
/fourcircle 16#2463
/fourcircleinversesansserif 16#278d
/fourdeva 16#096a
/fourgujarati 16#0aea
/fourgurmukhi 16#0a6a
/fourhackarabic 16#0664
/fourhangzhou 16#3024
/fourideographicparen 16#3223
/fourinferior 16#2084
/fourmonospace 16#ff14
/fournumeratorbengali 16#09f7
/fouroldstyle 16#f734
/fourparen 16#2477
/fourperiod 16#248b
/fourpersian 16#06f4
/fourroman 16#2173
/foursuperior 16#2074
/fourteencircle 16#246d
/fourteenparen 16#2481
/fourteenperiod 16#2495
/fourthai 16#0e54
/fourthtonechinese 16#02cb
/fparen 16#24a1
/fraction 16#2044
/franc 16#20a3
/g 16#0067
/gabengali 16#0997
/gacute 16#01f5
/gadeva 16#0917
/gafarabic 16#06af
/gaffinalarabic 16#fb93
/gafinitialarabic 16#fb94
/gafmedialarabic 16#fb95
/gagujarati 16#0a97
/gagurmukhi 16#0a17
/gahiragana 16#304c
/gakatakana 16#30ac
/gamma 16#03b3
/gammalatinsmall 16#0263
/gammasuperior 16#02e0
/gangiacoptic 16#03eb
/gbopomofo 16#310d
/gbreve 16#011f
/gcaron 16#01e7
/gcedilla 16#0123
/gcircle 16#24d6
/gcircumflex 16#011d
/gcommaaccent 16#0123
/gdot 16#0121
/gdotaccent 16#0121
/gecyrillic 16#0433
/gehiragana 16#3052
/gekatakana 16#30b2
/geometricallyequal 16#2251
/gereshaccenthebrew 16#059c
/gereshhebrew 16#05f3
/gereshmuqdamhebrew 16#059d
/germandbls 16#00df
/gershayimaccenthebrew 16#059e
/gershayimhebrew 16#05f4
/getamark 16#3013
/ghabengali 16#0998
/ghadarmenian 16#0572
/ghadeva 16#0918
/ghagujarati 16#0a98
/ghagurmukhi 16#0a18
/ghainarabic 16#063a
/ghainfinalarabic 16#fece
/ghaininitialarabic 16#fecf
/ghainmedialarabic 16#fed0
/ghemiddlehookcyrillic 16#0495
/ghestrokecyrillic 16#0493
/gheupturncyrillic 16#0491
/ghhadeva 16#095a
/ghhagurmukhi 16#0a5a
/ghook 16#0260
/ghzsquare 16#3393
/gihiragana 16#304e
/gikatakana 16#30ae
/gimarmenian 16#0563
/gimel 16#05d2
/gimeldagesh 16#fb32
/gimeldageshhebrew 16#fb32
/gimelhebrew 16#05d2
/gjecyrillic 16#0453
/glottalinvertedstroke 16#01be
/glottalstop 16#0294
/glottalstopinverted 16#0296
/glottalstopmod 16#02c0
/glottalstopreversed 16#0295
/glottalstopreversedmod 16#02c1
/glottalstopreversedsuperior 16#02e4
/glottalstopstroke 16#02a1
/glottalstopstrokereversed 16#02a2
/gmacron 16#1e21
/gmonospace 16#ff47
/gohiragana 16#3054
/gokatakana 16#30b4
/gparen 16#24a2
/gpasquare 16#33ac
/gradient 16#2207
/grave 16#0060
/gravebelowcmb 16#0316
/gravecmb 16#0300
/gravecomb 16#0300
/gravedeva 16#0953
/gravelowmod 16#02ce
/gravemonospace 16#ff40
/gravetonecmb 16#0340
/greater 16#003e
/greaterequal 16#2265
/greaterequalorless 16#22db
/greatermonospace 16#ff1e
/greaterorequivalent 16#2273
/greaterorless 16#2277
/greateroverequal 16#2267
/greatersmall 16#fe65
/gscript 16#0261
/gstroke 16#01e5
/guhiragana 16#3050
/guillemotleft 16#00ab
/guillemotright 16#00bb
/guilsinglleft 16#2039
/guilsinglright 16#203a
/gukatakana 16#30b0
/guramusquare 16#3318
/gysquare 16#33c9
/h 16#0068
/haabkhasiancyrillic 16#04a9
/haaltonearabic 16#06c1
/habengali 16#09b9
/hadescendercyrillic 16#04b3
/hadeva 16#0939
/hagujarati 16#0ab9
/hagurmukhi 16#0a39
/haharabic 16#062d
/hahfinalarabic 16#fea2
/hahinitialarabic 16#fea3
/hahiragana 16#306f
/hahmedialarabic 16#fea4
/haitusquare 16#332a
/hakatakana 16#30cf
/hakatakanahalfwidth 16#ff8a
/halantgurmukhi 16#0a4d
/hamzaarabic 16#0621
/hamzalowarabic 16#0621
/hangulfiller 16#3164
/hardsigncyrillic 16#044a
/harpoonleftbarbup 16#21bc
/harpoonrightbarbup 16#21c0
/hasquare 16#33ca
/hatafpatah 16#05b2
/hatafpatah16 16#05b2
/hatafpatah23 16#05b2
/hatafpatah2f 16#05b2
/hatafpatahhebrew 16#05b2
/hatafpatahnarrowhebrew 16#05b2
/hatafpatahquarterhebrew 16#05b2
/hatafpatahwidehebrew 16#05b2
/hatafqamats 16#05b3
/hatafqamats1b 16#05b3
/hatafqamats28 16#05b3
/hatafqamats34 16#05b3
/hatafqamatshebrew 16#05b3
/hatafqamatsnarrowhebrew 16#05b3
/hatafqamatsquarterhebrew 16#05b3
/hatafqamatswidehebrew 16#05b3
/hatafsegol 16#05b1
/hatafsegol17 16#05b1
/hatafsegol24 16#05b1
/hatafsegol30 16#05b1
/hatafsegolhebrew 16#05b1
/hatafsegolnarrowhebrew 16#05b1
/hatafsegolquarterhebrew 16#05b1
/hatafsegolwidehebrew 16#05b1
/hbar 16#0127
/hbopomofo 16#310f
/hbrevebelow 16#1e2b
/hcedilla 16#1e29
/hcircle 16#24d7
/hcircumflex 16#0125
/hdieresis 16#1e27
/hdotaccent 16#1e23
/hdotbelow 16#1e25
/he 16#05d4
/heart 16#2665
/heartsuitblack 16#2665
/heartsuitwhite 16#2661
/hedagesh 16#fb34
/hedageshhebrew 16#fb34
/hehaltonearabic 16#06c1
/heharabic 16#0647
/hehebrew 16#05d4
/hehfinalaltonearabic 16#fba7
/hehfinalalttwoarabic 16#feea
/hehfinalarabic 16#feea
/hehhamzaabovefinalarabic 16#fba5
/hehhamzaaboveisolatedarabic 16#fba4
/hehinitialaltonearabic 16#fba8
/hehinitialarabic 16#feeb
/hehiragana 16#3078
/hehmedialaltonearabic 16#fba9
/hehmedialarabic 16#feec
/heiseierasquare 16#337b
/hekatakana 16#30d8
/hekatakanahalfwidth 16#ff8d
/hekutaarusquare 16#3336
/henghook 16#0267
/herutusquare 16#3339
/het 16#05d7
/hethebrew 16#05d7
/hhook 16#0266
/hhooksuperior 16#02b1
/hieuhacirclekorean 16#327b
/hieuhaparenkorean 16#321b
/hieuhcirclekorean 16#326d
/hieuhkorean 16#314e
/hieuhparenkorean 16#320d
/hihiragana 16#3072
/hikatakana 16#30d2
/hikatakanahalfwidth 16#ff8b
/hiriq 16#05b4
/hiriq14 16#05b4
/hiriq21 16#05b4
/hiriq2d 16#05b4
/hiriqhebrew 16#05b4
/hiriqnarrowhebrew 16#05b4
/hiriqquarterhebrew 16#05b4
/hiriqwidehebrew 16#05b4
/hlinebelow 16#1e96
/hmonospace 16#ff48
/hoarmenian 16#0570
/hohipthai 16#0e2b
/hohiragana 16#307b
/hokatakana 16#30db
/hokatakanahalfwidth 16#ff8e
/holam 16#05b9
/holam19 16#05b9
/holam26 16#05b9
/holam32 16#05b9
/holamhebrew 16#05b9
/holamnarrowhebrew 16#05b9
/holamquarterhebrew 16#05b9
/holamwidehebrew 16#05b9
/honokhukthai 16#0e2e
/hookabovecomb 16#0309
/hookcmb 16#0309
/hookpalatalizedbelowcmb 16#0321
/hookretroflexbelowcmb 16#0322
/hoonsquare 16#3342
/horicoptic 16#03e9
/horizontalbar 16#2015
/horncmb 16#031b
/hotsprings 16#2668
/house 16#2302
/hparen 16#24a3
/hsuperior 16#02b0
/hturned 16#0265
/huhiragana 16#3075
/huiitosquare 16#3333
/hukatakana 16#30d5
/hukatakanahalfwidth 16#ff8c
/hungarumlaut 16#02dd
/hungarumlautcmb 16#030b
/hv 16#0195
/hyphen 16#002d
/hypheninferior 16#f6e5
/hyphenmonospace 16#ff0d
/hyphensmall 16#fe63
/hyphensuperior 16#f6e6
/hyphentwo 16#2010
/i 16#0069
/iacute 16#00ed
/iacyrillic 16#044f
/ibengali 16#0987
/ibopomofo 16#3127
/ibreve 16#012d
/icaron 16#01d0
/icircle 16#24d8
/icircumflex 16#00ee
/icyrillic 16#0456
/idblgrave 16#0209
/ideographearthcircle 16#328f
/ideographfirecircle 16#328b
/ideographicallianceparen 16#323f
/ideographiccallparen 16#323a
/ideographiccentrecircle 16#32a5
/ideographicclose 16#3006
/ideographiccomma 16#3001
/ideographiccommaleft 16#ff64
/ideographiccongratulationparen 16#3237
/ideographiccorrectcircle 16#32a3
/ideographicearthparen 16#322f
/ideographicenterpriseparen 16#323d
/ideographicexcellentcircle 16#329d
/ideographicfestivalparen 16#3240
/ideographicfinancialcircle 16#3296
/ideographicfinancialparen 16#3236
/ideographicfireparen 16#322b
/ideographichaveparen 16#3232
/ideographichighcircle 16#32a4
/ideographiciterationmark 16#3005
/ideographiclaborcircle 16#3298
/ideographiclaborparen 16#3238
/ideographicleftcircle 16#32a7
/ideographiclowcircle 16#32a6
/ideographicmedicinecircle 16#32a9
/ideographicmetalparen 16#322e
/ideographicmoonparen 16#322a
/ideographicnameparen 16#3234
/ideographicperiod 16#3002
/ideographicprintcircle 16#329e
/ideographicreachparen 16#3243
/ideographicrepresentparen 16#3239
/ideographicresourceparen 16#323e
/ideographicrightcircle 16#32a8
/ideographicsecretcircle 16#3299
/ideographicselfparen 16#3242
/ideographicsocietyparen 16#3233
/ideographicspace 16#3000
/ideographicspecialparen 16#3235
/ideographicstockparen 16#3231
/ideographicstudyparen 16#323b
/ideographicsunparen 16#3230
/ideographicsuperviseparen 16#323c
/ideographicwaterparen 16#322c
/ideographicwoodparen 16#322d
/ideographiczero 16#3007
/ideographmetalcircle 16#328e
/ideographmooncircle 16#328a
/ideographnamecircle 16#3294
/ideographsuncircle 16#3290
/ideographwatercircle 16#328c
/ideographwoodcircle 16#328d
/ideva 16#0907
/idieresis 16#00ef
/idieresisacute 16#1e2f
/idieresiscyrillic 16#04e5
/idotbelow 16#1ecb
/iebrevecyrillic 16#04d7
/iecyrillic 16#0435
/ieungacirclekorean 16#3275
/ieungaparenkorean 16#3215
/ieungcirclekorean 16#3267
/ieungkorean 16#3147
/ieungparenkorean 16#3207
/igrave 16#00ec
/igujarati 16#0a87
/igurmukhi 16#0a07
/ihiragana 16#3044
/ihookabove 16#1ec9
/iibengali 16#0988
/iicyrillic 16#0438
/iideva 16#0908
/iigujarati 16#0a88
/iigurmukhi 16#0a08
/iimatragurmukhi 16#0a40
/iinvertedbreve 16#020b
/iishortcyrillic 16#0439
/iivowelsignbengali 16#09c0
/iivowelsigndeva 16#0940
/iivowelsigngujarati 16#0ac0
/ij 16#0133
/ikatakana 16#30a4
/ikatakanahalfwidth 16#ff72
/ikorean 16#3163
/ilde 16#02dc
/iluyhebrew 16#05ac
/imacron 16#012b
/imacroncyrillic 16#04e3
/imageorapproximatelyequal 16#2253
/imatragurmukhi 16#0a3f
/imonospace 16#ff49
/increment 16#2206
/infinity 16#221e
/iniarmenian 16#056b
/integral 16#222b
/integralbottom 16#2321
/integralbt 16#2321
/integralex 16#f8f5
/integraltop 16#2320
/integraltp 16#2320
/intersection 16#2229
/intisquare 16#3305
/invbullet 16#25d8
/invcircle 16#25d9
/invsmileface 16#263b
/iocyrillic 16#0451
/iogonek 16#012f
/iota 16#03b9
/iotadieresis 16#03ca
/iotadieresistonos 16#0390
/iotalatin 16#0269
/iotatonos 16#03af
/iparen 16#24a4
/irigurmukhi 16#0a72
/ismallhiragana 16#3043
/ismallkatakana 16#30a3
/ismallkatakanahalfwidth 16#ff68
/issharbengali 16#09fa
/istroke 16#0268
/isuperior 16#f6ed
/iterationhiragana 16#309d
/iterationkatakana 16#30fd
/itilde 16#0129
/itildebelow 16#1e2d
/iubopomofo 16#3129
/iucyrillic 16#044e
/ivowelsignbengali 16#09bf
/ivowelsigndeva 16#093f
/ivowelsigngujarati 16#0abf
/izhitsacyrillic 16#0475
/izhitsadblgravecyrillic 16#0477
/j 16#006a
/jaarmenian 16#0571
/jabengali 16#099c
/jadeva 16#091c
/jagujarati 16#0a9c
/jagurmukhi 16#0a1c
/jbopomofo 16#3110
/jcaron 16#01f0
/jcircle 16#24d9
/jcircumflex 16#0135
/jcrossedtail 16#029d
/jdotlessstroke 16#025f
/jecyrillic 16#0458
/jeemarabic 16#062c
/jeemfinalarabic 16#fe9e
/jeeminitialarabic 16#fe9f
/jeemmedialarabic 16#fea0
/jeharabic 16#0698
/jehfinalarabic 16#fb8b
/jhabengali 16#099d
/jhadeva 16#091d
/jhagujarati 16#0a9d
/jhagurmukhi 16#0a1d
/jheharmenian 16#057b
/jis 16#3004
/jmonospace 16#ff4a
/jparen 16#24a5
/jsuperior 16#02b2
/k 16#006b
/kabashkircyrillic 16#04a1
/kabengali 16#0995
/kacute 16#1e31
/kacyrillic 16#043a
/kadescendercyrillic 16#049b
/kadeva 16#0915
/kaf 16#05db
/kafarabic 16#0643
/kafdagesh 16#fb3b
/kafdageshhebrew 16#fb3b
/kaffinalarabic 16#feda
/kafhebrew 16#05db
/kafinitialarabic 16#fedb
/kafmedialarabic 16#fedc
/kafrafehebrew 16#fb4d
/kagujarati 16#0a95
/kagurmukhi 16#0a15
/kahiragana 16#304b
/kahookcyrillic 16#04c4
/kakatakana 16#30ab
/kakatakanahalfwidth 16#ff76
/kappa 16#03ba
/kappasymbolgreek 16#03f0
/kapyeounmieumkorean 16#3171
/kapyeounphieuphkorean 16#3184
/kapyeounpieupkorean 16#3178
/kapyeounssangpieupkorean 16#3179
/karoriisquare 16#330d
/kashidaautoarabic 16#0640
/kashidaautonosidebearingarabic 16#0640
/kasmallkatakana 16#30f5
/kasquare 16#3384
/kasraarabic 16#0650
/kasratanarabic 16#064d
/kastrokecyrillic 16#049f
/katahiraprolongmarkhalfwidth 16#ff70
/kaverticalstrokecyrillic 16#049d
/kbopomofo 16#310e
/kcalsquare 16#3389
/kcaron 16#01e9
/kcedilla 16#0137
/kcircle 16#24da
/kcommaaccent 16#0137
/kdotbelow 16#1e33
/keharmenian 16#0584
/kehiragana 16#3051
/kekatakana 16#30b1
/kekatakanahalfwidth 16#ff79
/kenarmenian 16#056f
/kesmallkatakana 16#30f6
/kgreenlandic 16#0138
/khabengali 16#0996
/khacyrillic 16#0445
/khadeva 16#0916
/khagujarati 16#0a96
/khagurmukhi 16#0a16
/khaharabic 16#062e
/khahfinalarabic 16#fea6
/khahinitialarabic 16#fea7
/khahmedialarabic 16#fea8
/kheicoptic 16#03e7
/khhadeva 16#0959
/khhagurmukhi 16#0a59
/khieukhacirclekorean 16#3278
/khieukhaparenkorean 16#3218
/khieukhcirclekorean 16#326a
/khieukhkorean 16#314b
/khieukhparenkorean 16#320a
/khokhaithai 16#0e02
/khokhonthai 16#0e05
/khokhuatthai 16#0e03
/khokhwaithai 16#0e04
/khomutthai 16#0e5b
/khook 16#0199
/khorakhangthai 16#0e06
/khzsquare 16#3391
/kihiragana 16#304d
/kikatakana 16#30ad
/kikatakanahalfwidth 16#ff77
/kiroguramusquare 16#3315
/kiromeetorusquare 16#3316
/kirosquare 16#3314
/kiyeokacirclekorean 16#326e
/kiyeokaparenkorean 16#320e
/kiyeokcirclekorean 16#3260
/kiyeokkorean 16#3131
/kiyeokparenkorean 16#3200
/kiyeoksioskorean 16#3133
/kjecyrillic 16#045c
/klinebelow 16#1e35
/klsquare 16#3398
/kmcubedsquare 16#33a6
/kmonospace 16#ff4b
/kmsquaredsquare 16#33a2
/kohiragana 16#3053
/kohmsquare 16#33c0
/kokaithai 16#0e01
/kokatakana 16#30b3
/kokatakanahalfwidth 16#ff7a
/kooposquare 16#331e
/koppacyrillic 16#0481
/koreanstandardsymbol 16#327f
/koroniscmb 16#0343
/kparen 16#24a6
/kpasquare 16#33aa
/ksicyrillic 16#046f
/ktsquare 16#33cf
/kturned 16#029e
/kuhiragana 16#304f
/kukatakana 16#30af
/kukatakanahalfwidth 16#ff78
/kvsquare 16#33b8
/kwsquare 16#33be
/l 16#006c
/labengali 16#09b2
/lacute 16#013a
/ladeva 16#0932
/lagujarati 16#0ab2
/lagurmukhi 16#0a32
/lakkhangyaothai 16#0e45
/lamaleffinalarabic 16#fefc
/lamalefhamzaabovefinalarabic 16#fef8
/lamalefhamzaaboveisolatedarabic 16#fef7
/lamalefhamzabelowfinalarabic 16#fefa
/lamalefhamzabelowisolatedarabic 16#fef9
/lamalefisolatedarabic 16#fefb
/lamalefmaddaabovefinalarabic 16#fef6
/lamalefmaddaaboveisolatedarabic 16#fef5
/lamarabic 16#0644
/lambda 16#03bb
/lambdastroke 16#019b
/lamed 16#05dc
/lameddagesh 16#fb3c
/lameddageshhebrew 16#fb3c
/lamedhebrew 16#05dc
/lamfinalarabic 16#fede
/lamhahinitialarabic 16#fcca
/laminitialarabic 16#fedf
/lamjeeminitialarabic 16#fcc9
/lamkhahinitialarabic 16#fccb
/lamlamhehisolatedarabic 16#fdf2
/lammedialarabic 16#fee0
/lammeemhahinitialarabic 16#fd88
/lammeeminitialarabic 16#fccc
/largecircle 16#25ef
/lbar 16#019a
/lbelt 16#026c
/lbopomofo 16#310c
/lcaron 16#013e
/lcedilla 16#013c
/lcircle 16#24db
/lcircumflexbelow 16#1e3d
/lcommaaccent 16#013c
/ldot 16#0140
/ldotaccent 16#0140
/ldotbelow 16#1e37
/ldotbelowmacron 16#1e39
/leftangleabovecmb 16#031a
/lefttackbelowcmb 16#0318
/less 16#003c
/lessequal 16#2264
/lessequalorgreater 16#22da
/lessmonospace 16#ff1c
/lessorequivalent 16#2272
/lessorgreater 16#2276
/lessoverequal 16#2266
/lesssmall 16#fe64
/lezh 16#026e
/lfblock 16#258c
/lhookretroflex 16#026d
/lira 16#20a4
/liwnarmenian 16#056c
/lj 16#01c9
/ljecyrillic 16#0459
/ll 16#f6c0
/lladeva 16#0933
/llagujarati 16#0ab3
/llinebelow 16#1e3b
/llladeva 16#0934
/llvocalicbengali 16#09e1
/llvocalicdeva 16#0961
/llvocalicvowelsignbengali 16#09e3
/llvocalicvowelsigndeva 16#0963
/lmiddletilde 16#026b
/lmonospace 16#ff4c
/lmsquare 16#33d0
/lochulathai 16#0e2c
/logicaland 16#2227
/logicalnot 16#00ac
/logicalnotreversed 16#2310
/logicalor 16#2228
/lolingthai 16#0e25
/longs 16#017f
/lowlinecenterline 16#fe4e
/lowlinecmb 16#0332
/lowlinedashed 16#fe4d
/lozenge 16#25ca
/lparen 16#24a7
/lslash 16#0142
/lsquare 16#2113
/lsuperior 16#f6ee
/ltshade 16#2591
/luthai 16#0e26
/lvocalicbengali 16#098c
/lvocalicdeva 16#090c
/lvocalicvowelsignbengali 16#09e2
/lvocalicvowelsigndeva 16#0962
/lxsquare 16#33d3
/m 16#006d
/mabengali 16#09ae
/macron 16#00af
/macronbelowcmb 16#0331
/macroncmb 16#0304
/macronlowmod 16#02cd
/macronmonospace 16#ffe3
/macute 16#1e3f
/madeva 16#092e
/magujarati 16#0aae
/magurmukhi 16#0a2e
/mahapakhhebrew 16#05a4
/mahapakhlefthebrew 16#05a4
/mahiragana 16#307e
/maichattawalowleftthai 16#f895
/maichattawalowrightthai 16#f894
/maichattawathai 16#0e4b
/maichattawaupperleftthai 16#f893
/maieklowleftthai 16#f88c
/maieklowrightthai 16#f88b
/maiekthai 16#0e48
/maiekupperleftthai 16#f88a
/maihanakatleftthai 16#f884
/maihanakatthai 16#0e31
/maitaikhuleftthai 16#f889
/maitaikhuthai 16#0e47
/maitholowleftthai 16#f88f
/maitholowrightthai 16#f88e
/maithothai 16#0e49
/maithoupperleftthai 16#f88d
/maitrilowleftthai 16#f892
/maitrilowrightthai 16#f891
/maitrithai 16#0e4a
/maitriupperleftthai 16#f890
/maiyamokthai 16#0e46
/makatakana 16#30de
/makatakanahalfwidth 16#ff8f
/male 16#2642
/mansyonsquare 16#3347
/maqafhebrew 16#05be
/mars 16#2642
/masoracirclehebrew 16#05af
/masquare 16#3383
/mbopomofo 16#3107
/mbsquare 16#33d4
/mcircle 16#24dc
/mcubedsquare 16#33a5
/mdotaccent 16#1e41
/mdotbelow 16#1e43
/meemarabic 16#0645
/meemfinalarabic 16#fee2
/meeminitialarabic 16#fee3
/meemmedialarabic 16#fee4
/meemmeeminitialarabic 16#fcd1
/meemmeemisolatedarabic 16#fc48
/meetorusquare 16#334d
/mehiragana 16#3081
/meizierasquare 16#337e
/mekatakana 16#30e1
/mekatakanahalfwidth 16#ff92
/mem 16#05de
/memdagesh 16#fb3e
/memdageshhebrew 16#fb3e
/memhebrew 16#05de
/menarmenian 16#0574
/merkhahebrew 16#05a5
/merkhakefulahebrew 16#05a6
/merkhakefulalefthebrew 16#05a6
/merkhalefthebrew 16#05a5
/mhook 16#0271
/mhzsquare 16#3392
/middledotkatakanahalfwidth 16#ff65
/middot 16#00b7
/mieumacirclekorean 16#3272
/mieumaparenkorean 16#3212
/mieumcirclekorean 16#3264
/mieumkorean 16#3141
/mieumpansioskorean 16#3170
/mieumparenkorean 16#3204
/mieumpieupkorean 16#316e
/mieumsioskorean 16#316f
/mihiragana 16#307f
/mikatakana 16#30df
/mikatakanahalfwidth 16#ff90
/minus 16#2212
/minusbelowcmb 16#0320
/minuscircle 16#2296
/minusmod 16#02d7
/minusplus 16#2213
/minute 16#2032
/miribaarusquare 16#334a
/mirisquare 16#3349
/mlonglegturned 16#0270
/mlsquare 16#3396
/mmcubedsquare 16#33a3
/mmonospace 16#ff4d
/mmsquaredsquare 16#339f
/mohiragana 16#3082
/mohmsquare 16#33c1
/mokatakana 16#30e2
/mokatakanahalfwidth 16#ff93
/molsquare 16#33d6
/momathai 16#0e21
/moverssquare 16#33a7
/moverssquaredsquare 16#33a8
/mparen 16#24a8
/mpasquare 16#33ab
/mssquare 16#33b3
/msuperior 16#f6ef
/mturned 16#026f
/mu 16#00b5
/mu1 16#00b5
/muasquare 16#3382
/muchgreater 16#226b
/muchless 16#226a
/mufsquare 16#338c
/mugreek 16#03bc
/mugsquare 16#338d
/muhiragana 16#3080
/mukatakana 16#30e0
/mukatakanahalfwidth 16#ff91
/mulsquare 16#3395
/multiply 16#00d7
/mumsquare 16#339b
/munahhebrew 16#05a3
/munahlefthebrew 16#05a3
/musicalnote 16#266a
/musicalnotedbl 16#266b
/musicflatsign 16#266d
/musicsharpsign 16#266f
/mussquare 16#33b2
/muvsquare 16#33b6
/muwsquare 16#33bc
/mvmegasquare 16#33b9
/mvsquare 16#33b7
/mwmegasquare 16#33bf
/mwsquare 16#33bd
/n 16#006e
/nabengali 16#09a8
/nabla 16#2207
/nacute 16#0144
/nadeva 16#0928
/nagujarati 16#0aa8
/nagurmukhi 16#0a28
/nahiragana 16#306a
/nakatakana 16#30ca
/nakatakanahalfwidth 16#ff85
/napostrophe 16#0149
/nasquare 16#3381
/nbopomofo 16#310b
/nbspace 16#00a0
/ncaron 16#0148
/ncedilla 16#0146
/ncircle 16#24dd
/ncircumflexbelow 16#1e4b
/ncommaaccent 16#0146
/ndotaccent 16#1e45
/ndotbelow 16#1e47
/nehiragana 16#306d
/nekatakana 16#30cd
/nekatakanahalfwidth 16#ff88
/newsheqelsign 16#20aa
/nfsquare 16#338b
/ngabengali 16#0999
/ngadeva 16#0919
/ngagujarati 16#0a99
/ngagurmukhi 16#0a19
/ngonguthai 16#0e07
/nhiragana 16#3093
/nhookleft 16#0272
/nhookretroflex 16#0273
/nieunacirclekorean 16#326f
/nieunaparenkorean 16#320f
/nieuncieuckorean 16#3135
/nieuncirclekorean 16#3261
/nieunhieuhkorean 16#3136
/nieunkorean 16#3134
/nieunpansioskorean 16#3168
/nieunparenkorean 16#3201
/nieunsioskorean 16#3167
/nieuntikeutkorean 16#3166
/nihiragana 16#306b
/nikatakana 16#30cb
/nikatakanahalfwidth 16#ff86
/nikhahitleftthai 16#f899
/nikhahitthai 16#0e4d
/nine 16#0039
/ninearabic 16#0669
/ninebengali 16#09ef
/ninecircle 16#2468
/ninecircleinversesansserif 16#2792
/ninedeva 16#096f
/ninegujarati 16#0aef
/ninegurmukhi 16#0a6f
/ninehackarabic 16#0669
/ninehangzhou 16#3029
/nineideographicparen 16#3228
/nineinferior 16#2089
/ninemonospace 16#ff19
/nineoldstyle 16#f739
/nineparen 16#247c
/nineperiod 16#2490
/ninepersian 16#06f9
/nineroman 16#2178
/ninesuperior 16#2079
/nineteencircle 16#2472
/nineteenparen 16#2486
/nineteenperiod 16#249a
/ninethai 16#0e59
/nj 16#01cc
/njecyrillic 16#045a
/nkatakana 16#30f3
/nkatakanahalfwidth 16#ff9d
/nlegrightlong 16#019e
/nlinebelow 16#1e49
/nmonospace 16#ff4e
/nmsquare 16#339a
/nnabengali 16#09a3
/nnadeva 16#0923
/nnagujarati 16#0aa3
/nnagurmukhi 16#0a23
/nnnadeva 16#0929
/nohiragana 16#306e
/nokatakana 16#30ce
/nokatakanahalfwidth 16#ff89
/nonbreakingspace 16#00a0
/nonenthai 16#0e13
/nonuthai 16#0e19
/noonarabic 16#0646
/noonfinalarabic 16#fee6
/noonghunnaarabic 16#06ba
/noonghunnafinalarabic 16#fb9f
/nooninitialarabic 16#fee7
/noonjeeminitialarabic 16#fcd2
/noonjeemisolatedarabic 16#fc4b
/noonmedialarabic 16#fee8
/noonmeeminitialarabic 16#fcd5
/noonmeemisolatedarabic 16#fc4e
/noonnoonfinalarabic 16#fc8d
/notcontains 16#220c
/notelement 16#2209
/notelementof 16#2209
/notequal 16#2260
/notgreater 16#226f
/notgreaternorequal 16#2271
/notgreaternorless 16#2279
/notidentical 16#2262
/notless 16#226e
/notlessnorequal 16#2270
/notparallel 16#2226
/notprecedes 16#2280
/notsubset 16#2284
/notsucceeds 16#2281
/notsuperset 16#2285
/nowarmenian 16#0576
/nparen 16#24a9
/nssquare 16#33b1
/nsuperior 16#207f
/ntilde 16#00f1
/nu 16#03bd
/nuhiragana 16#306c
/nukatakana 16#30cc
/nukatakanahalfwidth 16#ff87
/nuktabengali 16#09bc
/nuktadeva 16#093c
/nuktagujarati 16#0abc
/nuktagurmukhi 16#0a3c
/numbersign 16#0023
/numbersignmonospace 16#ff03
/numbersignsmall 16#fe5f
/numeralsigngreek 16#0374
/numeralsignlowergreek 16#0375
/numero 16#2116
/nun 16#05e0
/nundagesh 16#fb40
/nundageshhebrew 16#fb40
/nunhebrew 16#05e0
/nvsquare 16#33b5
/nwsquare 16#33bb
/nyabengali 16#099e
/nyadeva 16#091e
/nyagujarati 16#0a9e
/nyagurmukhi 16#0a1e
/o 16#006f
/oacute 16#00f3
/oangthai 16#0e2d
/obarred 16#0275
/obarredcyrillic 16#04e9
/obarreddieresiscyrillic 16#04eb
/obengali 16#0993
/obopomofo 16#311b
/obreve 16#014f
/ocandradeva 16#0911
/ocandragujarati 16#0a91
/ocandravowelsigndeva 16#0949
/ocandravowelsigngujarati 16#0ac9
/ocaron 16#01d2
/ocircle 16#24de
/ocircumflex 16#00f4
/ocircumflexacute 16#1ed1
/ocircumflexdotbelow 16#1ed9
/ocircumflexgrave 16#1ed3
/ocircumflexhookabove 16#1ed5
/ocircumflextilde 16#1ed7
/ocyrillic 16#043e
/odblacute 16#0151
/odblgrave 16#020d
/odeva 16#0913
/odieresis 16#00f6
/odieresiscyrillic 16#04e7
/odotbelow 16#1ecd
/oe 16#0153
/oekorean 16#315a
/ogonek 16#02db
/ogonekcmb 16#0328
/ograve 16#00f2
/ogujarati 16#0a93
/oharmenian 16#0585
/ohiragana 16#304a
/ohookabove 16#1ecf
/ohorn 16#01a1
/ohornacute 16#1edb
/ohorndotbelow 16#1ee3
/ohorngrave 16#1edd
/ohornhookabove 16#1edf
/ohorntilde 16#1ee1
/ohungarumlaut 16#0151
/oi 16#01a3
/oinvertedbreve 16#020f
/okatakana 16#30aa
/okatakanahalfwidth 16#ff75
/okorean 16#3157
/olehebrew 16#05ab
/omacron 16#014d
/omacronacute 16#1e53
/omacrongrave 16#1e51
/omdeva 16#0950
/omega 16#03c9
/omega1 16#03d6
/omegacyrillic 16#0461
/omegalatinclosed 16#0277
/omegaroundcyrillic 16#047b
/omegatitlocyrillic 16#047d
/omegatonos 16#03ce
/omgujarati 16#0ad0
/omicron 16#03bf
/omicrontonos 16#03cc
/omonospace 16#ff4f
/one 16#0031
/onearabic 16#0661
/onebengali 16#09e7
/onecircle 16#2460
/onecircleinversesansserif 16#278a
/onedeva 16#0967
/onedotenleader 16#2024
/oneeighth 16#215b
/onefitted 16#f6dc
/onegujarati 16#0ae7
/onegurmukhi 16#0a67
/onehackarabic 16#0661
/onehalf 16#00bd
/onehangzhou 16#3021
/oneideographicparen 16#3220
/oneinferior 16#2081
/onemonospace 16#ff11
/onenumeratorbengali 16#09f4
/oneoldstyle 16#f731
/oneparen 16#2474
/oneperiod 16#2488
/onepersian 16#06f1
/onequarter 16#00bc
/oneroman 16#2170
/onesuperior 16#00b9
/onethai 16#0e51
/onethird 16#2153
/oogonek 16#01eb
/oogonekmacron 16#01ed
/oogurmukhi 16#0a13
/oomatragurmukhi 16#0a4b
/oopen 16#0254
/oparen 16#24aa
/openbullet 16#25e6
/option 16#2325
/ordfeminine 16#00aa
/ordmasculine 16#00ba
/orthogonal 16#221f
/oshortdeva 16#0912
/oshortvowelsigndeva 16#094a
/oslash 16#00f8
/oslashacute 16#01ff
/osmallhiragana 16#3049
/osmallkatakana 16#30a9
/osmallkatakanahalfwidth 16#ff6b
/ostrokeacute 16#01ff
/osuperior 16#f6f0
/otcyrillic 16#047f
/otilde 16#00f5
/otildeacute 16#1e4d
/otildedieresis 16#1e4f
/oubopomofo 16#3121
/overline 16#203e
/overlinecenterline 16#fe4a
/overlinecmb 16#0305
/overlinedashed 16#fe49
/overlinedblwavy 16#fe4c
/overlinewavy 16#fe4b
/overscore 16#00af
/ovowelsignbengali 16#09cb
/ovowelsigndeva 16#094b
/ovowelsigngujarati 16#0acb
/p 16#0070
/paampssquare 16#3380
/paasentosquare 16#332b
/pabengali 16#09aa
/pacute 16#1e55
/padeva 16#092a
/pagedown 16#21df
/pageup 16#21de
/pagujarati 16#0aaa
/pagurmukhi 16#0a2a
/pahiragana 16#3071
/paiyannoithai 16#0e2f
/pakatakana 16#30d1
/palatalizationcyrilliccmb 16#0484
/palochkacyrillic 16#04c0
/pansioskorean 16#317f
/paragraph 16#00b6
/parallel 16#2225
/parenleft 16#0028
/parenleftaltonearabic 16#fd3e
/parenleftbt 16#f8ed
/parenleftex 16#f8ec
/parenleftinferior 16#208d
/parenleftmonospace 16#ff08
/parenleftsmall 16#fe59
/parenleftsuperior 16#207d
/parenlefttp 16#f8eb
/parenleftvertical 16#fe35
/parenright 16#0029
/parenrightaltonearabic 16#fd3f
/parenrightbt 16#f8f8
/parenrightex 16#f8f7
/parenrightinferior 16#208e
/parenrightmonospace 16#ff09
/parenrightsmall 16#fe5a
/parenrightsuperior 16#207e
/parenrighttp 16#f8f6
/parenrightvertical 16#fe36
/partialdiff 16#2202
/paseqhebrew 16#05c0
/pashtahebrew 16#0599
/pasquare 16#33a9
/patah 16#05b7
/patah11 16#05b7
/patah1d 16#05b7
/patah2a 16#05b7
/patahhebrew 16#05b7
/patahnarrowhebrew 16#05b7
/patahquarterhebrew 16#05b7
/patahwidehebrew 16#05b7
/pazerhebrew 16#05a1
/pbopomofo 16#3106
/pcircle 16#24df
/pdotaccent 16#1e57
/pe 16#05e4
/pecyrillic 16#043f
/pedagesh 16#fb44
/pedageshhebrew 16#fb44
/peezisquare 16#333b
/pefinaldageshhebrew 16#fb43
/peharabic 16#067e
/peharmenian 16#057a
/pehebrew 16#05e4
/pehfinalarabic 16#fb57
/pehinitialarabic 16#fb58
/pehiragana 16#307a
/pehmedialarabic 16#fb59
/pekatakana 16#30da
/pemiddlehookcyrillic 16#04a7
/perafehebrew 16#fb4e
/percent 16#0025
/percentarabic 16#066a
/percentmonospace 16#ff05
/percentsmall 16#fe6a
/period 16#002e
/periodarmenian 16#0589
/periodcentered 16#00b7
/periodhalfwidth 16#ff61
/periodinferior 16#f6e7
/periodmonospace 16#ff0e
/periodsmall 16#fe52
/periodsuperior 16#f6e8
/perispomenigreekcmb 16#0342
/perpendicular 16#22a5
/perthousand 16#2030
/peseta 16#20a7
/pfsquare 16#338a
/phabengali 16#09ab
/phadeva 16#092b
/phagujarati 16#0aab
/phagurmukhi 16#0a2b
/phi 16#03c6
/phi1 16#03d5
/phieuphacirclekorean 16#327a
/phieuphaparenkorean 16#321a
/phieuphcirclekorean 16#326c
/phieuphkorean 16#314d
/phieuphparenkorean 16#320c
/philatin 16#0278
/phinthuthai 16#0e3a
/phisymbolgreek 16#03d5
/phook 16#01a5
/phophanthai 16#0e1e
/phophungthai 16#0e1c
/phosamphaothai 16#0e20
/pi 16#03c0
/pieupacirclekorean 16#3273
/pieupaparenkorean 16#3213
/pieupcieuckorean 16#3176
/pieupcirclekorean 16#3265
/pieupkiyeokkorean 16#3172
/pieupkorean 16#3142
/pieupparenkorean 16#3205
/pieupsioskiyeokkorean 16#3174
/pieupsioskorean 16#3144
/pieupsiostikeutkorean 16#3175
/pieupthieuthkorean 16#3177
/pieuptikeutkorean 16#3173
/pihiragana 16#3074
/pikatakana 16#30d4
/pisymbolgreek 16#03d6
/piwrarmenian 16#0583
/plus 16#002b
/plusbelowcmb 16#031f
/pluscircle 16#2295
/plusminus 16#00b1
/plusmod 16#02d6
/plusmonospace 16#ff0b
/plussmall 16#fe62
/plussuperior 16#207a
/pmonospace 16#ff50
/pmsquare 16#33d8
/pohiragana 16#307d
/pointingindexdownwhite 16#261f
/pointingindexleftwhite 16#261c
/pointingindexrightwhite 16#261e
/pointingindexupwhite 16#261d
/pokatakana 16#30dd
/poplathai 16#0e1b
/postalmark 16#3012
/postalmarkface 16#3020
/pparen 16#24ab
/precedes 16#227a
/prescription 16#211e
/primemod 16#02b9
/primereversed 16#2035
/product 16#220f
/projective 16#2305
/prolongedkana 16#30fc
/propellor 16#2318
/propersubset 16#2282
/propersuperset 16#2283
/proportion 16#2237
/proportional 16#221d
/psi 16#03c8
/psicyrillic 16#0471
/psilipneumatacyrilliccmb 16#0486
/pssquare 16#33b0
/puhiragana 16#3077
/pukatakana 16#30d7
/pvsquare 16#33b4
/pwsquare 16#33ba
/q 16#0071
/qadeva 16#0958
/qadmahebrew 16#05a8
/qafarabic 16#0642
/qaffinalarabic 16#fed6
/qafinitialarabic 16#fed7
/qafmedialarabic 16#fed8
/qamats 16#05b8
/qamats10 16#05b8
/qamats1a 16#05b8
/qamats1c 16#05b8
/qamats27 16#05b8
/qamats29 16#05b8
/qamats33 16#05b8
/qamatsde 16#05b8
/qamatshebrew 16#05b8
/qamatsnarrowhebrew 16#05b8
/qamatsqatanhebrew 16#05b8
/qamatsqatannarrowhebrew 16#05b8
/qamatsqatanquarterhebrew 16#05b8
/qamatsqatanwidehebrew 16#05b8
/qamatsquarterhebrew 16#05b8
/qamatswidehebrew 16#05b8
/qarneyparahebrew 16#059f
/qbopomofo 16#3111
/qcircle 16#24e0
/qhook 16#02a0
/qmonospace 16#ff51
/qof 16#05e7
/qofdagesh 16#fb47
/qofdageshhebrew 16#fb47
/qofhebrew 16#05e7
/qparen 16#24ac
/quarternote 16#2669
/qubuts 16#05bb
/qubuts18 16#05bb
/qubuts25 16#05bb
/qubuts31 16#05bb
/qubutshebrew 16#05bb
/qubutsnarrowhebrew 16#05bb
/qubutsquarterhebrew 16#05bb
/qubutswidehebrew 16#05bb
/question 16#003f
/questionarabic 16#061f
/questionarmenian 16#055e
/questiondown 16#00bf
/questiondownsmall 16#f7bf
/questiongreek 16#037e
/questionmonospace 16#ff1f
/questionsmall 16#f73f
/quotedbl 16#0022
/quotedblbase 16#201e
/quotedblleft 16#201c
/quotedblmonospace 16#ff02
/quotedblprime 16#301e
/quotedblprimereversed 16#301d
/quotedblright 16#201d
/quoteleft 16#2018
/quoteleftreversed 16#201b
/quotereversed 16#201b
/quoteright 16#2019
/quoterightn 16#0149
/quotesinglbase 16#201a
/quotesingle 16#0027
/quotesinglemonospace 16#ff07
/r 16#0072
/raarmenian 16#057c
/rabengali 16#09b0
/racute 16#0155
/radeva 16#0930
/radical 16#221a
/radicalex 16#f8e5
/radoverssquare 16#33ae
/radoverssquaredsquare 16#33af
/radsquare 16#33ad
/rafe 16#05bf
/rafehebrew 16#05bf
/ragujarati 16#0ab0
/ragurmukhi 16#0a30
/rahiragana 16#3089
/rakatakana 16#30e9
/rakatakanahalfwidth 16#ff97
/ralowerdiagonalbengali 16#09f1
/ramiddlediagonalbengali 16#09f0
/ramshorn 16#0264
/ratio 16#2236
/rbopomofo 16#3116
/rcaron 16#0159
/rcedilla 16#0157
/rcircle 16#24e1
/rcommaaccent 16#0157
/rdblgrave 16#0211
/rdotaccent 16#1e59
/rdotbelow 16#1e5b
/rdotbelowmacron 16#1e5d
/referencemark 16#203b
/reflexsubset 16#2286
/reflexsuperset 16#2287
/registered 16#00ae
/registersans 16#f8e8
/registerserif 16#f6da
/reharabic 16#0631
/reharmenian 16#0580
/rehfinalarabic 16#feae
/rehiragana 16#308c
/rekatakana 16#30ec
/rekatakanahalfwidth 16#ff9a
/resh 16#05e8
/reshdageshhebrew 16#fb48
/reshhebrew 16#05e8
/reversedtilde 16#223d
/reviahebrew 16#0597
/reviamugrashhebrew 16#0597
/revlogicalnot 16#2310
/rfishhook 16#027e
/rfishhookreversed 16#027f
/rhabengali 16#09dd
/rhadeva 16#095d
/rho 16#03c1
/rhook 16#027d
/rhookturned 16#027b
/rhookturnedsuperior 16#02b5
/rhosymbolgreek 16#03f1
/rhotichookmod 16#02de
/rieulacirclekorean 16#3271
/rieulaparenkorean 16#3211
/rieulcirclekorean 16#3263
/rieulhieuhkorean 16#3140
/rieulkiyeokkorean 16#313a
/rieulkiyeoksioskorean 16#3169
/rieulkorean 16#3139
/rieulmieumkorean 16#313b
/rieulpansioskorean 16#316c
/rieulparenkorean 16#3203
/rieulphieuphkorean 16#313f
/rieulpieupkorean 16#313c
/rieulpieupsioskorean 16#316b
/rieulsioskorean 16#313d
/rieulthieuthkorean 16#313e
/rieultikeutkorean 16#316a
/rieulyeorinhieuhkorean 16#316d
/rightangle 16#221f
/righttackbelowcmb 16#0319
/righttriangle 16#22bf
/rihiragana 16#308a
/rikatakana 16#30ea
/rikatakanahalfwidth 16#ff98
/ring 16#02da
/ringbelowcmb 16#0325
/ringcmb 16#030a
/ringhalfleft 16#02bf
/ringhalfleftarmenian 16#0559
/ringhalfleftbelowcmb 16#031c
/ringhalfleftcentered 16#02d3
/ringhalfright 16#02be
/ringhalfrightbelowcmb 16#0339
/ringhalfrightcentered 16#02d2
/rinvertedbreve 16#0213
/rittorusquare 16#3351
/rlinebelow 16#1e5f
/rlongleg 16#027c
/rlonglegturned 16#027a
/rmonospace 16#ff52
/rohiragana 16#308d
/rokatakana 16#30ed
/rokatakanahalfwidth 16#ff9b
/roruathai 16#0e23
/rparen 16#24ad
/rrabengali 16#09dc
/rradeva 16#0931
/rragurmukhi 16#0a5c
/rreharabic 16#0691
/rrehfinalarabic 16#fb8d
/rrvocalicbengali 16#09e0
/rrvocalicdeva 16#0960
/rrvocalicgujarati 16#0ae0
/rrvocalicvowelsignbengali 16#09c4
/rrvocalicvowelsigndeva 16#0944
/rrvocalicvowelsigngujarati 16#0ac4
/rsuperior 16#f6f1
/rtblock 16#2590
/rturned 16#0279
/rturnedsuperior 16#02b4
/ruhiragana 16#308b
/rukatakana 16#30eb
/rukatakanahalfwidth 16#ff99
/rupeemarkbengali 16#09f2
/rupeesignbengali 16#09f3
/rupiah 16#f6dd
/ruthai 16#0e24
/rvocalicbengali 16#098b
/rvocalicdeva 16#090b
/rvocalicgujarati 16#0a8b
/rvocalicvowelsignbengali 16#09c3
/rvocalicvowelsigndeva 16#0943
/rvocalicvowelsigngujarati 16#0ac3
/s 16#0073
/sabengali 16#09b8
/sacute 16#015b
/sacutedotaccent 16#1e65
/sadarabic 16#0635
/sadeva 16#0938
/sadfinalarabic 16#feba
/sadinitialarabic 16#febb
/sadmedialarabic 16#febc
/sagujarati 16#0ab8
/sagurmukhi 16#0a38
/sahiragana 16#3055
/sakatakana 16#30b5
/sakatakanahalfwidth 16#ff7b
/sallallahoualayhewasallamarabic 16#fdfa
/samekh 16#05e1
/samekhdagesh 16#fb41
/samekhdageshhebrew 16#fb41
/samekhhebrew 16#05e1
/saraaathai 16#0e32
/saraaethai 16#0e41
/saraaimaimalaithai 16#0e44
/saraaimaimuanthai 16#0e43
/saraamthai 16#0e33
/saraathai 16#0e30
/saraethai 16#0e40
/saraiileftthai 16#f886
/saraiithai 16#0e35
/saraileftthai 16#f885
/saraithai 16#0e34
/saraothai 16#0e42
/saraueeleftthai 16#f888
/saraueethai 16#0e37
/saraueleftthai 16#f887
/sarauethai 16#0e36
/sarauthai 16#0e38
/sarauuthai 16#0e39
/sbopomofo 16#3119
/scaron 16#0161
/scarondotaccent 16#1e67
/scedilla 16#015f
/schwa 16#0259
/schwacyrillic 16#04d9
/schwadieresiscyrillic 16#04db
/schwahook 16#025a
/scircle 16#24e2
/scircumflex 16#015d
/scommaaccent 16#0219
/sdotaccent 16#1e61
/sdotbelow 16#1e63
/sdotbelowdotaccent 16#1e69
/seagullbelowcmb 16#033c
/second 16#2033
/secondtonechinese 16#02ca
/section 16#00a7
/seenarabic 16#0633
/seenfinalarabic 16#feb2
/seeninitialarabic 16#feb3
/seenmedialarabic 16#feb4
/segol 16#05b6
/segol13 16#05b6
/segol1f 16#05b6
/segol2c 16#05b6
/segolhebrew 16#05b6
/segolnarrowhebrew 16#05b6
/segolquarterhebrew 16#05b6
/segoltahebrew 16#0592
/segolwidehebrew 16#05b6
/seharmenian 16#057d
/sehiragana 16#305b
/sekatakana 16#30bb
/sekatakanahalfwidth 16#ff7e
/semicolon 16#003b
/semicolonarabic 16#061b
/semicolonmonospace 16#ff1b
/semicolonsmall 16#fe54
/semivoicedmarkkana 16#309c
/semivoicedmarkkanahalfwidth 16#ff9f
/sentisquare 16#3322
/sentosquare 16#3323
/seven 16#0037
/sevenarabic 16#0667
/sevenbengali 16#09ed
/sevencircle 16#2466
/sevencircleinversesansserif 16#2790
/sevendeva 16#096d
/seveneighths 16#215e
/sevengujarati 16#0aed
/sevengurmukhi 16#0a6d
/sevenhackarabic 16#0667
/sevenhangzhou 16#3027
/sevenideographicparen 16#3226
/seveninferior 16#2087
/sevenmonospace 16#ff17
/sevenoldstyle 16#f737
/sevenparen 16#247a
/sevenperiod 16#248e
/sevenpersian 16#06f7
/sevenroman 16#2176
/sevensuperior 16#2077
/seventeencircle 16#2470
/seventeenparen 16#2484
/seventeenperiod 16#2498
/seventhai 16#0e57
/sfthyphen 16#00ad
/shaarmenian 16#0577
/shabengali 16#09b6
/shacyrillic 16#0448
/shaddaarabic 16#0651
/shaddadammaarabic 16#fc61
/shaddadammatanarabic 16#fc5e
/shaddafathaarabic 16#fc60
/shaddakasraarabic 16#fc62
/shaddakasratanarabic 16#fc5f
/shade 16#2592
/shadedark 16#2593
/shadelight 16#2591
/shademedium 16#2592
/shadeva 16#0936
/shagujarati 16#0ab6
/shagurmukhi 16#0a36
/shalshelethebrew 16#0593
/shbopomofo 16#3115
/shchacyrillic 16#0449
/sheenarabic 16#0634
/sheenfinalarabic 16#feb6
/sheeninitialarabic 16#feb7
/sheenmedialarabic 16#feb8
/sheicoptic 16#03e3
/sheqel 16#20aa
/sheqelhebrew 16#20aa
/sheva 16#05b0
/sheva115 16#05b0
/sheva15 16#05b0
/sheva22 16#05b0
/sheva2e 16#05b0
/shevahebrew 16#05b0
/shevanarrowhebrew 16#05b0
/shevaquarterhebrew 16#05b0
/shevawidehebrew 16#05b0
/shhacyrillic 16#04bb
/shimacoptic 16#03ed
/shin 16#05e9
/shindagesh 16#fb49
/shindageshhebrew 16#fb49
/shindageshshindot 16#fb2c
/shindageshshindothebrew 16#fb2c
/shindageshsindot 16#fb2d
/shindageshsindothebrew 16#fb2d
/shindothebrew 16#05c1
/shinhebrew 16#05e9
/shinshindot 16#fb2a
/shinshindothebrew 16#fb2a
/shinsindot 16#fb2b
/shinsindothebrew 16#fb2b
/shook 16#0282
/sigma 16#03c3
/sigma1 16#03c2
/sigmafinal 16#03c2
/sigmalunatesymbolgreek 16#03f2
/sihiragana 16#3057
/sikatakana 16#30b7
/sikatakanahalfwidth 16#ff7c
/siluqhebrew 16#05bd
/siluqlefthebrew 16#05bd
/similar 16#223c
/sindothebrew 16#05c2
/siosacirclekorean 16#3274
/siosaparenkorean 16#3214
/sioscieuckorean 16#317e
/sioscirclekorean 16#3266
/sioskiyeokkorean 16#317a
/sioskorean 16#3145
/siosnieunkorean 16#317b
/siosparenkorean 16#3206
/siospieupkorean 16#317d
/siostikeutkorean 16#317c
/six 16#0036
/sixarabic 16#0666
/sixbengali 16#09ec
/sixcircle 16#2465
/sixcircleinversesansserif 16#278f
/sixdeva 16#096c
/sixgujarati 16#0aec
/sixgurmukhi 16#0a6c
/sixhackarabic 16#0666
/sixhangzhou 16#3026
/sixideographicparen 16#3225
/sixinferior 16#2086
/sixmonospace 16#ff16
/sixoldstyle 16#f736
/sixparen 16#2479
/sixperiod 16#248d
/sixpersian 16#06f6
/sixroman 16#2175
/sixsuperior 16#2076
/sixteencircle 16#246f
/sixteencurrencydenominatorbengali 16#09f9
/sixteenparen 16#2483
/sixteenperiod 16#2497
/sixthai 16#0e56
/slash 16#002f
/slashmonospace 16#ff0f
/slong 16#017f
/slongdotaccent 16#1e9b
/smileface 16#263a
/smonospace 16#ff53
/sofpasuqhebrew 16#05c3
/softhyphen 16#00ad
/softsigncyrillic 16#044c
/sohiragana 16#305d
/sokatakana 16#30bd
/sokatakanahalfwidth 16#ff7f
/soliduslongoverlaycmb 16#0338
/solidusshortoverlaycmb 16#0337
/sorusithai 16#0e29
/sosalathai 16#0e28
/sosothai 16#0e0b
/sosuathai 16#0e2a
/space 16#0020
/spacehackarabic 16#0020
/spade 16#2660
/spadesuitblack 16#2660
/spadesuitwhite 16#2664
/sparen 16#24ae
/squarebelowcmb 16#033b
/squarecc 16#33c4
/squarecm 16#339d
/squarediagonalcrosshatchfill 16#25a9
/squarehorizontalfill 16#25a4
/squarekg 16#338f
/squarekm 16#339e
/squarekmcapital 16#33ce
/squareln 16#33d1
/squarelog 16#33d2
/squaremg 16#338e
/squaremil 16#33d5
/squaremm 16#339c
/squaremsquared 16#33a1
/squareorthogonalcrosshatchfill 16#25a6
/squareupperlefttolowerrightfill 16#25a7
/squareupperrighttolowerleftfill 16#25a8
/squareverticalfill 16#25a5
/squarewhitewithsmallblack 16#25a3
/srsquare 16#33db
/ssabengali 16#09b7
/ssadeva 16#0937
/ssagujarati 16#0ab7
/ssangcieuckorean 16#3149
/ssanghieuhkorean 16#3185
/ssangieungkorean 16#3180
/ssangkiyeokkorean 16#3132
/ssangnieunkorean 16#3165
/ssangpieupkorean 16#3143
/ssangsioskorean 16#3146
/ssangtikeutkorean 16#3138
/ssuperior 16#f6f2
/sterling 16#00a3
/sterlingmonospace 16#ffe1
/strokelongoverlaycmb 16#0336
/strokeshortoverlaycmb 16#0335
/subset 16#2282
/subsetnotequal 16#228a
/subsetorequal 16#2286
/succeeds 16#227b
/suchthat 16#220b
/suhiragana 16#3059
/sukatakana 16#30b9
/sukatakanahalfwidth 16#ff7d
/sukunarabic 16#0652
/summation 16#2211
/sun 16#263c
/superset 16#2283
/supersetnotequal 16#228b
/supersetorequal 16#2287
/svsquare 16#33dc
/syouwaerasquare 16#337c
/t 16#0074
/tabengali 16#09a4
/tackdown 16#22a4
/tackleft 16#22a3
/tadeva 16#0924
/tagujarati 16#0aa4
/tagurmukhi 16#0a24
/taharabic 16#0637
/tahfinalarabic 16#fec2
/tahinitialarabic 16#fec3
/tahiragana 16#305f
/tahmedialarabic 16#fec4
/taisyouerasquare 16#337d
/takatakana 16#30bf
/takatakanahalfwidth 16#ff80
/tatweelarabic 16#0640
/tau 16#03c4
/tav 16#05ea
/tavdages 16#fb4a
/tavdagesh 16#fb4a
/tavdageshhebrew 16#fb4a
/tavhebrew 16#05ea
/tbar 16#0167
/tbopomofo 16#310a
/tcaron 16#0165
/tccurl 16#02a8
/tcedilla 16#0163
/tcheharabic 16#0686
/tchehfinalarabic 16#fb7b
/tchehinitialarabic 16#fb7c
/tchehmedialarabic 16#fb7d
/tcircle 16#24e3
/tcircumflexbelow 16#1e71
/tcommaaccent 16#0163
/tdieresis 16#1e97
/tdotaccent 16#1e6b
/tdotbelow 16#1e6d
/tecyrillic 16#0442
/tedescendercyrillic 16#04ad
/teharabic 16#062a
/tehfinalarabic 16#fe96
/tehhahinitialarabic 16#fca2
/tehhahisolatedarabic 16#fc0c
/tehinitialarabic 16#fe97
/tehiragana 16#3066
/tehjeeminitialarabic 16#fca1
/tehjeemisolatedarabic 16#fc0b
/tehmarbutaarabic 16#0629
/tehmarbutafinalarabic 16#fe94
/tehmedialarabic 16#fe98
/tehmeeminitialarabic 16#fca4
/tehmeemisolatedarabic 16#fc0e
/tehnoonfinalarabic 16#fc73
/tekatakana 16#30c6
/tekatakanahalfwidth 16#ff83
/telephone 16#2121
/telephoneblack 16#260e
/telishagedolahebrew 16#05a0
/telishaqetanahebrew 16#05a9
/tencircle 16#2469
/tenideographicparen 16#3229
/tenparen 16#247d
/tenperiod 16#2491
/tenroman 16#2179
/tesh 16#02a7
/tet 16#05d8
/tetdagesh 16#fb38
/tetdageshhebrew 16#fb38
/tethebrew 16#05d8
/tetsecyrillic 16#04b5
/tevirhebrew 16#059b
/tevirlefthebrew 16#059b
/thabengali 16#09a5
/thadeva 16#0925
/thagujarati 16#0aa5
/thagurmukhi 16#0a25
/thalarabic 16#0630
/thalfinalarabic 16#feac
/thanthakhatlowleftthai 16#f898
/thanthakhatlowrightthai 16#f897
/thanthakhatthai 16#0e4c
/thanthakhatupperleftthai 16#f896
/theharabic 16#062b
/thehfinalarabic 16#fe9a
/thehinitialarabic 16#fe9b
/thehmedialarabic 16#fe9c
/thereexists 16#2203
/therefore 16#2234
/theta 16#03b8
/theta1 16#03d1
/thetasymbolgreek 16#03d1
/thieuthacirclekorean 16#3279
/thieuthaparenkorean 16#3219
/thieuthcirclekorean 16#326b
/thieuthkorean 16#314c
/thieuthparenkorean 16#320b
/thirteencircle 16#246c
/thirteenparen 16#2480
/thirteenperiod 16#2494
/thonangmonthothai 16#0e11
/thook 16#01ad
/thophuthaothai 16#0e12
/thorn 16#00fe
/thothahanthai 16#0e17
/thothanthai 16#0e10
/thothongthai 16#0e18
/thothungthai 16#0e16
/thousandcyrillic 16#0482
/thousandsseparatorarabic 16#066c
/thousandsseparatorpersian 16#066c
/three 16#0033
/threearabic 16#0663
/threebengali 16#09e9
/threecircle 16#2462
/threecircleinversesansserif 16#278c
/threedeva 16#0969
/threeeighths 16#215c
/threegujarati 16#0ae9
/threegurmukhi 16#0a69
/threehackarabic 16#0663
/threehangzhou 16#3023
/threeideographicparen 16#3222
/threeinferior 16#2083
/threemonospace 16#ff13
/threenumeratorbengali 16#09f6
/threeoldstyle 16#f733
/threeparen 16#2476
/threeperiod 16#248a
/threepersian 16#06f3
/threequarters 16#00be
/threequartersemdash 16#f6de
/threeroman 16#2172
/threesuperior 16#00b3
/threethai 16#0e53
/thzsquare 16#3394
/tihiragana 16#3061
/tikatakana 16#30c1
/tikatakanahalfwidth 16#ff81
/tikeutacirclekorean 16#3270
/tikeutaparenkorean 16#3210
/tikeutcirclekorean 16#3262
/tikeutkorean 16#3137
/tikeutparenkorean 16#3202
/tilde 16#02dc
/tildebelowcmb 16#0330
/tildecmb 16#0303
/tildecomb 16#0303
/tildedoublecmb 16#0360
/tildeoperator 16#223c
/tildeoverlaycmb 16#0334
/tildeverticalcmb 16#033e
/timescircle 16#2297
/tipehahebrew 16#0596
/tipehalefthebrew 16#0596
/tippigurmukhi 16#0a70
/titlocyrilliccmb 16#0483
/tiwnarmenian 16#057f
/tlinebelow 16#1e6f
/tmonospace 16#ff54
/toarmenian 16#0569
/tohiragana 16#3068
/tokatakana 16#30c8
/tokatakanahalfwidth 16#ff84
/tonebarextrahighmod 16#02e5
/tonebarextralowmod 16#02e9
/tonebarhighmod 16#02e6
/tonebarlowmod 16#02e8
/tonebarmidmod 16#02e7
/tonefive 16#01bd
/tonesix 16#0185
/tonetwo 16#01a8
/tonos 16#0384
/tonsquare 16#3327
/topatakthai 16#0e0f
/tortoiseshellbracketleft 16#3014
/tortoiseshellbracketleftsmall 16#fe5d
/tortoiseshellbracketleftvertical 16#fe39
/tortoiseshellbracketright 16#3015
/tortoiseshellbracketrightsmall 16#fe5e
/tortoiseshellbracketrightvertical 16#fe3a
/totaothai 16#0e15
/tpalatalhook 16#01ab
/tparen 16#24af
/trademark 16#2122
/trademarksans 16#f8ea
/trademarkserif 16#f6db
/tretroflexhook 16#0288
/triagdn 16#25bc
/triaglf 16#25c4
/triagrt 16#25ba
/triagup 16#25b2
/ts 16#02a6
/tsadi 16#05e6
/tsadidagesh 16#fb46
/tsadidageshhebrew 16#fb46
/tsadihebrew 16#05e6
/tsecyrillic 16#0446
/tsere 16#05b5
/tsere12 16#05b5
/tsere1e 16#05b5
/tsere2b 16#05b5
/tserehebrew 16#05b5
/tserenarrowhebrew 16#05b5
/tserequarterhebrew 16#05b5
/tserewidehebrew 16#05b5
/tshecyrillic 16#045b
/tsuperior 16#f6f3
/ttabengali 16#099f
/ttadeva 16#091f
/ttagujarati 16#0a9f
/ttagurmukhi 16#0a1f
/tteharabic 16#0679
/ttehfinalarabic 16#fb67
/ttehinitialarabic 16#fb68
/ttehmedialarabic 16#fb69
/tthabengali 16#09a0
/tthadeva 16#0920
/tthagujarati 16#0aa0
/tthagurmukhi 16#0a20
/tturned 16#0287
/tuhiragana 16#3064
/tukatakana 16#30c4
/tukatakanahalfwidth 16#ff82
/tusmallhiragana 16#3063
/tusmallkatakana 16#30c3
/tusmallkatakanahalfwidth 16#ff6f
/twelvecircle 16#246b
/twelveparen 16#247f
/twelveperiod 16#2493
/twelveroman 16#217b
/twentycircle 16#2473
/twentyhangzhou 16#5344
/twentyparen 16#2487
/twentyperiod 16#249b
/two 16#0032
/twoarabic 16#0662
/twobengali 16#09e8
/twocircle 16#2461
/twocircleinversesansserif 16#278b
/twodeva 16#0968
/twodotenleader 16#2025
/twodotleader 16#2025
/twodotleadervertical 16#fe30
/twogujarati 16#0ae8
/twogurmukhi 16#0a68
/twohackarabic 16#0662
/twohangzhou 16#3022
/twoideographicparen 16#3221
/twoinferior 16#2082
/twomonospace 16#ff12
/twonumeratorbengali 16#09f5
/twooldstyle 16#f732
/twoparen 16#2475
/twoperiod 16#2489
/twopersian 16#06f2
/tworoman 16#2171
/twostroke 16#01bb
/twosuperior 16#00b2
/twothai 16#0e52
/twothirds 16#2154
/u 16#0075
/uacute 16#00fa
/ubar 16#0289
/ubengali 16#0989
/ubopomofo 16#3128
/ubreve 16#016d
/ucaron 16#01d4
/ucircle 16#24e4
/ucircumflex 16#00fb
/ucircumflexbelow 16#1e77
/ucyrillic 16#0443
/udattadeva 16#0951
/udblacute 16#0171
/udblgrave 16#0215
/udeva 16#0909
/udieresis 16#00fc
/udieresisacute 16#01d8
/udieresisbelow 16#1e73
/udieresiscaron 16#01da
/udieresiscyrillic 16#04f1
/udieresisgrave 16#01dc
/udieresismacron 16#01d6
/udotbelow 16#1ee5
/ugrave 16#00f9
/ugujarati 16#0a89
/ugurmukhi 16#0a09
/uhiragana 16#3046
/uhookabove 16#1ee7
/uhorn 16#01b0
/uhornacute 16#1ee9
/uhorndotbelow 16#1ef1
/uhorngrave 16#1eeb
/uhornhookabove 16#1eed
/uhorntilde 16#1eef
/uhungarumlaut 16#0171
/uhungarumlautcyrillic 16#04f3
/uinvertedbreve 16#0217
/ukatakana 16#30a6
/ukatakanahalfwidth 16#ff73
/ukcyrillic 16#0479
/ukorean 16#315c
/umacron 16#016b
/umacroncyrillic 16#04ef
/umacrondieresis 16#1e7b
/umatragurmukhi 16#0a41
/umonospace 16#ff55
/underscore 16#005f
/underscoredbl 16#2017
/underscoremonospace 16#ff3f
/underscorevertical 16#fe33
/underscorewavy 16#fe4f
/union 16#222a
/universal 16#2200
/uogonek 16#0173
/uparen 16#24b0
/upblock 16#2580
/upperdothebrew 16#05c4
/upsilon 16#03c5
/upsilondieresis 16#03cb
/upsilondieresistonos 16#03b0
/upsilonlatin 16#028a
/upsilontonos 16#03cd
/uptackbelowcmb 16#031d
/uptackmod 16#02d4
/uragurmukhi 16#0a73
/uring 16#016f
/ushortcyrillic 16#045e
/usmallhiragana 16#3045
/usmallkatakana 16#30a5
/usmallkatakanahalfwidth 16#ff69
/ustraightcyrillic 16#04af
/ustraightstrokecyrillic 16#04b1
/utilde 16#0169
/utildeacute 16#1e79
/utildebelow 16#1e75
/uubengali 16#098a
/uudeva 16#090a
/uugujarati 16#0a8a
/uugurmukhi 16#0a0a
/uumatragurmukhi 16#0a42
/uuvowelsignbengali 16#09c2
/uuvowelsigndeva 16#0942
/uuvowelsigngujarati 16#0ac2
/uvowelsignbengali 16#09c1
/uvowelsigndeva 16#0941
/uvowelsigngujarati 16#0ac1
/v 16#0076
/vadeva 16#0935
/vagujarati 16#0ab5
/vagurmukhi 16#0a35
/vakatakana 16#30f7
/vav 16#05d5
/vavdagesh 16#fb35
/vavdagesh65 16#fb35
/vavdageshhebrew 16#fb35
/vavhebrew 16#05d5
/vavholam 16#fb4b
/vavholamhebrew 16#fb4b
/vavvavhebrew 16#05f0
/vavyodhebrew 16#05f1
/vcircle 16#24e5
/vdotbelow 16#1e7f
/vecyrillic 16#0432
/veharabic 16#06a4
/vehfinalarabic 16#fb6b
/vehinitialarabic 16#fb6c
/vehmedialarabic 16#fb6d
/vekatakana 16#30f9
/venus 16#2640
/verticalbar 16#007c
/verticallineabovecmb 16#030d
/verticallinebelowcmb 16#0329
/verticallinelowmod 16#02cc
/verticallinemod 16#02c8
/vewarmenian 16#057e
/vhook 16#028b
/vikatakana 16#30f8
/viramabengali 16#09cd
/viramadeva 16#094d
/viramagujarati 16#0acd
/visargabengali 16#0983
/visargadeva 16#0903
/visargagujarati 16#0a83
/vmonospace 16#ff56
/voarmenian 16#0578
/voicediterationhiragana 16#309e
/voicediterationkatakana 16#30fe
/voicedmarkkana 16#309b
/voicedmarkkanahalfwidth 16#ff9e
/vokatakana 16#30fa
/vparen 16#24b1
/vtilde 16#1e7d
/vturned 16#028c
/vuhiragana 16#3094
/vukatakana 16#30f4
/w 16#0077
/wacute 16#1e83
/waekorean 16#3159
/wahiragana 16#308f
/wakatakana 16#30ef
/wakatakanahalfwidth 16#ff9c
/wakorean 16#3158
/wasmallhiragana 16#308e
/wasmallkatakana 16#30ee
/wattosquare 16#3357
/wavedash 16#301c
/wavyunderscorevertical 16#fe34
/wawarabic 16#0648
/wawfinalarabic 16#feee
/wawhamzaabovearabic 16#0624
/wawhamzaabovefinalarabic 16#fe86
/wbsquare 16#33dd
/wcircle 16#24e6
/wcircumflex 16#0175
/wdieresis 16#1e85
/wdotaccent 16#1e87
/wdotbelow 16#1e89
/wehiragana 16#3091
/weierstrass 16#2118
/wekatakana 16#30f1
/wekorean 16#315e
/weokorean 16#315d
/wgrave 16#1e81
/whitebullet 16#25e6
/whitecircle 16#25cb
/whitecircleinverse 16#25d9
/whitecornerbracketleft 16#300e
/whitecornerbracketleftvertical 16#fe43
/whitecornerbracketright 16#300f
/whitecornerbracketrightvertical 16#fe44
/whitediamond 16#25c7
/whitediamondcontainingblacksmalldiamond 16#25c8
/whitedownpointingsmalltriangle 16#25bf
/whitedownpointingtriangle 16#25bd
/whiteleftpointingsmalltriangle 16#25c3
/whiteleftpointingtriangle 16#25c1
/whitelenticularbracketleft 16#3016
/whitelenticularbracketright 16#3017
/whiterightpointingsmalltriangle 16#25b9
/whiterightpointingtriangle 16#25b7
/whitesmallsquare 16#25ab
/whitesmilingface 16#263a
/whitesquare 16#25a1
/whitestar 16#2606
/whitetelephone 16#260f
/whitetortoiseshellbracketleft 16#3018
/whitetortoiseshellbracketright 16#3019
/whiteuppointingsmalltriangle 16#25b5
/whiteuppointingtriangle 16#25b3
/wihiragana 16#3090
/wikatakana 16#30f0
/wikorean 16#315f
/wmonospace 16#ff57
/wohiragana 16#3092
/wokatakana 16#30f2
/wokatakanahalfwidth 16#ff66
/won 16#20a9
/wonmonospace 16#ffe6
/wowaenthai 16#0e27
/wparen 16#24b2
/wring 16#1e98
/wsuperior 16#02b7
/wturned 16#028d
/wynn 16#01bf
/x 16#0078
/xabovecmb 16#033d
/xbopomofo 16#3112
/xcircle 16#24e7
/xdieresis 16#1e8d
/xdotaccent 16#1e8b
/xeharmenian 16#056d
/xi 16#03be
/xmonospace 16#ff58
/xparen 16#24b3
/xsuperior 16#02e3
/y 16#0079
/yaadosquare 16#334e
/yabengali 16#09af
/yacute 16#00fd
/yadeva 16#092f
/yaekorean 16#3152
/yagujarati 16#0aaf
/yagurmukhi 16#0a2f
/yahiragana 16#3084
/yakatakana 16#30e4
/yakatakanahalfwidth 16#ff94
/yakorean 16#3151
/yamakkanthai 16#0e4e
/yasmallhiragana 16#3083
/yasmallkatakana 16#30e3
/yasmallkatakanahalfwidth 16#ff6c
/yatcyrillic 16#0463
/ycircle 16#24e8
/ycircumflex 16#0177
/ydieresis 16#00ff
/ydotaccent 16#1e8f
/ydotbelow 16#1ef5
/yeharabic 16#064a
/yehbarreearabic 16#06d2
/yehbarreefinalarabic 16#fbaf
/yehfinalarabic 16#fef2
/yehhamzaabovearabic 16#0626
/yehhamzaabovefinalarabic 16#fe8a
/yehhamzaaboveinitialarabic 16#fe8b
/yehhamzaabovemedialarabic 16#fe8c
/yehinitialarabic 16#fef3
/yehmedialarabic 16#fef4
/yehmeeminitialarabic 16#fcdd
/yehmeemisolatedarabic 16#fc58
/yehnoonfinalarabic 16#fc94
/yehthreedotsbelowarabic 16#06d1
/yekorean 16#3156
/yen 16#00a5
/yenmonospace 16#ffe5
/yeokorean 16#3155
/yeorinhieuhkorean 16#3186
/yerahbenyomohebrew 16#05aa
/yerahbenyomolefthebrew 16#05aa
/yericyrillic 16#044b
/yerudieresiscyrillic 16#04f9
/yesieungkorean 16#3181
/yesieungpansioskorean 16#3183
/yesieungsioskorean 16#3182
/yetivhebrew 16#059a
/ygrave 16#1ef3
/yhook 16#01b4
/yhookabove 16#1ef7
/yiarmenian 16#0575
/yicyrillic 16#0457
/yikorean 16#3162
/yinyang 16#262f
/yiwnarmenian 16#0582
/ymonospace 16#ff59
/yod 16#05d9
/yoddagesh 16#fb39
/yoddageshhebrew 16#fb39
/yodhebrew 16#05d9
/yodyodhebrew 16#05f2
/yodyodpatahhebrew 16#fb1f
/yohiragana 16#3088
/yoikorean 16#3189
/yokatakana 16#30e8
/yokatakanahalfwidth 16#ff96
/yokorean 16#315b
/yosmallhiragana 16#3087
/yosmallkatakana 16#30e7
/yosmallkatakanahalfwidth 16#ff6e
/yotgreek 16#03f3
/yoyaekorean 16#3188
/yoyakorean 16#3187
/yoyakthai 16#0e22
/yoyingthai 16#0e0d
/yparen 16#24b4
/ypogegrammeni 16#037a
/ypogegrammenigreekcmb 16#0345
/yr 16#01a6
/yring 16#1e99
/ysuperior 16#02b8
/ytilde 16#1ef9
/yturned 16#028e
/yuhiragana 16#3086
/yuikorean 16#318c
/yukatakana 16#30e6
/yukatakanahalfwidth 16#ff95
/yukorean 16#3160
/yusbigcyrillic 16#046b
/yusbigiotifiedcyrillic 16#046d
/yuslittlecyrillic 16#0467
/yuslittleiotifiedcyrillic 16#0469
/yusmallhiragana 16#3085
/yusmallkatakana 16#30e5
/yusmallkatakanahalfwidth 16#ff6d
/yuyekorean 16#318b
/yuyeokorean 16#318a
/yyabengali 16#09df
/yyadeva 16#095f
/z 16#007a
/zaarmenian 16#0566
/zacute 16#017a
/zadeva 16#095b
/zagurmukhi 16#0a5b
/zaharabic 16#0638
/zahfinalarabic 16#fec6
/zahinitialarabic 16#fec7
/zahiragana 16#3056
/zahmedialarabic 16#fec8
/zainarabic 16#0632
/zainfinalarabic 16#feb0
/zakatakana 16#30b6
/zaqefgadolhebrew 16#0595
/zaqefqatanhebrew 16#0594
/zarqahebrew 16#0598
/zayin 16#05d6
/zayindagesh 16#fb36
/zayindageshhebrew 16#fb36
/zayinhebrew 16#05d6
/zbopomofo 16#3117
/zcaron 16#017e
/zcircle 16#24e9
/zcircumflex 16#1e91
/zcurl 16#0291
/zdot 16#017c
/zdotaccent 16#017c
/zdotbelow 16#1e93
/zecyrillic 16#0437
/zedescendercyrillic 16#0499
/zedieresiscyrillic 16#04df
/zehiragana 16#305c
/zekatakana 16#30bc
/zero 16#0030
/zeroarabic 16#0660
/zerobengali 16#09e6
/zerodeva 16#0966
/zerogujarati 16#0ae6
/zerogurmukhi 16#0a66
/zerohackarabic 16#0660
/zeroinferior 16#2080
/zeromonospace 16#ff10
/zerooldstyle 16#f730
/zeropersian 16#06f0
/zerosuperior 16#2070
/zerothai 16#0e50
/zerowidthjoiner 16#feff
/zerowidthnonjoiner 16#200c
/zerowidthspace 16#200b
/zeta 16#03b6
/zhbopomofo 16#3113
/zhearmenian 16#056a
/zhebrevecyrillic 16#04c2
/zhecyrillic 16#0436
/zhedescendercyrillic 16#0497
/zhedieresiscyrillic 16#04dd
/zihiragana 16#3058
/zikatakana 16#30b8
/zinorhebrew 16#05ae
/zlinebelow 16#1e95
/zmonospace 16#ff5a
/zohiragana 16#305e
/zokatakana 16#30be
/zparen 16#24b5
/zretroflexhook 16#0290
/zstroke 16#01b6
/zuhiragana 16#305a
/zukatakana 16#30ba
.dicttomark readonly def
/currentglobal where
{pop currentglobal{setglobal}true setglobal}
{{}}
ifelse
/MacRomanEncoding .findencoding
/MacGlyphEncoding
/.notdef/.null/CR
4 index 32 95 getinterval aload pop
99 index 128 45 getinterval aload pop
/notequal/AE
/Oslash/infinity/plusminus/lessequal/greaterequal
/yen/mu1/partialdiff/summation/product
/pi/integral/ordfeminine/ordmasculine/Ohm
/ae/oslash/questiondown/exclamdown/logicalnot
/radical/florin/approxequal/increment/guillemotleft
/guillemotright/ellipsis/nbspace
174 index 203 12 getinterval aload pop
/lozenge
187 index 216 24 getinterval aload pop
/applelogo
212 index 241 7 getinterval aload pop
/overscore
220 index 249 7 getinterval aload pop
/Lslash/lslash/Scaron/scaron
/Zcaron/zcaron/brokenbar/Eth/eth
/Yacute/yacute/Thorn/thorn/minus
/multiply/onesuperior/twosuperior/threesuperior/onehalf
/onequarter/threequarters/franc/Gbreve/gbreve
/Idotaccent/Scedilla/scedilla/Cacute/cacute
/Ccaron/ccaron/dmacron
260 -1 roll pop
258 packedarray
7 1 index .registerencoding
.defineencoding
exec
%%BeginResource: procset (PDF Font obj_8)
8 0 obj
<</R6
6 0 R>>
endobj
%%EndResource
%%BeginResource: procset (PDF Font obj_6)
6 0 obj
<</BaseFont/QWXAGL+CMR10/FontDescriptor 7 0 R/Type/Font
/FirstChar 37/LastChar 122/Widths[ 833 0 0 388 388 0 0 0 0 0 0
500 500 500 0 500 500 500 500 500 0 0 0 0 0 0 0
0 750 0 722 763 0 652 784 0 0 0 0 0 0 0 0
0 0 736 0 722 750 750 0 0 0 0 0 0 0 0 0
0 500 0 0 0 0 0 0 0 277 0 0 277 0 555 500
555 0 0 0 388 0 0 0 0 0 444]
/Subtype/Type1>>
endobj
%%EndResource
%%BeginResource: file (PDF FontDescriptor obj_7)
7 0 obj
<</Type/FontDescriptor/FontName/QWXAGL+CMR10/FontBBox[0 -250 776 750]/Flags 32
/Ascent 750
/CapHeight 716
/Descent -250
/ItalicAngle 0
/StemV 116
/MissingWidth 500
/XHeight 448
/CharSet(/A/C/D/F/G/R/T/U/V/a/eight/five/four/i/l/n/o/one/p/parenleft/parenright/percent/seven/six/t/two/z/zero)/FontFile 9 0 R>>
endobj
%%EndResource
%%BeginResource: file (PDF FontFile obj_9)
9 0 obj
<</Filter[/ASCII85Decode
/LZWDecode]
/Length1 1020
/Length2 15638
/Length3 533/Length 13782>>stream
J-eUh@sPTJ<'6ZZUCh1X>VI0(#\;AF`*`ohN'mk;8W;jU0c<[IPAhpW"G7=]`aa7DCE&;Sb_K,M
JjgrK'920Gl'+F]+e-a^PEDZdBTJJ`"u>,45VX7=7cM5aaC$\AL^5?V/JQ352[B_e';;)AD6cZ*
-G]^VhIAC1:5=r8.!\?E*!\h#H/AHO0UkgHj*A_k5,Qj?k*mcLUh)R<:<$3TJl*U;?t[kHW5)\6
1)Wd6@Q"A;CcpiqPPPTmi,q(^Ce"@0aPEN:Bb%#XAu^8EMFFum1F]pcE\a"UOBk7mF!lR12o5TE
E\5SaMo_dU*n!SlWf9Kb!t!'0@6B-r'`STSpDT3.:BCVIi5THq$]WWK$(+!0Ne?O\Q4?/XAt"H_
];UDn6Q:oD^^r87&-e1t?8t'M.+lp6%>6!qL5=>4%#rCZNt.23r$WOGK@7>s_D")#XG,jfI2Kh0
X=QCBnUs%C#,.6ZQ4B[Rru]9)S;&l+E]d8C#*,A=1qmtHC)Wr-HQpS519t0TL#XYAUe/s1D(LK!
/7]\c:9;tPL='C8,#.=#D[Qj"W'D<?69Ol[83qKs5KY-oWB\QMXT's]e'b&W$o?<`/<)KJ@6#p&
nhUYHZ9i;b`)60!$)9<aCJ>!h"Aom<+dE*l9WgaIjt;_\8Ed-bU5Jc)D"=`g4a%/R(g$e=?nR*I
PEn-f[BNsg$DL5X/Y^D$X:PUBZmlms6(F]\=]M6%>G/hEKK$VTfNS]9!GH$b.I+LM)okbi_e)rP
HS0sp:M$%E$n3A1KW!.%S13&WGh+X-j%.82i6B?`,.Rt730-7`0GTGWd!3d`Vo(%M15oU;N#@GF
\;VD^@PEZV#XOi4)i,ZQED)&>>lZ#PJeYF4#_EUq,6gIkZ'GS[Li7KnJ^&upL1-Hc(l"arE#a\.
&;QJUJ5Cn<#(`G%+UGJHL)U?5R#*eWTu^a`L4UOU+c)hRMAui;.#4,p+ioT]m()\_(^N!:Mg>Z&
c@m8EJi:N9LnI\cV/F,h^V5LI\7\kKJ]&4'Ca(cIQu!_gF0l.B5)%/c+qC:eFS<rISVA=A'>acS
:?/\c64>=]L:^J])XP;!.rL+#^hM&L3T+?j#$JXK[d#$/A/Y[S(hsrp_AHjSLfuaK*/8u?E#\8^
^hP$KR])/fL09Pg\S\&^=<f%NE,4P&@?7u3J]$j\JIJThP]X/Q$iji>%Fi'&Lu^k6FF22M(c+F1
%
%Gm*#;7nW^8C`<h.n]`NThuVApW#N"<_W"l'48jK$54`rae@B\rhc"m6RsBBIuUq2!52W>*([a:O!ke
8$!09Zebsq`NR&?Qk4h,;M5R#SjQ!4&Qq(I#`gi]&VuPSibJ+3!>Y"7V[2s`o-dhfh8KI]DUW'Q
@!rJ`(dGNO%3NK9.R;AN5Vf&8S!,dkERh).LWK5HH[g<X`U/=,?:CIo6sD8$)E:gY'H/5[NhHcp
"D6*1_3dLmXI;tn-n?6fbFJnjn^G>JkgY2/1hiW4,,&#]/K:'FM36?n5WA0@g:K6KOD-s90Ot69
O\pDiFgT'gX:ATI2elaS=MR1>b[1JA>HLcrbBYB,R?QKSmLj'R7Z,L4_jL]A0q(5D\lKnXZu&(e
^UBIkYn3u*PYFlN^Ll@YTC>-`+W)%!=<?@&U\JWLc*t&V@mGUHX.A2]Yq="PrY[eEBPjn-]_:Q6
Sg#>CF:#.XQ\O'p1O06K.G"]86k*<.c$Skima*)4oH/_%I.@VrZo3aPR^G(KN:AGZjNf,_oV*i*
+nE8.)@^(JZ#+H&PXU+5qe!FAB9CcG\*0M>(>>adXbKfkd#&:%FJ4);M5V#*EXc2.<cEaYjL."O
k39LkB!#4-\fbJ5_1OM9Xc<k,)+kAX]Pt)/<V*q[Zj]2u1kk;H"M*c=b$O0?K+kC![cV1l?8H/r
m'9g.Q[KgP]?kV[OejsY\G6,':80L(YK]T,e`@*>NU:VaZhK_a+D"]'m%*USQBO"3.nc0\H-80;
hYBJWB7A-K+O?I+T-3ECDR?r<"(JG0lpKWXY][UD.UbT8MpI#P]p_/$qUtt[$B7JCW3^*C&6YAV
K(MM,2!CV0*)!u6nWH(%g"-h8\1gVFGSn!N/.C$tkE#6QF&'$Bmqf!=Dq%3TZjUEt/43Q[0Lb@o
a'/Q'duB<G%B)[N[aUZ1EWJo]`.L$!f@QcRMcII>XlkrsgM92,nS\%8-iI];eLl\<fiL?'R-g;A
OHJ$^QQ@Q4guc=/XV=50dbo*TVG*PAR8'>N@^29Nj-FubiLJRMFSFIRZ$_[N[_9e7oA[),NR9's
]rK8/)NEU`D\=3P7e)6e_cqbre^%L"7c@t_)HEnk*42]@j-cr.C(.6V-['7)DY#?(mq'/=(b!t.
X"J9c[;LXV,laO=9=d*"Z7bj*X&e;*PL/H&d7b8)?h6TuD&L(#CB!,:'CU:n!q=XYnB`.scrcE"
)ES/&=s&B3]?_'?4Ig6o>5M,?c`+0,#WDq?Ct&ZGSYEi2faCstfQ9fr1qM<lqrt`Y,;(:3X82tn
T3Ie$%(7b-oZlr39JhZR\NiqYK+fJO4g"eHo@HTPaqj;@HIX&g;&RDAROk25'%Lnff$9;DXB5]?
!H.DkK[f;#.$M.jFgfL4V=tF[J<0snlau\m>:e7Hm=n,,68=Ig>@2CZU/g$<O[UB3`%(i@X*$qD
clTg$L6@8VVTg!VkVV:[NCH0=(Z?ZKbqO^1FY%FNeL#3,I,?U1U!7de1NNG-F0@f/2AAMH>(^+-
Y<A.e#=TE]P=8dGC#q2+bXJVfU2Uu)`i[>T>MsjKIHe"#2$scQ=pir$CpFKG9H+0*?PJ+]FdG5"
fN$W^Zu.Fh,-LWf""Xk[]hOK[1H-T)>B>gBpJnf2HN-(\`G(\-^3*FX#kHkWK]0#/+N`bIk[.OV
V/np^Q"u]<I><T6$37$>(5iBd"?gN1'"CB.Y.(0LN.Nf*WN8MV;usE`CeV7;[,t2nlb&CYaD,?c
<@>j`N#LL6oN6kGD$J:`BJ=5_6>bnW`obcdV`)8DZB]%-ElWcLVOW"RZ@XI4p]UY(N[S,-FN4M6
F3;qT-F@HE'V^,:!Cp%\U8!r'i(F8\_ahS!7l%`5QMk3-E9Mgf7tS5s2KL;skt1)MVL&X6NbKck
.SiBB"G0-<Js,A)>fUZ9WZH*@JsjagIB&tEbFELMP3V8FHJjI<#[hJAMKd8eDNN#7jlgrI&D_5e
;Wsi)#V&iOU2rYsTB:sX#2HlRYa&iXe``2(VI%#,<0nrOB'.UZVkVNM,_JNjIP3U2W"<Q1KPo!Q
%hB"s#HV^c-E7<DFX^4?lcPJ?&o?fST-`@sk,+`)N886US$<667X.\i\=TRr,3_([VL"sf$CV<p
6F!&q#2n@:P1g4CLSunKXVQb,!/"`3Cr`2p&\&$\,.t0+g8I907guTbTPCL"Ar\!N`rM-u#&Zr*
YNA_uB&%.a;L\nTG/_+M#:+hT:2.R#CM25BAsT*h"Dr)4H\[oa0;=hJC:HeeE3@4G#2FC$5dC]H
NFoD,;$r/7At[EfK;S.\X73WQ\7u>OB.(!'Dikha3h`KoF%YAeL^6_2!,-!.FX=>+-K_Q<aHT0&
Dl#)Tbd*hb$IUP?=H4Z"a.@WkJH$snMeD[2bqs2)Jpn(mp5)gPLC/e_ZBcfDHHg8LW/>IA;MRdC
D?WpUWCGhNm^-YX\n5^EBgim'k\DQ/BFMV(.fLp\^>albEQXroabFWo>&+Jl>:1V,j]nMC#;0dF
!9ch$-E`(o?>h?7DoXo8a1,r%CmKs[?AGP>Liajj@\o%3MC5iJ-VeA&r.^*N)1o+JLWF)Jlt's[
5pq4A+tTIKW,H>RHV,]2ODL7XW/(\eLnZGVVY\TVmV+D+TSpUGWBtJ8.VVgfkp_F@W)3"ro\k_8
hZrjgC"A#p;)'E%,:9Fm%+_<<CktR;DbUBhVY7/&\pI"LcA$oO9;;m7`+UN]Ff)=s-<uoBMMi.P
`CBR.&,.KsUE\jYXmRC^%)+hr=DoW<5pg8_ldBd5-uV_\>AsXoL9d."H<Z%hYN4>ilkKRmglob!
`3=":VJL4*]OjY(l=f\:9.4`B#pj4^nM1#LKj?KH:s_i6QA5HeLM[N6,^CaoAa%6'jPkXu=AO\d
Wo/hdC`8tj+E,`qPK>;<Yp=0C^jS^bpF$<Q-Jk,)*f\1rBkL\h$)hD^d"=ffGKChCkQ(POo)+7/
^Cj;.7,k?2JHBK,Qo#jXkF/'"pjK'iB8^H+"]G#n@e/$cAV[L2X0X9*#a<A.EQ<NsK@F_?Qq/Q3
nOYhm#.Aa\c=MfP`lG`b`7SA]:i6NfJWU)O6kZDuRY%D7#:FRU.-c]pdX!@$H`UQ;/+di+W,2^_
=_:uVB'iOZm7HUF<@=r"$N?\h+Gm!WDJBHBVSu%N&n\&uJ0q4CnlVGSW'Mb4D\]^V8)U5dhTP'(
foY'9Au(oRDK)M47nMoiX=e3VBN"(WDT8c7N9`V3U:ZXFI:tPkVcrJ`K"b0XCe3>mnGLuHhS8KW
DZs=*E-cqhL.!ZnHmW>>Lp]ul*,hg,J&t0%kCX&;f"X`]QBgTIal<Z(hK26C2X2ht7p:,XMIgEW
TSOY38GH;DBU(,]2?pI$/6lM9D$mBlY\Wh?B!A55J7[lMDekr5Ppg<\#'q`$bN<O`nDnKOer*;%
7o]PA8OEc\^88iW1"783Anmo-cXs&/_?)JeMpDl*MK1H^phA;t#`re:&pC"RU$$8(kUpanUo`_t
J`X0e#N$nDhMGstHm\pZL4H]iC<"AGECPWQ2@aBF]U4B@@C>lI833%c*(2_LII+=u#N0P+>ZE/9
s$lj4mQ>.$k[lI(YU-S*%q'9e;O<:!:?K!^k2=)]d!*THL^gN;#W->`Ah(g;hrrd]F=gRTFH,\o
c)FBo,,B+SYi_k5G_YWlk#dKld3!&eZ7#07L\aOg<:^@IBi']Z9$icgk"UULK4c*FaH:7Mrg'GJ
qW;U11$9#8`=BnBBV^7KD)-L%*e.XlLT+Qf8<uT@`hUYLJn\mk#*UYKa"cSI-FbC]L0AXe/k@>2
8+a)]L;a5"Jj_9MXm>W&XM0O(r4bj3D5puSaJ*6^2JB@9A`Bf+%dnWVoisoEQtO!T#81[HG\o:=
Kb7R8B1.e.K0TWMQj<8fVaPCgQ>$RZCpsbEVHm/ANedq5Ai+79f$,>:1hA#E#,7l%VK,B!10(4l
CII07KsG;H5\N]qZB5uPAo`>.CIp;.9]ktYk%pFj*.-!1eRYo?G7(SZeng6OYUA@PVI%AVZ?r!E
CLpFe\K<1HY_e+;AB0)=B"ib2^1`BJD(%\(l$.Q4"`Q>6pSRG%C1.taW=1`RRqMe\Jh^0#r*.1*
C+=.i</ud7^4R%`?0C5d3DVQtFBd)HJgfGiCWpA3NdIgQHY2uA(>N]fjJ8_2Droi("TWhFXEMqr
Af:a_$3Z0_)ep`OPpa;O->%mBgtcUH>GecEBAYj$Bd]gbP-%$'Yj>)BU;<_r^B]^G7b2BIY1XA&
>:7L=7VOZ?J!)J`LP-;Cac^KPk*/^BF1MLILK]OIpHYl:K1Ak"LTs`(RkEk%/aH6`X4GgW/q,9!
/3,"4'Z+deY`c$_];XM*bMn%'+Gp\1GR.L4Lc2*3mX7XIDHCe.l<oaA.l;,@AdiWi`fP1Qb%R/W
^C(,!At"!7V,p7N.gTCqk,'U4Jh#E5_+&<ZA[:[e3,,H:rlLgp$p_sijFT(X%V:HSBpMH]A!09l
A`BG0V_(/mQDjGoO"Mi/pm..f*-?&L/S<dWV9N)^<E3#4NFt))/P0T0idM6Yq!;3XZte[JnoZXD
ph*@CL8.E8aI!4bL53H8p=,m/[\u6cDRgBsF@saI$>Ca'WoqU<a_R(T@ZD!i($RD`R!=IL<2ccU
DMCo#EUG%$+GdL2Br7):1\to"(l*+rCB`pN"b(lb$B&N3LM#[eZ6>QGc(p)$[g@5HlN4dRMh1'o
=[_[j-<I*7rb$tgH4Mp.LI7ZT<o.VJe0]j$9=fXgOPO\^LSTNX"@E:thMVUcbnZUX3:!7h1quAP
9BmSZ`rK[?Gsl7\OZ'.ZWHDce"K,lZVAO>kBrI$b?Y5U+HRqSDC2g9Zfb5_Q^KXl_[?#3\[7fdi
H7:h@$*eSt/#ddSIIt(peC8mT)g_!8K'ZUB89B7"?#>ZETLCK$032^;9WIhjYc"4Yk?OA[5J7M(
BkQ5Abfr^u0R7@mR:pWIL?OLB^1BlNJ;0&#9j3\"Y6p?=XQImp-d\0XZu^"44@dS6#aRb*@p>i$
V((X$@^'\=MIslr6oBcMl_9,gds>9<^'Bmi8@3:B=S1g%<@3>`L4El*jOn)3M2%a^-J!5b<.R2,
!X_DEo+_Z='p7Z'E2JTaDq1:hltrYJQY)\GPFdP8B*7<c('j3BkhMCmgKKGK>fbd927=u8pkfRs
N%^3-.#aERr5AneQDu!Q8EsaKn8OcnBSh>@kuR).jDL]s9BPh-8rK@e;#V`co7jVh<+;O^G)?aY
F2tM$.,LhfAKV;hV<'%nZ1d8W@rDSDBZS8CL0RN8>-KaFGgX$Cq*'Zj.X_a&#0+DWY*;%=#V'';
@*#%jOX/D2CpSmJq?FhI8(a#o/V'g`rW`FI2(""=lS_OkQmUgFVn@'sbmeXS\-@b9W;),p=SO4\
GU2]l-+K?h>n-D_F3J,D98qRE[2LH6:*fq)aP,C[->/H%BXH!"-q\eJ.Z,J#o-Sp;q\$*pU9-rT
HUdDgOQL3c->G7JE28*2E+3]6KrgdCEJGk0asc8=E/GR7"M+/:VL!&M<mJscM0=R;MnFpB-uLA>
Df(61k8_2gRXF9*AZ#Ha-;]*i(5;/&:^b(n#>TURMZ7<f@IBBY#VRnl;JBaUC<</?015Ehk6SQ,
Gp^<L"&YH(DF,0KLnm>(b\/gX&OtehJC'03*"7Q(;CMm+6lO%!`%eM"JdNKX7O*JX%"pS_N//\q
d0*iC+q4`E6,=Hn72el+,@S\*KLR,F7Kcga^h,8>%-V2A)$V-AMb6J!)8obo0cZ1m&s8k!Ji"C+
#X`Vdg7CbN`s/t,]Z)Ki)%B,8BgiGd7N7;e6^h]LMDHC5LCga*r+\\>JqtXK]F8=<)3BZLJh2;&
1V(TpGO`?(KJarMo"u@<3/\dsBnj!WYo>>I,2L>XJf)jN7?WaI(Rm8h/Zfm!p2fdW$?LKW`CPY:
ND*nS(fRWg+irAX24G##@kot5mR!h'L'*E!*,XiCO@Va%&J>V>WC99_4Z6cKE5/==3fk7&aPpAC
#4GB#O"[IDB#h&m!^)&X!N9HH#3]!'PI"]=L8QiN!/B.0Tq_n/#3%,>W?rd=Eo&L210Bo!X,=Li
L.JX)Q6^Ag<1L;=d"8g%8;Ls00;9Xg)^%bA:?`sS,?hH"C]K.X#U1[)"[_V[*;R(j<"UC[W,i`k
LC]S@aJb'O+WL]+9Q6:'CKf@/8>7"k/@a[FL':?:o.CqIe&Z>BUC%EiWOhBsC=BGG,8-4c0W8Np
_!.(ILb[22C:ab&]`+s&b;0Qt;"53&)[;/Q?5s.Xk_>#<_CBdS#"c_J(^S6adp>DD13eHt1:'Hj
XY_"%U8J<jC:L#)\nK?^N*E%ZW'Uhk%]tYHdMsdRK!L'[L_@AN#]^aretR'a^5%I/Rr^]saM\;"
b7%P[ZT`;+Q5V3'c+]%?8KpR7gGa_;`J/I2@cTkt>IL3.c-0Y6<"/=]N31@!DcoF%$`9%3.+4"/
Z.?e,Cl"``'UHg36Tl"cWf*a0"qH`(oWDnTHD.FB2"J_fD<.Fd,7Zc%(o3"C!ZV54dgHaUWD.@V
ehuJ4(:GY11BLh21F0iS\g$LW3_pd6>YaePM3`l?+r+1ei\^Lm0&_]CMW64um$9r`*Wk-0>2hZ^
[[(tAYYO[AE:jGY;U-4<lB4.N.@//[hM18U1E8aq\h1JD(3A]O:Pbc$R*ag5AP5J6H6&<WF/&\;
1.Wg.)-cNu&rJeqK6EKPDi,<d:()*L^a[R0%_8pGD!AHc^fKWpZYuj=U*,$0K?Yu'9(=<$0u]Zg
m_7uVB6b3!\?mp9++$5S8W-(1XU2CQM?`MA5bkBc*qmrX#[RtjYbYdQWl\CU#\dl$Q0!7o!KgZ/
KLF4M!X`<Q6$PZ\Kd.NL3)uHI@mqYfZNOaOX:W0'1ItK'*g/]_$]2N)U_&8>OE*gZ5nR?IecqAV
3hX>F8UVtC%jIcjQ426u/1,J3P(\/]%6Atm$@%LE"UpGcOa0&\70F0BN)3T,5>LM2UH@O?9$QW:
2(n+^"CjK;)/9O\A2Ko&;fk>-&W7tA+jNT`eE>8<$S)e(VPKq/73$DD-)BWa[ceV>=QsB@"uP(t
7$aa.n[p2'm"(sqaK,^DgE<;jXIA<U5uOse8ghuNVrAJm$<!o_N)YY,jG\5;+`9&+=JHbBHAd],
:IPHG?5%>^@Ll%A7A]V['N36V#[pUY:2mG91=C!oEd:5(RM6W;3_@Lf6T%82h@YoMX2o8nD?N-0
QV_3Y<sm54MTG1^o_O853AOLR=HXpT&=Jti*Ec3XN>E7k@9)"G1'S/M*T2oF:`5!CX(:u:d_,`L
&U,CO`E0Y6k[mPiE1$pK(nMo[C6#9O/#qGlU?@WN%+.%-1i1+/B&K7a;:.I_m&30Z\7/)kEE9*@
LdR>#HWacE/]>%-&X9T+MZJ&Q79G4%'7=AY$a"@7^t5,TEaMV!&k1mnWtI3^%AnFB0*Kq6_Ld/C
$T%KQB<;j]^h0F$,CVN2D"ndf[Y[X+"E,mB'X!$41YeB&-g"+&(<(GjSN/PU-Qn0feM)fB8\et0
Gi1g+FDGX/N_TgS\N'km=:6B70$PG)_:&CcM6RIfW+_29o#c`(),bKe[6E?nGZ;iiC./8MLarR<
G2Y^g,"L#_OHj9L8P)i1C4[U!P4Cug!Vml!Fh43L@,$pOXC*CJ-*/=$D[kBZ6M60p7:P\4T.7K*
L`i&%PT3(t)08S,na;#scqPM>BJHj3Ri)o4Db/;G?3L't]&PCT$52h4C!`.#;Een=d]AKTMEQKa
7#E[>*%f_%_afmXCs.Zu,HAhoXTD8+:Q]9HnDP0%o"8[O1+=>9Tg>%li_k`P,tZ`h)HYL%CWPnD
\"m<X+]?BgN@RYG6mV$B+uWLo7&js?N86bKMM98)GrY+L`fh,5F%D9i-7f:mTj%#$aRS+;p\)!1
Bmc9)j&<ff\JGr`2GfqoQ7$alUCiqCqJQZZ/S<"YUGFHoae/ta$jJkW_kM75$$_Nq7$sXB<@g`U
XbDF'n=AREFlN(V:*uP`-B%r*8Dse>Ak\'1,ar1A.6<.i*Im!8nj/ARGV_85gQY33=V\K0LhZX?
V3I9s1]!bg7N@4!j(bY(b%Of]Gmg+L?<c?&;,2g!V8P-08n3iq+lq4dh<!RseZ&,C1$VmT7DOWg
PHC!;3H7:.IgZ_Jq)#7]Rb"5bm`NY%3b\n/=tE_'LaEls&ai8Wke;:t\S,$H]Ui?e0=Vt%eN8Ja
:TFRsBs9U#8L-kp*-5:n;R4D-.$Vo\C<Wc;Z+"Tjb+]Pg'n6Sd/jri61aS;Cqceoh7&IpPT,:at
E04PgH`AU.[2<e<F9S*!i8pHf*dmDp(.ulZ[M(tUTo$ZD/S&D"*g4DN9[Q9VE1oA)ifL7$b26"]
^k<Aa>]`M7,;$s89I^9,dgmA+4@gUNT-?g4:5RsYDNqaN1?-TJJdO;Gl0abG,X@1[)j4CX:,[-7
<!jcUG\'//)<-7.$0IV^KIL4ToQk+Dl8UR-n`I;Y<(MkVq0=cD\<[cM6B4eG>A$pO&r=K]?./#H
.ddNYAp)&g6b4MA0&NAg%RppW(<kuMXOdis7ub`&.YS=t'$0c68>5Y?MIkkL!g$*O8ljHCieX#e
B+5btO--rRk`m6(3Kq&d04B)`+HDK1n=+rb%Zr[VH[uSJZlNjHVU4_Eo?\[Pba8+B'#@3VaN,%Y
QOucT\j<ubCPN?J1^Jo"P),J7nH"TQq?o:aXT:_DknOLK3"FU*XguN2EO``-R1G+CM6UM-_(65@
=UhsC(7A%$)#5?9'"ag,+^iJ&0U7]e)\Rtk[GiEgJT.jb=pU70PlSapiYN0s3"LkSLq))t=JL],
b*RYq.#C/BOP?F1SJ@:8,CoKaEUBS6b8bM?OOJ7]!3?NCnLSsWPrbQpR+2b`Rhak=+c;0s:o0C9
j:H$q-d\HUfqj_gNMX2RM$bWGLpA$la0ur;ZncG08RdZ815n4eQK`"@f\;pc,:eSgQM?h"6/AGq
%hRBYSuUS0\CE1!S0;CHMGW.Kgggul>RQ@WLs'uYHSQA!ClRZ]Ll)6?i3'9r<Xh.%7j>UG@Eo6g
]+aDQMumN)fY<FK;3c_V]_ku"X+lSsM'/7CY&YMtOMF*%lA2tMS]\R$aQXu6TbVBj3AB'qR5cE.
c]-T\).84W6+W@9M2G11QU.&ti33_05)CEQ%*60i:oF^\g^GTdOQ_E*JB]VFP*GM$M?o(bP1'`R
fGgcV3#daA5a=,m#p\..^nD8M_Mt!fnAug\P5-[`Oia-PSIRsb$;jud\;A#,NJY0L%4QQ2.%NJ^
VTR9`]/ZVqEMa?[L'^]K492Jn5dCk#oG9cG%nNf4Lo(LS?40^c/`=#O1C=C1JI$l9#V/"C1'rbU
Z3X$<%cTAeft*AM,;@nKT'DFL_"NZTKTJ23RTWjP0V&RX3&iC#RA83I*&5'P*=I5#,RC=SW/Dfc
]T)G4'tC0#o0!HfqAh&<%[j7XWFdQ7obkQO-]!MgTX.9HLlB5=bp_8&OkgdDi"9q+*mhe?S?md)
TT0%074@pOTZ`9BVhlP?PW64qd"dJL`'&a.%$:q'F2oQ9h[M@1Qt5FlTS!sKRL;B4Tj_,cMo(Gk
\.BLbP).p,YbhgGQF>0$)>^Il\A8I1Lm.V=$M+AAEHDl;+q2:HO&L_?q1K7:&0onmZ,i0,\D@V_
]*NFu).?$nq](D'KI)_iMZA\RTS!MpZA>2!LeuN\G`eiEnd0Q\b*bW>J@?YiGb41F#rp0:R,&$>
"V78[,I'9G!0`P]h2+3<$u*52.'Q&"!=?UC$^'_1q[*hkaGiK^XSgWZE9%;GmN[E5Pk6mBl%"eM
bTmK>)8i<WR</ieB9/0$Ng[_D.#O#*LPpD:Rt-i_R@5#0c4P(?,Ma?DWB(MMfe'^iOQaf<&<e>l
A;IMM9/CVr(mtd,mYX9'+^g5<0q67p&>YFn6@c]ZMKksGSL/[se2#>UM`DC^:a:fYV9"q:;.?X'
n<Fj%RIYP6Cm9llh)#]8'Kg+EkmIogPE-=8:b\/p]k.P3\VY>YN:=<<TU;lAVSu1VO"eBYJ=jKJ
1`URKQ6J91"UnJ[eu8BFUqhnJC)i.O-'2Mn#VdWlqoOkX;i'E3'1#WT[91DS$AkF<V_O,DKQ._-
ahc@5#Xjh;S)K]9h2A[>&Eo`)aSA-V!=bJ\]IHW:>.g9Mq2,`N%hkapU3sEV+X>^JS9(SNRAL;4
ackrF'WCgNm=l7hR#X98OAMMsq^W('cOK3c$#N=o]m,JqcG;N._D9pb^tB)=]Xa2hY`W65,Td>0
J<YZnM;[^5eQn!!;i(O@LsV7s^rE[iPbGCqP3AI#\BP>^0W*iSLg;_Z;*##&[$&OS.O`u==ND%6
Y";0[*HHrXd;Y34o$HD(UNmhY0bhn%l_0][M=?T4&^1i'n-Rl9*24qiP\1CYfZW3/%oBpNP/r_]
K9]Pq8O2<sTWa1Hb`:LEg<"IP=UN\mVO#G-N+pKPR0=*u.#mcr0Gp"CWJhR:cV!7X)9S/Od#/m'
k6ng?%@Dq^0Z+3$Z7+rs%tbo<0Ye5ZS.NK)LbOOD)-XL7V`0FfYc%^APtalfHb!P.MBU7TW65ZR
>U_Xo_`L)Qi4bCD5HH*!b-9*GXiQoG$&E;#$-eTiGnuA/7Od]^.6,O2d6lD,$]kYE+[EeuRGWq.
Ik6cp*B</:&A2"^knaW4N$:tl5ff2ZLQ.[jg_'N4d<XYXXJ:Y#MUBP4:kP\:0fP#^%6GMuM#<JX
^kl"jLbOr7`-E)#ILUPcd(#REEYb1$c&b@W'!YH,H-.S18I>a",[H[0_.),nN_?mg.er+fC6[6k
P,&)KQAG'lb6^Wj)N$5I=s/s^m'MV,LnMhLUX78Z5huc>&6/0&)L.R3NSFm2GXsk=N>[5Id$9M;
d>/X`R@rCCE9eY9rXrH;';]LR\J,baV%=89Yd&,'GdWJ#99N,1$CPr[!2GKlOZ;:Zgl3j#+_N5H
r#C7_f`7/+l7/EO>.Qj'bYY/bLkge,_ISc&M0,eU+]qb:2Si[%P2$k8*\f#*\VOAqQh[kk1t!H9
MMh!&&TG>5'a-G%PrL4lPmHW5OR\ET^SW.&)KAmrptVJ2?93*:Yc8M)GbgmLZ9?o$,#W=sTe$^@
nC/2GMF!7BRu+AJT*^=KXDL7f0_HST\>!)a4\@.1CgW&\;RUXY#b7A!g)!S*SI2Um$IFO3P,pKZ
eYBP2Mnl<h!j%<9pa-jMQsrVrfo;;BkrYTj+[WH!g@1/:M<<QW(1>4AI%D(9/!1tfLcD:sjR<Nt
aHEeqU)=?p*BB?5$Kclp#[#3qY_E]d5+W>s*H8Fq>V2%+>Rd8+\lq1\@AU([VB8YT$Af&tq%k#Q
Q6aodLq5Ph@)-9.cB/T,N6*XcCr?t-W\2ZA&T1%(HYX,r=2TlGA^H#9Ga9+!OHPbE&?@c!3:o3*
LQ0CG$A%W$;Ge0V]cGb_&'[>1>c^pn%@*n)3OoPj@%E0pVj1`i/RYZ]W5h%4U^ZI>;\7;H\p009
qTS`FZpm0[Ytm&M^6aIE="+c?=`F^UIuAV9hZ66'B]KTd>/0Rf%qr`i#rl?*SRV[-ZY6\/5faAl
_h]9cM88EA^o*!=Qa@mY=%,oM6(u?P]oUODW8#*RTWe_H)Qi4\RUGt"=r`KX24!I08[sGJ+!2m:
cO&RAX=5P)4)6n`Z&&5@LcC]ViX_'58<gXCQ"n$ld(?L2rM5PmP'M!9nT6-tae=*\TUmV?d%`$M
J"b)gNJS>XXTj[l^6(3-@Z[.D[5+@''%9dui>SGRgG>C6N=GCR>toE&'YaqkOpsM0$:t/aUHqQ-
_\>,@[tp(N0[l;N&/)q&@oV7r8DQEGQ;*McRFG1N@%8OB4J-$(Qhq$r@"r;$]T]"\?>BV1ek'GW
SX5/E@h@^a[Kd.$$HD"n*)QpP8^E>db3dS]%R\L<e1pG)$tA`jTp8oYJQL"YJsF%!P7]qc5`(@f
V&n=0%Z$"$L,f]i4;B%N\RBH7VcFi1PE+<.O-pSL8L%tBcO1W?O35>dBZM(<O.^:qWGoh8EIZW(
*/usK(AX%`A-Rkb`/*'pMt@<g0[,u"-lR]DYc,<qm%4sTUr,2D/0LYo.#GSd]U3[TbYe[_#k^\5
odh=ZN!5l<5m7ZRY_o-ed,U2/]G`1q]WC%j'pKQb`D1MDN8E!fQslNmrGb,;_?iN<L`"rP=f(;i
+1/huP"@VeO_5h&_@6M1gSjU`pre^ec'#<O(CW5SiD/F4J#'U>%L&*!S&\s;XY+m![#WcmarHSp
90rXZGWc+daS:RMO4H#j%ULt<@_SO"6O47D1)m,=E>T4;lC?i>Nt%G:q!TqHNY)k)]*Tu1D:rC/
6OOCfRu!l$Oh?r`QL$WQgk^h%)!.6;W1k=j>)VWC8O4rQKpKf3%tOdsp'2!sQB4@sS8e*Yi2^=]
>DVMpN02\NCF]iUf<=tI/t#KF=Hla)W!c,YO.BelHY3^?T9"]la62u#J=-c918V`<a`sXr5jSHb
r.!&kJ)C6Tn,EXn_?C$m!hbX"6m`WVL-o@1BQQ]i'8=@KOa+f&/K'R=7M30&L*n++8R[cR1o:`i
0q/TK'9UYuD3u6X:_3~>
endstream
endobj
%%EndResource
%%BeginResource: file (PDF object obj_1)
1 0 obj
<<>>endobj
%%EndResource
%%EndProlog
%%Page: 1 1
%%PageBoundingBox: 0 0 113 125
%%BeginPageSetup
4 0 obj
<</Type/Page/MediaBox [0 0 113.31 125.08]
/Parent 3 0 R
/Resources<</ProcSet[/PDF]
/Font 8 0 R
>>
/Contents 5 0 R
>>
endobj
%%EndPageSetup
/pagesave save def
5 0 obj
<</Length 106608>>stream
q 0.1 0 0 0.1 0 0 cm
3.985 w
0.75 g
0.75 G
261.34 220.93 m
261.34 1213.07 l
459.77 220.93 m
459.77 1213.07 l
658.195 220.93 m
658.195 1213.07 l
856.621 220.93 m
856.621 1213.07 l
1055.05 220.93 m
1055.05 1213.07 l
S
261.34 220.93 m
1055.05 220.93 l
261.34 415.465 m
1055.05 415.465 l
261.34 610.004 m
1055.05 610.004 l
261.34 804.539 m
1055.05 804.539 l
261.34 999.078 m
1055.05 999.078 l
261.34 1193.61 m
1055.05 1193.61 l
S
1.9925 w
0.5 g
0.5 G
261.34 220.93 m
261.34 263.445 l
459.77 220.93 m
459.77 263.445 l
658.195 220.93 m
658.195 263.445 l
856.621 220.93 m
856.621 263.445 l
1055.05 220.93 m
1055.05 263.445 l
261.34 1213.07 m
261.34 1170.55 l
459.77 1213.07 m
459.77 1170.55 l
658.195 1213.07 m
658.195 1170.55 l
856.621 1213.07 m
856.621 1170.55 l
1055.05 1213.07 m
1055.05 1170.55 l
S
261.34 220.93 m
303.859 220.93 l
261.34 415.465 m
303.859 415.465 l
261.34 610.004 m
303.859 610.004 l
261.34 804.539 m
303.859 804.539 l
261.34 999.078 m
303.859 999.078 l
261.34 1193.61 m
303.859 1193.61 l
1055.05 220.93 m
1012.53 220.93 l
1055.05 415.465 m
1012.53 415.465 l
1055.05 610.004 m
1012.53 610.004 l
1055.05 804.539 m
1012.53 804.539 l
1055.05 999.078 m
1012.53 999.078 l
1055.05 1193.61 m
1012.53 1193.61 l
S
3.985 w
0 g
0 G
261.34 220.93 m
261.34 1213.07 l
1055.05 1213.07 l
1055.05 220.93 l
261.34 220.93 l
h
S
q
10 0 0 10 0 0 cm BT
/R6 9.9626 Tf
1 0 0 1 37.0102 15.1422 Tm
[(25)-991.746(50)-991.629(75)-741.71(100)]TJ
-15.8902 0.751953 Td
(0)Tj
-4.98203 19.4539 Td
(20)Tj
0 19.4531 Td
(40)Tj
0 19.4539 Td
(60)Tj
0 19.4527 Td
(80)Tj
-4.98086 19.4531 Td
(100)Tj
ET
Q
q
261.34 220.93 793.711 992.137 re W n
[ 29.8883 29.8883 ] 0 d
14.9442 w
1 J
1 j
263.684 222.445 m
265.395 223.543 265.715 223.965 v
266.035 224.387 265.906 225.063 265.996 225.48 c
266.086 225.902 265.773 226.578 266.363 227 c
266.953 227.422 269.66 228.098 270.25 228.516 c
270.836 228.938 270.355 229.613 270.602 230.035 c
270.848 230.457 271.789 231.133 272.027 231.551 c
272.266 231.973 272.258 232.648 272.313 233.07 c
272.367 233.492 272.379 234.164 272.422 234.586 c
272.469 235.008 272.484 235.684 272.637 236.105 c
272.789 236.523 273.313 237.199 273.523 237.621 c
273.734 238.043 274.02 238.719 274.168 239.141 c
274.316 239.559 274.539 240.234 274.598 240.656 c
274.66 241.078 274.52 241.754 274.602 242.176 c
274.688 242.594 274.66 243.27 275.211 243.691 c
275.758 244.113 277.926 244.789 278.559 245.211 c
279.191 245.629 279.609 246.305 279.781 246.727 c
279.953 247.148 279.711 247.824 279.805 248.242 c
279.898 248.664 280.336 249.34 280.449 249.762 c
280.566 250.184 280.574 250.859 280.637 251.277 c
280.695 251.699 280.82 252.375 280.883 252.797 c
280.949 253.219 280.875 253.895 281.09 254.313 c
281.305 254.734 282.195 255.41 282.434 255.832 c
282.676 256.254 282.684 256.93 282.828 257.348 c
282.973 257.77 283.352 258.445 283.469 258.867 c
283.586 259.285 283.418 259.961 283.676 260.383 c
283.938 260.805 284.953 261.48 285.344 261.902 c
285.734 262.32 286.332 262.996 286.496 263.418 c
286.656 263.84 286.398 264.516 286.523 264.938 c
286.648 265.355 287.191 266.031 287.402 266.453 c
287.613 266.875 287.773 267.551 288.035 267.973 c
288.297 268.391 289.105 269.066 289.297 269.488 c
289.484 269.91 289.328 270.586 289.398 271.004 c
289.469 271.426 289.656 272.102 289.797 272.523 c
289.941 272.945 290.266 273.621 290.426 274.039 c
290.586 274.461 290.715 275.137 290.945 275.559 c
291.176 275.98 291.746 276.656 292.086 277.074 c
292.43 277.496 292.359 278.172 293.41 278.594 c
294.457 279.016 298.48 279.688 299.637 280.109 c
300.793 280.531 301.426 281.207 301.742 281.629 c
302.055 282.047 301.754 282.723 301.914 283.145 c
302.074 283.566 302.664 284.242 302.891 284.664 c
303.117 285.082 303.418 285.758 303.547 286.18 c
303.672 286.602 303.508 287.277 303.813 287.699 c
304.121 288.117 305.414 288.793 305.754 289.215 c
306.09 289.637 305.727 290.313 306.246 290.734 c
306.762 291.152 308.91 291.828 309.492 292.25 c
310.074 292.672 310.145 293.348 310.434 293.766 c
310.727 294.188 311.348 294.863 311.598 295.285 c
311.852 295.707 312.125 296.383 312.242 296.801 c
312.359 297.223 312.27 297.898 312.438 298.32 c
312.605 298.742 312.629 299.418 313.445 299.836 c
314.262 300.258 317.426 300.934 318.313 301.355 c
319.195 301.773 319.363 302.449 319.824 302.871 c
320.285 303.293 321.293 303.969 321.625 304.391 c
321.957 304.809 321.836 305.484 322.227 305.906 c
322.621 306.328 323.957 307.004 324.457 307.426 c
324.957 307.844 325.535 308.52 325.828 308.941 c
326.125 309.363 326.234 310.039 326.586 310.461 c
326.941 310.879 328.008 311.555 328.367 311.977 c
328.727 312.398 328.949 313.074 329.18 313.492 c
329.41 313.914 329.637 314.59 330.027 315.012 c
330.418 315.434 331.27 316.109 331.996 316.527 c
332.723 316.949 334.551 317.625 335.27 318.047 c
335.988 318.469 336.746 319.145 337.18 319.563 c
337.613 319.984 338.145 320.66 338.398 321.082 c
338.652 321.504 338.715 322.18 339.016 322.598 c
339.316 323.02 339.727 323.695 340.563 324.117 c
341.398 324.539 344.121 325.211 345.035 325.633 c
345.949 326.055 346.777 326.73 347.145 327.152 c
347.516 327.57 347.508 328.246 347.691 328.668 c
347.875 329.09 348.348 329.766 348.473 330.188 c
348.598 330.605 348.57 331.281 348.605 331.703 c
348.641 332.125 348.094 332.801 348.723 333.223 c
349.355 333.641 352.453 334.316 353.16 334.738 c
353.867 335.16 353.504 335.836 353.82 336.254 c
354.137 336.676 354.652 337.352 355.438 337.773 c
356.223 338.195 358.617 338.871 359.48 339.289 c
360.348 339.711 361.254 340.387 361.68 340.809 c
362.105 341.23 362.414 341.906 362.559 342.324 c
362.703 342.746 362.551 343.422 362.727 343.844 c
362.902 344.266 363.258 344.941 363.824 345.359 c
364.391 345.781 366.227 346.457 366.805 346.879 c
367.379 347.301 367.766 347.973 367.988 348.395 c
368.211 348.816 368.164 349.492 368.398 349.914 c
368.633 350.332 369.367 351.008 369.684 351.43 c
370 351.852 370.5 352.527 370.68 352.949 c
370.863 353.367 370.492 354.043 370.988 354.465 c
371.484 354.887 373.379 355.563 374.262 355.984 c
375.141 356.402 376.629 357.078 377.34 357.5 c
378.047 357.922 378.938 358.598 379.375 359.016 c
379.813 359.438 380.148 360.113 380.492 360.535 c
380.84 360.957 381.465 361.633 381.863 362.051 c
382.262 362.473 383.004 363.148 383.359 363.57 c
383.715 363.992 384.105 364.668 384.426 365.086 c
384.746 365.508 384.641 366.184 385.664 366.605 c
386.691 367.027 390.434 367.703 391.82 368.121 c
393.211 368.543 395.09 369.219 395.668 369.641 c
396.25 370.063 395.957 370.734 396.008 371.156 c
396.055 371.578 395.156 372.254 396.016 372.676 c
396.875 373.094 400.977 373.77 402.199 374.191 c
403.426 374.613 404.441 375.289 404.844 375.711 c
405.25 376.129 403.367 376.805 405.117 377.227 c
406.871 377.648 415.723 378.324 417.473 378.746 c
419.219 379.164 417.516 379.84 417.719 380.262 c
417.922 380.684 418.723 381.359 418.941 381.781 c
419.16 382.199 418.898 382.875 419.301 383.297 c
419.703 383.719 421.215 384.395 421.848 384.813 c
422.477 385.234 423.52 385.91 423.852 386.332 c
424.184 386.754 423.352 387.43 424.238 387.848 c
425.129 388.27 429.262 388.945 430.254 389.367 c
431.246 389.789 431.188 390.465 431.383 390.883 c
431.578 391.305 431.242 391.98 431.648 392.402 c
432.059 392.824 433.648 393.496 434.316 393.918 c
434.984 394.34 435.918 395.016 436.465 395.438 c
437.016 395.855 436.059 396.531 438.273 396.953 c
440.484 397.375 450.074 398.051 452.418 398.473 c
454.762 398.891 453.742 399.566 455.172 399.988 c
456.602 400.41 461.508 401.086 462.73 401.508 c
463.949 401.926 463.527 402.602 463.977 403.023 c
464.43 403.445 464.27 404.121 465.988 404.543 c
467.707 404.961 474.363 405.637 476.371 406.059 c
478.379 406.48 479.117 407.156 480.457 407.574 c
481.797 407.996 484.492 408.672 486.031 409.094 c
487.57 409.516 490.035 410.191 491.547 410.609 c
493.063 411.031 495.957 411.707 496.949 412.129 c
497.938 412.551 498.023 413.227 498.688 413.645 c
499.352 414.066 499.75 414.742 501.734 415.164 c
503.723 415.586 510.754 416.258 513.004 416.68 c
515.254 417.102 516.918 417.777 517.965 418.199 c
519.012 418.617 520.121 419.293 520.555 419.715 c
520.988 420.137 520.465 420.813 521.09 421.234 c
521.715 421.652 522.836 422.328 525.074 422.75 c
527.309 423.172 535.027 423.848 537.211 424.27 c
539.398 424.688 540.188 425.363 540.832 425.785 c
541.48 426.207 540.922 426.883 541.875 427.301 c
542.828 427.723 546.863 428.398 547.695 428.82 c
548.523 429.242 547.594 429.918 547.855 430.336 c
548.113 430.758 547.387 431.434 549.559 431.855 c
551.73 432.277 560.688 432.953 563.516 433.371 c
566.34 433.793 568.422 434.469 569.93 434.891 c
571.438 435.313 573.715 435.988 574.391 436.406 c
575.07 436.828 574.43 437.504 574.816 437.926 c
575.203 438.348 575.352 439.02 577.176 439.441 c
579.004 439.863 586.438 440.539 587.98 440.961 c
589.52 441.379 587.645 442.055 588.285 442.477 c
588.922 442.898 591.91 443.574 592.59 443.996 c
593.273 444.414 592.457 445.09 593.203 445.512 c
593.953 445.934 597.207 446.609 597.98 447.031 c
598.754 447.449 595.414 448.125 598.781 448.547 c
602.148 448.969 617.875 449.645 622.246 450.063 c
626.621 450.484 629.094 451.16 630.297 451.582 c
631.504 452.004 630.285 452.68 630.938 453.098 c
631.594 453.52 633.961 454.195 635.02 454.617 c
636.074 455.039 637.055 455.715 638.555 456.133 c
640.055 456.555 644.277 457.23 645.828 457.652 c
647.383 458.074 648.938 458.746 649.746 459.168 c
650.555 459.59 650.926 460.266 651.648 460.688 c
652.371 461.105 654.043 461.781 654.949 462.203 c
655.859 462.625 657.301 463.301 658.195 463.723 c
659.09 464.141 660.715 464.816 661.395 465.238 c
662.074 465.66 662.566 466.336 663.094 466.758 c
663.625 467.176 662.531 467.852 665.211 468.273 c
667.895 468.695 679.602 469.371 682.438 469.793 c
685.27 470.211 684.367 470.887 685.645 471.309 c
686.922 471.73 689.883 472.406 691.637 472.824 c
693.395 473.246 696.906 473.922 698.313 474.344 c
699.719 474.766 701.184 475.441 701.785 475.859 c
702.387 476.281 702.391 476.957 702.652 477.379 c
702.914 477.801 702.574 478.477 703.676 478.895 c
704.777 479.316 709.453 479.992 710.602 480.414 c
711.746 480.836 711.469 481.512 711.949 481.93 c
712.43 482.352 712.941 483.027 714.059 483.449 c
715.18 483.867 719.129 484.543 720.008 484.965 c
720.887 485.387 720.141 486.063 720.379 486.484 c
720.617 486.902 721.328 487.578 721.727 488 c
722.121 488.422 722.004 489.098 723.242 489.52 c
724.477 489.938 729.02 490.613 730.637 491.035 c
732.254 491.457 734.063 492.133 734.895 492.555 c
735.727 492.973 736.324 493.648 736.633 494.07 c
736.945 494.492 736.492 495.168 737.129 495.586 c
737.77 496.008 740.547 496.684 741.227 497.105 c
741.906 497.527 740.195 498.203 742.027 498.621 c
743.859 499.043 752.555 499.719 754.441 500.141 c
756.324 500.563 755.219 501.238 755.617 501.656 c
756.02 502.078 757.004 502.754 757.324 503.176 c
757.645 503.598 757.777 504.273 757.93 504.691 c
758.078 505.113 757.191 505.789 758.402 506.211 c
759.613 506.629 765.266 507.305 766.66 507.727 c
768.055 508.148 767.977 508.824 768.453 509.246 c
768.93 509.664 769.805 510.34 770.082 510.762 c
770.363 511.184 770.383 511.859 770.465 512.281 c
770.543 512.699 770.504 513.375 770.672 513.797 c
770.84 514.219 771.48 514.895 771.684 515.316 c
771.887 515.734 772.055 516.41 772.133 516.832 c
772.211 517.254 771.211 517.93 772.242 518.348 c
773.273 518.77 776.758 519.445 779.57 519.867 c
782.383 520.289 789.969 520.965 792.508 521.383 c
795.047 521.805 796.91 522.48 797.875 522.902 c
798.84 523.324 799.023 524 799.469 524.418 c
799.91 524.84 800.742 525.516 801.063 525.938 c
801.383 526.359 801.645 527.035 801.777 527.453 c
801.91 527.875 801.91 528.551 802.016 528.973 c
802.125 529.391 802.207 530.066 802.543 530.488 c
802.883 530.91 803.672 531.586 804.453 532.008 c
805.234 532.426 807.516 533.102 808.176 533.523 c
808.836 533.945 808.254 534.621 809.211 535.043 c
810.168 535.461 813.746 536.137 815.063 536.559 c
816.383 536.98 818.094 537.656 818.707 538.074 c
819.32 538.496 818.609 539.172 819.484 539.594 c
820.355 540.016 824.223 540.691 824.988 541.109 c
825.754 541.531 823.254 542.207 825.008 542.629 c
826.758 543.051 835.398 543.727 837.613 544.145 c
839.828 544.566 839.961 545.242 840.965 545.664 c
841.969 546.086 843.922 546.762 844.859 547.18 c
845.793 547.602 846.645 548.277 847.703 548.699 c
848.762 549.121 851.758 549.793 852.488 550.215 c
853.219 550.637 852.828 551.313 852.965 551.734 c
853.102 552.152 852.953 552.828 853.473 553.25 c
853.992 553.672 856.086 554.348 856.719 554.77 c
857.352 555.188 857.785 555.863 858.027 556.285 c
858.27 556.707 858.219 557.383 858.465 557.805 c
858.715 558.223 859.594 558.898 859.809 559.32 c
860.027 559.742 859.676 560.418 860.031 560.84 c
860.383 561.258 861.996 561.934 862.355 562.355 c
862.711 562.777 862.508 563.453 862.605 563.871 c
862.699 564.293 862.773 564.969 863.051 565.391 c
863.332 565.813 864.328 566.488 864.617 566.906 c
864.902 567.328 865 568.004 865.121 568.426 c
865.246 568.848 865.383 569.523 865.508 569.941 c
865.633 570.363 865.926 571.039 866.023 571.461 c
866.117 571.883 866.055 572.555 866.191 572.977 c
866.328 573.398 866.594 574.074 867.008 574.496 c
867.426 574.914 868.422 575.59 869.195 576.012 c
869.969 576.434 872.078 577.109 872.59 577.531 c
873.098 577.949 872.664 578.625 872.879 579.047 c
873.09 579.469 873.941 580.145 874.117 580.566 c
874.293 580.984 874.027 581.66 874.141 582.082 c
874.25 582.504 874.73 583.18 874.922 583.598 c
875.113 584.02 875.34 584.695 875.52 585.117 c
875.699 585.539 875.723 586.215 876.223 586.633 c
876.719 587.055 878.688 587.73 879.117 588.152 c
879.547 588.574 879.238 589.25 879.313 589.668 c
879.391 590.09 879.516 590.766 879.66 591.188 c
879.805 591.609 880.184 592.285 880.359 592.703 c
880.531 593.125 880.77 593.801 880.906 594.223 c
881.043 594.645 880.934 595.316 881.352 595.738 c
881.77 596.16 883.375 596.836 883.926 597.258 c
884.48 597.676 885.117 598.352 885.332 598.773 c
885.551 599.195 885.414 599.871 885.496 600.293 c
885.578 600.711 885.832 601.387 885.914 601.809 c
885.996 602.23 885.98 602.906 886.078 603.328 c
886.18 603.746 886.527 604.422 886.633 604.844 c
886.734 605.266 886.598 605.941 886.824 606.363 c
887.051 606.781 887.758 607.457 888.254 607.879 c
888.746 608.301 890.031 608.977 890.395 609.395 c
890.754 609.816 890.754 610.492 890.855 610.914 c
890.961 611.336 891.102 612.012 891.148 612.43 c
891.195 612.852 891.129 613.527 891.188 613.949 c
891.25 614.371 891.301 615.043 891.574 615.465 c
891.848 615.887 892.625 616.563 893.16 616.984 c
893.699 617.406 895.008 618.082 895.445 618.5 c
895.883 618.922 896.137 619.598 896.309 620.02 c
896.48 620.438 896.121 621.113 896.684 621.535 c
897.246 621.957 899.809 622.633 900.371 623.055 c
900.934 623.473 900.664 624.148 900.742 624.57 c
900.816 624.992 900.723 625.668 900.934 626.09 c
901.141 626.508 902.055 627.184 902.238 627.605 c
902.422 628.027 902.246 628.703 902.27 629.125 c
902.289 629.543 902.082 630.219 902.398 630.641 c
902.715 631.063 904.098 631.738 904.547 632.156 c
904.996 632.578 905.418 633.254 905.629 633.676 c
905.84 634.098 905.973 634.773 906.07 635.191 c
906.164 635.613 906.223 636.289 906.32 636.711 c
906.418 637.133 906.152 637.809 906.773 638.227 c
907.398 638.648 910.188 639.324 910.813 639.746 c
911.434 640.168 911.137 640.84 911.27 641.262 c
911.402 641.684 911.645 642.359 911.781 642.781 c
911.918 643.199 911.941 643.875 912.254 644.297 c
912.57 644.719 913.758 645.395 914.043 645.816 c
914.332 646.234 914.242 646.91 914.332 647.332 c
914.422 647.754 914.449 648.43 914.684 648.852 c
914.918 649.27 915.605 649.945 916.016 650.367 c
916.422 650.789 917.32 651.465 917.625 651.883 c
917.93 652.305 918.098 652.98 918.203 653.402 c
918.313 653.824 918.215 654.5 918.395 654.918 c
918.574 655.34 919.309 656.016 919.504 656.438 c
919.699 656.859 919.762 657.535 919.809 657.953 c
919.859 658.375 919.27 659.051 919.855 659.473 c
920.441 659.895 923.313 660.57 924.023 660.988 c
924.738 661.41 924.66 662.086 924.988 662.508 c
925.316 662.93 925.945 663.602 926.391 664.023 c
926.836 664.445 927.844 665.121 928.207 665.543 c
928.574 665.961 928.848 666.637 929.031 667.059 c
929.211 667.48 929.336 668.156 929.527 668.578 c
929.719 668.996 930.082 669.672 930.418 670.094 c
930.754 670.516 931.246 671.191 931.941 671.613 c
932.637 672.031 934.902 672.707 935.43 673.129 c
935.957 673.551 935.426 674.227 935.746 674.645 c
936.07 675.066 937.316 675.742 937.754 676.164 c
938.191 676.586 938.609 677.262 938.891 677.68 c
939.176 678.102 939.484 678.777 939.805 679.199 c
940.125 679.621 940.895 680.297 941.199 680.715 c
941.504 681.137 941.445 681.813 942.004 682.234 c
942.559 682.656 944.703 683.332 945.211 683.75 c
945.723 684.172 945.387 684.848 945.68 685.27 c
945.969 685.691 947.066 686.363 947.309 686.785 c
947.547 687.207 947.375 687.883 947.418 688.305 c
947.461 688.723 947.383 689.398 947.621 689.82 c
947.859 690.242 948.715 690.918 949.125 691.34 c
949.535 691.758 950.363 692.434 950.578 692.855 c
950.793 693.277 950.496 693.953 950.676 694.375 c
950.855 694.793 951.688 695.469 951.871 695.891 c
952.055 696.313 951.914 696.988 951.988 697.406 c
952.063 697.828 952.207 698.504 952.41 698.926 c
952.613 699.348 953.176 700.023 953.449 700.441 c
953.719 700.863 953.926 701.539 954.379 701.961 c
954.836 702.383 956 703.059 956.727 703.477 c
957.453 703.898 959.137 704.574 959.613 704.996 c
960.094 705.418 960.035 706.094 960.172 706.512 c
960.305 706.934 960.402 707.609 960.582 708.031 c
960.758 708.453 961.316 709.125 961.457 709.547 c
961.598 709.969 961.461 710.645 961.586 711.066 c
961.707 711.484 962.008 712.16 962.344 712.582 c
962.68 713.004 963.418 713.68 964.004 714.102 c
964.59 714.52 965.867 715.195 966.566 715.617 c
967.266 716.039 968.543 716.715 969.043 717.137 c
969.543 717.555 969.953 718.23 970.176 718.652 c
970.402 719.074 970.184 719.75 970.664 720.168 c
971.148 720.59 973.207 721.266 973.66 721.688 c
974.113 722.109 973.883 722.785 973.926 723.203 c
973.969 723.625 973.926 724.301 973.973 724.723 c
974.02 725.145 974.168 725.82 974.266 726.238 c
974.363 726.66 974.535 727.336 974.676 727.758 c
974.813 728.18 974.949 728.855 975.266 729.273 c
975.582 729.695 976.602 730.371 976.953 730.793 c
977.309 731.215 977.594 731.887 977.809 732.309 c
978.023 732.73 978.391 733.406 978.496 733.828 c
978.602 734.246 978.543 734.922 978.563 735.344 c
978.586 735.766 978.508 736.441 978.656 736.863 c
978.809 737.281 979.504 737.957 979.648 738.379 c
979.789 738.801 979.563 739.477 979.684 739.898 c
979.809 740.316 980.398 740.992 980.543 741.414 c
980.688 741.836 980.613 742.512 980.727 742.93 c
980.836 743.352 981.234 744.027 981.348 744.449 c
981.465 744.871 981.484 745.547 981.559 745.965 c
981.633 746.387 981.84 747.063 981.883 747.484 c
981.93 747.906 981.863 748.582 981.895 749 c
981.926 749.422 982.039 750.098 982.105 750.52 c
982.172 750.941 982.316 751.617 982.375 752.035 c
982.43 752.457 982.453 753.133 982.523 753.555 c
982.598 753.977 982.719 754.648 982.895 755.07 c
983.07 755.492 983.656 756.168 983.785 756.59 c
983.914 757.008 983.793 757.684 983.82 758.105 c
983.848 758.527 983.953 759.203 983.98 759.625 c
984.008 760.043 983.957 760.719 984.012 761.141 c
984.066 761.563 984.254 762.238 984.371 762.66 c
984.488 763.078 984.746 763.754 984.855 764.176 c
984.965 764.598 984.801 765.273 985.156 765.691 c
985.512 766.113 987.027 766.789 987.43 767.211 c
987.828 767.633 987.922 768.309 988.035 768.727 c
988.152 769.148 988.152 769.824 988.25 770.246 c
988.352 770.668 988.668 771.344 988.762 771.762 c
988.852 772.184 988.887 772.859 988.906 773.281 c
988.93 773.703 988.898 774.379 988.906 774.797 c
988.918 775.219 988.871 775.895 988.988 776.316 c
989.102 776.738 989.594 777.41 989.738 777.832 c
989.887 778.254 989.914 778.93 990.043 779.352 c
990.172 779.77 990.43 780.445 990.672 780.867 c
990.918 781.289 991.484 781.965 991.813 782.387 c
992.141 782.805 992.859 783.48 993.039 783.902 c
993.219 784.324 992.836 785 993.098 785.418 c
993.355 785.84 994.66 786.516 994.914 786.938 c
995.168 787.359 994.898 788.035 994.938 788.453 c
994.973 788.875 995.141 789.551 995.184 789.973 c
995.23 790.395 995.191 791.07 995.262 791.488 c
995.328 791.91 995.512 792.586 995.672 793.008 c
995.832 793.43 996.262 794.105 996.418 794.523 c
996.574 794.945 996.699 795.621 996.797 796.043 c
996.891 796.465 996.883 797.137 997.113 797.559 c
997.348 797.98 998.18 798.656 998.461 799.078 c
998.738 799.5 998.836 800.172 999.137 800.594 c
999.434 801.016 1000.31 801.691 1000.61 802.113 c
1000.9 802.531 1001.11 803.207 1001.27 803.629 c
1001.43 804.051 1001.65 804.727 1001.77 805.148 c
1001.89 805.566 1002.07 806.242 1002.14 806.664 c
1002.2 807.086 1002.23 807.762 1002.24 808.184 c
1002.26 808.602 1002.23 809.277 1002.25 809.699 c
1002.26 810.121 1002.32 810.797 1002.35 811.215 c
1002.37 811.637 1002.39 812.313 1002.4 812.734 c
1002.41 813.156 1002.27 813.832 1002.41 814.25 c
1002.55 814.672 1003.23 815.348 1003.43 815.77 c
1003.63 816.191 1003.47 816.867 1003.82 817.285 c
1004.18 817.707 1005.64 818.383 1005.96 818.805 c
1006.28 819.227 1006.05 819.898 1006.11 820.32 c
1006.18 820.742 1006.28 821.418 1006.46 821.84 c
1006.63 822.258 1007.24 822.934 1007.39 823.355 c
1007.53 823.777 1007.45 824.453 1007.48 824.875 c
1007.52 825.293 1007.5 825.969 1007.61 826.391 c
1007.72 826.813 1008.01 827.488 1008.25 827.91 c
1008.49 828.328 1009.14 829.004 1009.36 829.426 c
1009.58 829.848 1009.68 830.523 1009.83 830.945 c
1009.98 831.363 1010.3 832.039 1010.46 832.461 c
1010.62 832.883 1010.71 833.559 1010.96 833.977 c
1011.2 834.398 1011.9 835.074 1012.26 835.496 c
1012.62 835.918 1013.35 836.594 1013.54 837.012 c
1013.73 837.434 1013.42 838.109 1013.62 838.531 c
1013.82 838.953 1014.76 839.629 1014.96 840.047 c
1015.17 840.469 1015.06 841.145 1015.11 841.566 c
1015.16 841.988 1015.3 842.664 1015.34 843.082 c
1015.38 843.504 1015.3 844.18 1015.42 844.602 c
1015.54 845.02 1016.03 845.695 1016.19 846.117 c
1016.36 846.539 1016.43 847.215 1016.6 847.637 c
1016.77 848.055 1017.2 848.73 1017.42 849.152 c
1017.64 849.574 1017.98 850.25 1018.17 850.672 c
1018.36 851.09 1018.65 851.766 1018.78 852.188 c
1018.91 852.609 1019.06 853.285 1019.12 853.707 c
1019.18 854.125 1019.17 854.801 1019.21 855.223 c
1019.24 855.645 1019.31 856.32 1019.39 856.738 c
1019.46 857.16 1019.69 857.836 1019.74 858.258 c
1019.79 858.68 1019.68 859.355 1019.74 859.773 c
1019.8 860.195 1020.11 860.871 1020.17 861.293 c
1020.23 861.715 1019.96 862.391 1020.17 862.809 c
1020.39 863.23 1021.48 863.906 1021.73 864.328 c
1021.97 864.75 1021.91 865.426 1021.95 865.844 c
1022 866.266 1022.01 866.941 1022.04 867.363 c
1022.08 867.781 1022.12 868.457 1022.21 868.879 c
1022.3 869.301 1022.58 869.977 1022.68 870.398 c
1022.79 870.816 1022.89 871.492 1022.97 871.914 c
1023.06 872.336 1023.26 873.012 1023.3 873.434 c
1023.35 873.852 1023.24 874.527 1023.3 874.949 c
1023.36 875.371 1023.55 876.047 1023.72 876.469 c
1023.88 876.887 1024.37 877.563 1024.48 877.984 c
1024.59 878.406 1024.34 879.082 1024.52 879.5 c
1024.71 879.922 1025.63 880.598 1025.84 881.02 c
1026.04 881.441 1025.96 882.117 1026.01 882.535 c
1026.06 882.957 1026.14 883.633 1026.2 884.055 c
1026.26 884.477 1026.31 885.152 1026.43 885.57 c
1026.54 885.992 1026.94 886.668 1027.04 887.09 c
1027.14 887.512 1027.02 888.188 1027.16 888.605 c
1027.29 889.027 1027.87 889.703 1028.01 890.125 c
1028.14 890.543 1028.12 891.219 1028.14 891.641 c
1028.17 892.063 1028.17 892.738 1028.2 893.16 c
1028.23 893.578 1028.3 894.254 1028.35 894.676 c
1028.4 895.098 1028.51 895.773 1028.54 896.195 c
1028.57 896.613 1028.56 897.289 1028.57 897.711 c
1028.57 898.133 1028.45 898.809 1028.59 899.227 c
1028.73 899.648 1029.38 900.324 1029.58 900.746 c
1029.79 901.168 1029.91 901.844 1030.09 902.262 c
1030.27 902.684 1030.75 903.359 1030.86 903.781 c
1030.96 904.203 1030.84 904.879 1030.87 905.297 c
1030.89 905.719 1030.96 906.395 1031.01 906.816 c
1031.06 907.238 1031.17 907.914 1031.23 908.332 c
1031.29 908.754 1031.42 909.43 1031.46 909.852 c
1031.49 910.273 1031.43 910.945 1031.48 911.367 c
1031.53 911.789 1031.73 912.465 1031.82 912.887 c
1031.91 913.305 1032.09 913.98 1032.14 914.402 c
1032.2 914.824 1032.16 915.5 1032.2 915.922 c
1032.23 916.34 1032.36 917.016 1032.39 917.438 c
1032.42 917.859 1032.36 918.535 1032.41 918.957 c
1032.46 919.375 1032.69 920.051 1032.75 920.473 c
1032.8 920.895 1032.73 921.57 1032.8 921.992 c
1032.89 922.41 1033.21 923.086 1033.32 923.508 c
1033.43 923.93 1033.55 924.605 1033.6 925.023 c
1033.65 925.445 1033.67 926.121 1033.7 926.543 c
1033.74 926.965 1033.79 927.641 1033.84 928.059 c
1033.89 928.48 1034 929.156 1034.04 929.578 c
1034.09 930 1034.02 930.676 1034.14 931.094 c
1034.26 931.516 1034.76 932.191 1034.91 932.613 c
1035.05 933.035 1035.02 933.711 1035.2 934.129 c
1035.37 934.551 1035.97 935.227 1036.15 935.648 c
1036.33 936.066 1036.33 936.742 1036.49 937.164 c
1036.64 937.586 1037.12 938.262 1037.26 938.684 c
1037.41 939.102 1037.41 939.777 1037.51 940.199 c
1037.61 940.621 1037.93 941.297 1038 941.719 c
1038.07 942.137 1038.02 942.813 1038.04 943.234 c
1038.06 943.656 1038.11 944.332 1038.16 944.75 c
1038.22 945.172 1038.39 945.848 1038.45 946.27 c
1038.52 946.691 1038.53 947.367 1038.66 947.785 c
1038.78 948.207 1039.23 948.883 1039.34 949.305 c
1039.45 949.727 1039.41 950.402 1039.45 950.82 c
1039.49 951.242 1039.56 951.918 1039.64 952.34 c
1039.71 952.762 1039.9 953.438 1039.99 953.855 c
1040.08 954.277 1040.23 954.953 1040.3 955.375 c
1040.39 955.797 1040.48 956.469 1040.56 956.891 c
1040.63 957.313 1040.69 957.988 1040.84 958.41 c
1040.99 958.828 1041.53 959.504 1041.64 959.926 c
1041.76 960.348 1041.62 961.023 1041.67 961.445 c
1041.73 961.863 1041.96 962.539 1042.04 962.961 c
1042.12 963.383 1042.19 964.059 1042.27 964.48 c
1042.34 964.898 1042.54 965.574 1042.6 965.996 c
1042.66 966.418 1042.65 967.094 1042.67 967.516 c
1042.7 967.934 1042.77 968.609 1042.79 969.031 c
1042.8 969.453 1042.78 970.129 1042.79 970.547 c
1042.81 970.969 1042.88 971.645 1042.9 972.066 c
1042.92 972.488 1042.93 973.164 1042.95 973.582 c
1042.98 974.004 1043.05 974.68 1043.09 975.102 c
1043.12 975.523 1043.15 976.199 1043.2 976.617 c
1043.26 977.039 1043.42 977.715 1043.48 978.137 c
1043.53 978.555 1043.49 979.23 1043.58 979.652 c
1043.68 980.074 1044.05 980.75 1044.15 981.172 c
1044.25 981.59 1044.24 982.266 1044.27 982.688 c
1044.3 983.109 1044.22 983.785 1044.36 984.207 c
1044.49 984.625 1045.12 985.301 1045.25 985.723 c
1045.38 986.145 1045.2 986.82 1045.31 987.242 c
1045.42 987.66 1045.94 988.336 1046.04 988.758 c
1046.14 989.18 1046.04 989.855 1046.04 990.277 c
1046.05 990.695 1046.07 991.371 1046.09 991.793 c
1046.11 992.215 1046.15 992.891 1046.16 993.309 c
1046.18 993.73 1046.15 994.406 1046.19 994.828 c
1046.23 995.25 1046.41 995.926 1046.44 996.344 c
1046.48 996.766 1046.45 997.441 1046.45 997.863 c
1046.46 998.285 1046.46 998.961 1046.48 999.379 c
1046.51 999.801 1046.61 1000.48 1046.63 1000.9 c
1046.65 1001.32 1046.61 1001.99 1046.64 1002.41 c
1046.67 1002.84 1046.82 1003.51 1046.85 1003.93 c
1046.88 1004.35 1046.86 1005.03 1046.87 1005.45 c
1046.89 1005.87 1046.95 1006.55 1046.97 1006.97 c
1046.99 1007.39 1047.02 1008.06 1047.03 1008.48 c
1047.05 1008.91 1047.07 1009.58 1047.11 1010 c
1047.14 1010.42 1047.2 1011.1 1047.25 1011.52 c
1047.31 1011.94 1047.35 1012.62 1047.53 1013.04 c
1047.7 1013.46 1048.36 1014.13 1048.51 1014.55 c
1048.66 1014.98 1048.62 1015.65 1048.65 1016.07 c
1048.68 1016.49 1048.65 1017.17 1048.71 1017.59 c
1048.76 1018.01 1048.96 1018.69 1049.04 1019.11 c
1049.12 1019.53 1049.25 1020.2 1049.3 1020.63 c
1049.34 1021.05 1049.25 1021.72 1049.36 1022.14 c
1049.48 1022.56 1049.93 1023.24 1050.13 1023.66 c
1050.33 1024.08 1050.69 1024.75 1050.8 1025.18 c
1050.91 1025.6 1050.89 1026.27 1050.93 1026.7 c
1050.98 1027.11 1051.07 1027.79 1051.12 1028.21 c
1051.16 1028.63 1051.21 1029.31 1051.26 1029.73 c
1051.3 1030.15 1051.33 1030.82 1051.43 1031.25 c
1051.53 1031.67 1051.83 1032.34 1051.98 1032.77 c
1052.13 1033.18 1052.45 1033.86 1052.53 1034.28 c
1052.61 1034.7 1052.57 1035.38 1052.59 1035.8 c
1052.6 1036.22 1052.59 1036.89 1052.62 1037.32 c
1052.65 1037.74 1052.72 1038.41 1052.8 1038.83 c
1052.89 1039.25 1053.15 1039.93 1053.25 1040.35 c
1053.34 1040.77 1053.4 1041.45 1053.51 1041.87 c
1053.62 1042.29 1053.98 1042.96 1054.05 1043.39 c
1054.13 1043.81 1053.95 1044.48 1054.05 1044.9 c
1054.16 1045.32 1054.64 1046 1054.78 1046.42 c
1054.92 1046.84 1055.01 1047.52 1055.05 1047.94 c
1055.09 1048.36 1055.05 1049.04 1055.05 1049.46 c
1055.05 1049.88 1055.05 1050.55 1055.05 1050.97 c
1055.05 1051.39 1055.05 1052.07 1055.05 1052.49 c
1055.05 1052.91 1055.05 1053.59 1055.05 1054.01 c
1055.05 1054.43 1055.05 1055.11 1055.05 1055.53 c
1055.05 1055.95 1055.05 1056.62 1055.05 1057.04 c
1055.05 1057.46 1055.05 1058.14 1055.05 1058.56 c
1055.05 1058.98 1055.05 1059.66 1055.05 1060.08 c
1055.05 1060.5 1055.05 1061.18 1055.05 1061.59 c
1055.05 1062.02 1055.05 1062.69 1055.05 1063.11 c
1055.05 1063.54 1055.05 1064.21 1055.05 1064.63 c
1055.05 1065.05 1055.05 1065.73 1055.05 1066.15 c
1055.05 1066.57 1055.05 1067.25 1055.05 1067.66 c
1055.05 1068.09 1055.05 1068.76 1055.05 1069.18 c
1055.05 1069.6 1055.05 1070.28 1055.05 1070.7 c
1055.05 1071.12 1055.05 1071.8 1055.05 1072.22 c
1055.05 1072.64 1055.05 1073.31 1055.05 1073.73 c
1055.05 1074.16 1055.05 1074.83 1055.05 1075.25 c
1055.05 1075.67 1055.05 1076.35 1055.05 1076.77 c
1055.05 1077.19 1055.05 1077.87 1055.05 1078.29 c
1055.05 1078.71 1055.05 1079.38 1055.05 1079.8 c
1055.05 1080.23 1055.05 1080.9 1055.05 1081.32 c
1055.05 1081.74 1055.05 1082.42 1055.05 1082.84 c
1055.05 1083.26 1055.05 1083.94 1055.05 1084.36 c
1055.05 1084.78 1055.05 1085.45 1055.05 1085.88 c
1055.05 1086.3 1055.05 1086.97 1055.05 1087.39 c
1055.05 1087.81 1055.05 1088.49 1055.05 1088.91 c
1055.05 1089.33 1055.05 1090.01 1055.05 1090.43 c
1055.05 1090.85 1055.05 1091.52 1055.05 1091.95 c
1055.05 1092.37 1055.05 1093.04 1055.05 1093.46 c
1055.05 1093.88 1055.05 1094.56 1055.05 1094.98 c
1055.05 1095.4 1055.05 1096.07 1055.05 1096.5 c
1055.05 1096.92 1055.05 1097.59 1055.05 1098.02 c
1055.05 1098.43 1055.05 1099.11 1055.05 1099.53 c
1055.05 1099.95 1055.05 1100.63 1055.05 1101.05 c
1055.05 1101.47 1055.05 1102.14 1055.05 1102.57 c
1055.05 1102.99 1055.05 1103.66 1055.05 1104.09 c
1055.05 1104.5 1055.05 1105.18 1055.05 1105.6 c
1055.05 1106.02 1055.05 1106.7 1055.05 1107.12 c
1055.05 1107.54 1055.05 1108.21 1055.05 1108.64 c
1055.05 1109.06 1055.05 1109.73 1055.05 1110.15 c
1055.05 1110.57 1055.05 1111.25 1055.05 1111.67 c
1055.05 1112.09 1055.05 1112.77 1055.05 1113.19 c
1055.05 1113.61 1055.05 1114.29 1055.05 1114.71 c
1055.05 1115.13 1055.05 1115.8 1055.05 1116.22 c
1055.05 1116.64 1055.05 1117.32 1055.05 1117.74 c
1055.05 1118.16 1055.05 1118.84 1055.05 1119.26 c
1055.05 1119.68 1055.05 1120.36 1055.05 1120.78 c
1055.05 1121.2 1055.05 1121.87 1055.05 1122.29 c
1055.05 1122.71 1055.05 1123.39 1055.05 1123.81 c
1055.05 1124.23 1055.05 1124.91 1055.05 1125.33 c
1055.05 1125.75 1055.05 1126.43 1055.05 1126.85 c
1055.05 1127.27 1055.05 1127.94 1055.05 1128.36 c
1055.05 1128.79 1055.05 1129.46 1055.05 1129.88 c
1055.05 1130.3 1055.05 1130.98 1055.05 1131.4 c
1055.05 1131.82 1055.05 1132.5 1055.05 1132.91 c
1055.05 1133.34 1055.05 1134.01 1055.05 1134.43 c
1055.05 1134.86 1055.05 1135.53 1055.05 1135.95 c
1055.05 1136.37 1055.05 1137.05 1055.05 1137.47 c
1055.05 1137.89 1055.05 1138.56 1055.05 1138.98 c
1055.05 1139.41 1055.05 1140.08 1055.05 1140.5 c
1055.05 1140.92 1055.05 1141.6 1055.05 1142.02 c
1055.05 1142.44 1055.05 1143.12 1055.05 1143.54 c
1055.05 1143.96 1055.05 1144.63 1055.05 1145.05 c
1055.05 1145.48 1055.05 1146.15 1055.05 1146.57 c
1055.05 1146.99 1055.05 1147.67 1055.05 1148.09 c
1055.05 1148.51 1055.05 1149.19 1055.05 1149.61 c
1055.05 1150.03 1055.05 1150.7 1055.05 1151.13 c
1055.05 1151.55 1055.05 1152.22 1055.05 1152.64 c
1055.05 1153.06 1055.05 1153.74 1055.05 1154.16 c
1055.05 1154.58 1055.05 1155.26 1055.05 1155.68 c
1055.05 1156.1 1055.05 1156.77 1055.05 1157.2 c
1055.05 1157.62 1055.05 1158.29 1055.05 1158.71 c
1055.05 1159.13 1055.05 1159.81 1055.05 1160.23 c
1055.05 1160.65 1055.05 1161.32 1055.05 1161.75 c
1055.05 1162.17 1055.05 1162.84 1055.05 1163.27 c
1055.05 1163.68 1055.05 1164.36 1055.05 1164.78 c
1055.05 1165.2 1055.05 1165.88 1055.05 1166.3 c
1055.05 1166.72 1055.05 1167.39 1055.05 1167.82 c
1055.05 1168.24 1055.05 1168.91 1055.05 1169.34 c
1055.05 1169.75 1055.05 1170.43 1055.05 1170.85 c
1055.05 1171.27 1055.05 1171.95 1055.05 1172.37 c
1055.05 1172.79 1055.05 1173.46 1055.05 1173.89 c
1055.05 1174.31 1055.05 1174.98 1055.05 1175.4 c
1055.05 1175.82 1055.05 1176.5 1055.05 1176.92 c
1055.05 1177.34 1055.05 1178.02 1055.05 1178.44 c
1055.05 1178.86 1055.05 1179.54 1055.05 1179.96 c
1055.05 1180.38 1055.05 1181.05 1055.05 1181.47 c
1055.05 1181.89 1055.05 1182.57 1055.05 1182.99 c
1055.05 1183.41 1055.05 1184.09 1055.05 1184.51 c
1055.05 1184.93 1055.05 1185.61 1055.05 1186.03 c
1055.05 1186.45 1055.05 1187.12 1055.05 1187.54 c
1055.05 1187.96 1055.05 1188.64 1055.05 1189.06 c
1055.05 1189.48 1055.05 1190.16 1055.05 1190.58 c
1055.05 1191 1055.05 1191.68 1055.05 1192.1 c
1055.05 1192.52 1055.05 1193.61 y
S
[ ] 0 d
0 0 1 rg
0 0 1 RG
261.34 222.195 m
261.34 223.109 261.34 223.461 v
261.34 223.809 261.34 224.375 261.34 224.727 c
261.34 225.074 261.34 225.637 261.34 225.988 c
261.34 226.34 261.34 226.902 261.34 227.254 c
261.34 227.605 261.34 228.168 261.34 228.52 c
261.34 228.871 261.34 229.434 261.34 229.785 c
261.34 230.137 261.34 230.699 261.34 231.051 c
261.34 231.398 261.34 231.961 261.34 232.313 c
261.34 232.664 261.34 233.227 261.34 233.578 c
261.34 233.93 261.34 234.492 261.34 234.844 c
261.34 235.195 261.34 235.758 261.34 236.109 c
261.34 236.461 261.34 237.023 261.34 237.375 c
261.34 237.723 261.34 238.285 261.34 238.637 c
261.34 238.988 261.34 239.551 261.34 239.902 c
261.34 240.254 261.34 240.816 261.34 241.168 c
261.34 241.52 260.973 242.082 261.34 242.434 c
261.707 242.785 263.352 243.348 263.996 243.699 c
264.637 244.047 265.609 244.613 265.977 244.961 c
266.34 245.313 266.434 245.875 266.617 246.227 c
266.801 246.578 267.172 247.141 267.297 247.492 c
267.426 247.844 267.172 248.406 267.527 248.758 c
267.883 249.109 268.848 249.672 269.867 250.023 c
270.887 250.371 274.133 250.938 274.879 251.285 c
275.625 251.637 274.387 252.199 275.242 252.551 c
276.098 252.902 280.211 253.465 281.039 253.816 c
281.863 254.168 280.977 254.73 281.191 255.082 c
281.406 255.434 282.07 255.996 282.582 256.348 c
283.09 256.699 284.496 257.262 284.867 257.609 c
285.238 257.961 285.051 258.523 285.254 258.875 c
285.457 259.227 285.633 259.789 286.328 260.141 c
287.027 260.492 289.703 261.055 290.277 261.406 c
290.852 261.758 290.398 262.32 290.465 262.672 c
290.535 263.02 290.691 263.586 290.766 263.934 c
290.844 264.285 290.859 264.848 291.012 265.199 c
291.164 265.551 291.598 266.113 291.867 266.465 c
292.137 266.816 292.699 267.379 292.961 267.73 c
293.223 268.082 293.133 268.645 293.75 268.996 c
294.367 269.348 296.34 269.91 297.418 270.258 c
298.496 270.609 300.738 271.172 301.52 271.523 c
302.297 271.875 302.816 272.438 303.035 272.789 c
303.258 273.141 303.07 273.703 303.113 274.055 c
303.16 274.406 303.273 274.969 303.359 275.32 c
303.449 275.672 303.594 276.234 303.758 276.582 c
303.918 276.934 304.227 277.496 304.527 277.848 c
304.828 278.199 305.645 278.762 305.926 279.113 c
306.211 279.465 306.445 280.027 306.559 280.379 c
306.672 280.73 306.578 281.293 306.746 281.645 c
306.914 281.996 307.375 282.559 307.773 282.91 c
308.176 283.258 309.352 283.824 309.633 284.172 c
309.91 284.523 309.414 285.086 309.781 285.438 c
310.148 285.789 311.633 286.352 312.281 286.703 c
312.926 287.055 314.082 287.617 314.445 287.969 c
314.809 288.32 314.738 288.883 314.891 289.234 c
315.047 289.582 315.23 290.148 315.559 290.496 c
315.891 290.848 317 291.41 317.27 291.762 c
317.535 292.113 317.316 292.676 317.492 293.027 c
317.664 293.379 318.34 293.941 318.523 294.293 c
318.707 294.645 318.633 295.207 318.805 295.559 c
318.977 295.906 319.313 296.473 319.773 296.82 c
320.234 297.172 321.23 297.734 322.121 298.086 c
323.016 298.438 325.582 299 326.203 299.352 c
326.824 299.703 326.457 300.266 326.609 300.617 c
326.766 300.969 327.121 301.531 327.316 301.883 c
327.516 302.23 327.848 302.797 328.027 303.145 c
328.207 303.496 328.176 304.059 328.609 304.41 c
329.043 304.762 330.656 305.324 331.156 305.676 c
331.656 306.027 332.066 306.59 332.215 306.941 c
332.363 307.293 332.203 307.855 332.23 308.207 c
332.258 308.555 332.379 309.121 332.406 309.469 c
332.438 309.82 332.273 310.383 332.434 310.734 c
332.598 311.086 333.395 311.648 333.582 312 c
333.77 312.352 333.547 312.914 333.789 313.266 c
334.027 313.617 335.082 314.18 335.313 314.531 c
335.543 314.883 335.363 315.445 335.441 315.797 c
335.52 316.145 335.734 316.711 335.871 317.059 c
336.012 317.41 336.051 317.973 336.449 318.324 c
336.848 318.676 338.301 319.238 338.75 319.59 c
339.195 319.941 339.496 320.504 339.676 320.855 c
339.855 321.207 339.832 321.77 340.055 322.121 c
340.277 322.469 341.109 323.035 341.281 323.383 c
341.453 323.734 341.246 324.297 341.297 324.648 c
341.352 325 341.438 325.563 341.672 325.914 c
341.902 326.266 342.395 326.828 342.965 327.18 c
343.539 327.531 345.313 328.094 345.793 328.445 c
346.273 328.793 346.172 329.359 346.422 329.707 c
346.668 330.059 347.246 330.621 347.594 330.973 c
347.938 331.324 348.641 331.887 348.91 332.238 c
349.176 332.59 349.434 333.152 349.531 333.504 c
349.625 333.855 349.547 334.418 349.605 334.77 c
349.664 335.117 349.809 335.684 349.945 336.031 c
350.086 336.383 350.402 336.945 350.609 337.297 c
350.816 337.648 351.246 338.211 351.43 338.563 c
351.613 338.914 351.715 339.477 351.941 339.828 c
352.172 340.18 352.785 340.742 353.074 341.094 c
353.367 341.441 353.898 342.008 354.035 342.355 c
354.168 342.707 353.852 343.27 354.035 343.621 c
354.223 343.973 355.188 344.535 355.375 344.887 c
355.563 345.238 355.031 345.801 355.387 346.152 c
355.738 346.504 357.285 347.066 357.922 347.418 c
358.559 347.77 359.379 348.332 359.973 348.68 c
360.563 349.031 361.844 349.594 362.191 349.945 c
362.539 350.297 362.219 350.859 362.477 351.211 c
362.734 351.563 363.82 352.125 364.043 352.477 c
364.27 352.828 363.965 353.391 364.102 353.742 c
364.234 354.094 364.727 354.656 365.023 355.008 c
365.324 355.355 365.961 355.918 366.246 356.27 c
366.531 356.621 366.789 357.184 367.07 357.535 c
367.352 357.887 368.055 358.449 368.273 358.801 c
368.496 359.152 368.25 359.715 368.672 360.066 c
369.094 360.418 370.855 360.98 371.316 361.332 c
371.777 361.68 371.891 362.246 371.992 362.594 c
372.094 362.945 371.848 363.508 372.043 363.859 c
372.238 364.211 373.066 364.773 373.395 365.125 c
373.723 365.477 374.266 366.039 374.402 366.391 c
374.543 366.742 374.18 367.305 374.406 367.656 c
374.633 368.004 375.633 368.57 376.035 368.918 c
376.438 369.27 377.082 369.832 377.309 370.184 c
377.535 370.535 377.297 371.098 377.672 371.449 c
378.043 371.801 379.637 372.363 380 372.715 c
380.367 373.066 380.195 373.629 380.297 373.98 c
380.398 374.328 380.281 374.895 380.734 375.242 c
381.184 375.594 382.379 376.156 383.555 376.508 c
384.734 376.859 388.426 377.422 389.223 377.773 c
390.02 378.125 389.043 378.688 389.293 379.039 c
389.539 379.391 390.633 379.953 391.004 380.305 c
391.371 380.652 391.613 381.219 391.941 381.566 c
392.27 381.918 393.063 382.48 393.375 382.832 c
393.684 383.184 393.977 383.746 394.18 384.098 c
394.379 384.449 394.57 385.012 394.828 385.363 c
395.09 385.715 395.848 386.277 396.051 386.629 c
396.258 386.977 395.707 387.543 396.305 387.891 c
396.898 388.242 399.727 388.805 400.359 389.156 c
400.988 389.508 400.719 390.07 400.859 390.422 c
401 390.773 401.227 391.336 401.379 391.688 c
401.527 392.039 401.816 392.602 401.945 392.953 c
402.078 393.305 402.125 393.867 402.316 394.215 c
402.504 394.566 403.07 395.129 403.305 395.48 c
403.539 395.832 403.711 396.395 404.008 396.746 c
404.305 397.098 405.227 397.66 405.453 398.012 c
405.676 398.363 405.566 398.926 405.621 399.277 c
405.68 399.629 405.813 400.191 405.867 400.543 c
405.922 400.891 405.914 401.453 406.016 401.805 c
406.117 402.156 406.473 402.719 406.605 403.07 c
406.742 403.422 406.902 403.984 406.988 404.336 c
407.078 404.688 407.031 405.25 407.242 405.602 c
407.453 405.953 408.098 406.516 408.52 406.867 c
408.941 407.215 409.852 407.781 410.281 408.129 c
410.715 408.48 411.371 409.043 411.629 409.395 c
411.887 409.746 412.043 410.309 412.148 410.66 c
412.254 411.012 412.32 411.574 412.398 411.926 c
412.473 412.277 412.633 412.84 412.688 413.191 c
412.746 413.539 412.785 414.105 412.813 414.453 c
412.84 414.805 412.645 415.367 412.883 415.719 c
413.125 416.07 413.785 416.633 414.539 416.984 c
415.289 417.336 417.508 417.898 418.301 418.25 c
419.098 418.602 419.945 419.164 420.273 419.516 c
420.602 419.863 420.594 420.43 420.668 420.777 c
420.746 421.129 420.723 421.691 420.824 422.043 c
420.926 422.395 421.262 422.957 421.406 423.309 c
421.555 423.66 421.789 424.223 421.883 424.574 c
421.977 424.926 421.219 425.488 422.086 425.84 c
422.949 426.188 427.215 426.754 428.129 427.102 c
429.039 427.453 428.172 428.016 428.664 428.367 c
429.152 428.719 431.227 429.281 431.664 429.633 c
432.102 429.984 431.73 430.547 431.832 430.898 c
431.93 431.25 432.273 431.813 432.387 432.164 c
432.5 432.516 432.602 433.078 432.645 433.426 c
432.688 433.777 432.363 434.34 432.688 434.691 c
433.012 435.043 434.527 435.605 434.98 435.957 c
435.434 436.309 435.723 436.871 435.957 437.223 c
436.191 437.574 436.297 438.137 436.668 438.488 c
437.035 438.84 438.25 439.402 438.621 439.754 c
438.992 440.102 439.207 440.668 439.344 441.016 c
439.48 441.367 439.555 441.93 439.613 442.281 c
439.668 442.633 439.637 443.195 439.754 443.547 c
439.871 443.898 440.281 444.461 440.449 444.813 c
440.621 445.164 440.82 445.727 440.973 446.078 c
441.125 446.426 441.121 446.988 441.551 447.34 c
441.977 447.691 443.332 448.254 444.051 448.605 c
444.77 448.957 446.336 449.52 446.73 449.871 c
447.129 450.223 446.633 450.785 446.906 451.137 c
447.176 451.488 448.277 452.051 448.684 452.402 c
449.086 452.75 449.574 453.316 449.82 453.664 c
450.063 454.016 450.328 454.578 450.438 454.93 c
450.543 455.281 450.273 455.844 450.594 456.195 c
450.914 456.547 452.344 457.109 452.746 457.461 c
453.148 457.813 453.344 458.375 453.492 458.727 c
453.641 459.074 453.57 459.641 453.82 459.988 c
454.066 460.34 455.051 460.902 455.273 461.254 c
455.496 461.605 455.336 462.168 455.434 462.52 c
455.535 462.871 455.641 463.434 455.992 463.785 c
456.344 464.137 457.383 464.699 457.973 465.051 c
458.563 465.398 459.793 465.965 460.254 466.313 c
460.719 466.664 461.148 467.227 461.316 467.578 c
461.488 467.93 461.402 468.492 461.488 468.844 c
461.574 469.195 461.781 469.758 461.934 470.109 c
462.082 470.461 462.332 471.023 462.582 471.375 c
462.832 471.723 463.531 472.289 463.727 472.637 c
463.918 472.988 463.566 473.551 463.977 473.902 c
464.383 474.254 465.801 474.816 466.656 475.168 c
467.516 475.52 469.672 476.082 470.16 476.434 c
470.648 476.785 470.152 477.348 470.18 477.699 c
470.207 478.051 470.254 478.613 470.363 478.961 c
470.473 479.313 470.867 479.879 470.965 480.227 c
471.066 480.578 470.848 481.141 471.078 481.492 c
471.313 481.844 472.008 482.406 472.637 482.758 c
473.262 483.109 475.02 483.672 475.598 484.023 c
476.18 484.375 476.508 484.938 476.813 485.289 c
477.117 485.637 477.641 486.203 477.805 486.551 c
477.973 486.902 477.875 487.465 478.008 487.816 c
478.141 488.168 478.617 488.73 478.762 489.082 c
478.906 489.434 478.859 489.996 479.043 490.348 c
479.227 490.699 479.723 491.262 480.082 491.613 c
480.441 491.961 481.398 492.527 481.629 492.875 c
481.859 493.227 481.57 493.789 481.738 494.141 c
481.91 494.492 482.668 495.055 482.855 495.406 c
483.043 495.758 483.008 496.32 483.094 496.672 c
483.18 497.023 483.305 497.586 483.469 497.938 c
483.629 498.285 484.09 498.852 484.266 499.199 c
484.441 499.551 484.656 500.113 484.727 500.465 c
484.801 500.816 484.766 501.379 484.801 501.73 c
484.836 502.082 484.945 502.645 484.984 502.996 c
485.023 503.348 484.75 503.91 485.086 504.262 c
485.422 504.609 487.047 505.176 487.414 505.523 c
487.781 505.875 487.656 506.438 487.738 506.789 c
487.82 507.141 487.973 507.703 488.012 508.055 c
488.051 508.406 487.805 508.969 488.016 509.32 c
488.23 509.672 489.156 510.234 489.555 510.586 c
489.953 510.934 490.648 511.5 490.883 511.848 c
491.117 512.199 491.172 512.762 491.234 513.113 c
491.301 513.465 491.324 514.027 491.348 514.379 c
491.367 514.73 491.102 515.293 491.387 515.645 c
491.672 515.996 493.09 516.559 493.402 516.91 c
493.715 517.262 493.246 517.824 493.645 518.176 c
494.043 518.523 495.82 519.086 496.273 519.438 c
496.727 519.789 496.613 520.352 496.91 520.703 c
497.203 521.055 498.07 521.617 498.402 521.969 c
498.738 522.32 499.137 522.883 499.313 523.234 c
499.488 523.586 499.414 524.148 499.668 524.5 c
499.918 524.848 500.809 525.414 501.133 525.762 c
501.453 526.113 501.715 526.676 501.996 527.027 c
502.277 527.379 502.945 527.941 503.168 528.293 c
503.387 528.645 503.5 529.207 503.586 529.559 c
503.676 529.91 503.691 530.473 503.805 530.824 c
503.918 531.172 504.301 531.738 504.406 532.086 c
504.512 532.438 504.539 533 504.566 533.352 c
504.59 533.703 504.105 534.266 504.602 534.617 c
505.098 534.969 507.434 535.531 508.145 535.883 c
508.855 536.234 509.488 536.797 509.73 537.148 c
509.969 537.496 509.824 538.063 509.875 538.41 c
509.926 538.762 510.063 539.324 510.102 539.676 c
510.141 540.027 509.188 540.59 510.164 540.941 c
511.141 541.293 515.746 541.855 517.145 542.207 c
518.539 542.559 519.699 543.121 520.227 543.473 c
520.754 543.82 520.828 544.387 520.941 544.734 c
521.055 545.086 520.828 545.648 521.035 546 c
521.246 546.352 522.121 546.914 522.449 547.266 c
522.777 547.617 523.059 548.18 523.406 548.531 c
523.754 548.883 524.719 549.445 524.953 549.797 c
525.188 550.148 524.855 550.711 525.102 551.059 c
525.348 551.41 526.434 551.973 526.73 552.324 c
527.027 552.676 527.047 553.238 527.254 553.59 c
527.461 553.941 527.969 554.504 528.219 554.855 c
528.465 555.207 528.887 555.77 529.043 556.121 c
529.195 556.473 529.234 557.035 529.324 557.383 c
529.414 557.734 529.5 558.297 529.684 558.648 c
529.867 559 530.293 559.563 530.645 559.914 c
530.996 560.266 531.863 560.828 532.223 561.18 c
532.578 561.531 532.91 562.094 533.23 562.445 c
533.551 562.797 534.344 563.359 534.531 563.711 c
534.715 564.059 534.539 564.621 534.566 564.973 c
534.598 565.324 534.695 565.887 534.746 566.238 c
534.793 566.59 534.738 567.152 534.918 567.504 c
535.098 567.855 535.848 568.418 536.039 568.77 c
536.23 569.121 536.059 569.684 536.301 570.035 c
536.547 570.383 537.582 570.949 537.805 571.297 c
538.031 571.648 537.891 572.211 537.922 572.563 c
537.957 572.914 537.973 573.477 538.043 573.828 c
538.117 574.18 538.375 574.742 538.441 575.094 c
538.508 575.445 538.395 576.008 538.523 576.359 c
538.652 576.707 539.184 577.273 539.359 577.621 c
539.535 577.973 539.594 578.535 539.785 578.887 c
539.977 579.238 540.559 579.801 540.742 580.152 c
540.922 580.504 540.82 581.066 541.09 581.418 c
541.359 581.77 542.41 582.332 542.676 582.684 c
542.938 583.031 542.809 583.598 542.996 583.945 c
543.188 584.297 543.875 584.859 544.043 585.211 c
544.215 585.563 544.086 586.125 544.219 586.477 c
544.352 586.828 544.84 587.391 545 587.742 c
545.156 588.094 545.281 588.656 545.359 589.008 c
545.438 589.355 545.398 589.922 545.566 590.27 c
545.734 590.621 546.355 591.184 546.57 591.535 c
546.781 591.887 546.766 592.449 547.109 592.801 c
547.449 593.152 548.707 593.715 549.039 594.066 c
549.371 594.418 549.266 594.98 549.496 595.332 c
549.727 595.68 550.203 596.246 550.691 596.594 c
551.18 596.945 552.66 597.508 553.008 597.859 c
553.359 598.211 553.133 598.773 553.203 599.125 c
553.273 599.477 553.387 600.039 553.516 600.391 c
553.645 600.742 553.93 601.305 554.125 601.656 c
554.324 602.008 554.551 602.57 554.941 602.922 c
555.332 603.27 556.613 603.836 556.941 604.184 c
557.27 604.535 557.055 605.098 557.313 605.449 c
557.57 605.801 558.207 606.363 558.813 606.715 c
559.414 607.066 561.164 607.629 561.672 607.98 c
562.184 608.332 562.359 608.895 562.488 609.246 c
562.621 609.594 562.418 610.16 562.617 610.508 c
562.816 610.859 563.594 611.422 563.922 611.773 c
564.25 612.125 564.797 612.688 564.98 613.039 c
565.164 613.391 565.137 613.953 565.246 614.305 c
565.355 614.656 565.688 615.219 565.777 615.57 c
565.867 615.918 565.555 616.484 565.895 616.832 c
566.234 617.184 567.625 617.746 568.234 618.098 c
568.844 618.449 569.879 619.012 570.293 619.363 c
570.707 619.715 571.035 620.277 571.223 620.629 c
571.41 620.98 571.316 621.543 571.641 621.895 c
571.969 622.242 572.93 622.809 573.582 623.156 c
574.23 623.508 575.777 624.07 576.34 624.422 c
576.906 624.773 577.445 625.336 577.645 625.688 c
577.844 626.039 577.734 626.602 577.773 626.953 c
577.809 627.305 577.617 627.867 577.918 628.219 c
578.215 628.566 579.602 629.133 579.926 629.48 c
580.254 629.832 580.102 630.395 580.262 630.746 c
580.426 631.098 580.957 631.66 581.109 632.012 c
581.262 632.363 581.313 632.926 581.367 633.277 c
581.422 633.629 581.336 634.191 581.504 634.543 c
581.668 634.891 582.344 635.457 582.566 635.805 c
582.789 636.156 582.965 636.719 583.105 637.07 c
583.242 637.422 583.457 637.984 583.574 638.336 c
583.695 638.688 583.645 639.25 583.961 639.602 c
584.281 639.953 585.48 640.516 585.871 640.867 c
586.266 641.219 586.652 641.781 586.781 642.133 c
586.914 642.48 586.715 643.043 586.82 643.395 c
586.93 643.746 587.449 644.309 587.559 644.66 c
587.668 645.012 587.555 645.574 587.613 645.926 c
587.668 646.277 587.633 646.84 587.973 647.191 c
588.313 647.543 589.586 648.105 590.059 648.457 c
590.531 648.805 591.051 649.371 591.383 649.719 c
591.715 650.07 591.941 650.633 592.445 650.984 c
592.945 651.336 594.551 651.898 595 652.25 c
595.453 652.602 595.465 653.164 595.688 653.516 c
595.914 653.867 596.438 654.43 596.617 654.781 c
596.801 655.129 596.875 655.695 596.996 656.043 c
597.117 656.395 597.41 656.957 597.5 657.309 c
597.59 657.66 597.625 658.223 597.652 658.574 c
597.68 658.926 597.66 659.488 597.688 659.84 c
597.715 660.191 597.801 660.754 597.848 661.105 c
597.895 661.453 597.926 662.02 598.016 662.367 c
598.102 662.719 598.336 663.281 598.477 663.633 c
598.617 663.984 598.895 664.547 599.031 664.898 c
599.168 665.25 599.305 665.813 599.469 666.164 c
599.637 666.516 599.992 667.078 600.227 667.43 c
600.461 667.777 600.898 668.344 601.164 668.691 c
601.434 669.043 601.926 669.605 602.156 669.957 c
602.387 670.309 602.691 670.871 602.824 671.223 c
602.953 671.574 602.961 672.137 603.105 672.488 c
603.246 672.84 603.707 673.402 603.859 673.754 c
604.016 674.105 604.074 674.668 604.215 675.016 c
604.359 675.367 604.789 675.93 604.879 676.281 c
604.973 676.633 604.711 677.195 604.883 677.547 c
605.059 677.898 605.949 678.461 606.129 678.813 c
606.309 679.164 605.988 679.727 606.188 680.078 c
606.387 680.43 607.109 680.992 607.566 681.34 c
608.023 681.691 609.18 682.254 609.477 682.605 c
609.77 682.957 609.598 683.52 609.703 683.871 c
609.809 684.223 610.086 684.785 610.242 685.137 c
610.398 685.488 610.371 686.051 610.824 686.402 c
611.273 686.754 613.008 687.316 613.492 687.668 c
613.977 688.016 614.18 688.582 614.305 688.93 c
614.426 689.281 614.313 689.844 614.375 690.195 c
614.434 690.547 614.695 691.109 614.754 691.461 c
614.809 691.813 614.684 692.375 614.773 692.727 c
614.863 693.078 615.262 693.641 615.398 693.992 c
615.531 694.34 615.574 694.906 615.746 695.254 c
615.918 695.605 616.43 696.168 616.629 696.52 c
616.828 696.871 617.109 697.434 617.184 697.785 c
617.262 698.137 617.129 698.699 617.188 699.051 c
617.246 699.402 617.469 699.965 617.617 700.316 c
617.766 700.664 618.121 701.23 618.258 701.578 c
618.398 701.93 618.48 702.492 618.625 702.844 c
618.766 703.195 619.109 703.758 619.289 704.109 c
619.465 704.461 619.777 705.023 619.91 705.375 c
620.039 705.727 620.102 706.289 620.23 706.641 c
620.363 706.988 620.766 707.555 620.855 707.902 c
620.941 708.254 620.758 708.816 620.879 709.168 c
621 709.52 621.406 710.082 621.723 710.434 c
622.039 710.785 622.918 711.348 623.16 711.699 c
623.402 712.051 623.348 712.613 623.465 712.965 c
623.586 713.313 623.863 713.879 624.016 714.227 c
624.172 714.578 624.441 715.141 624.578 715.492 c
624.715 715.844 624.93 716.406 625.012 716.758 c
625.094 717.109 625.141 717.672 625.168 718.023 c
625.191 718.375 625.191 718.938 625.199 719.289 c
625.203 719.637 625.172 720.203 625.211 720.551 c
625.254 720.902 625.438 721.465 625.504 721.816 c
625.57 722.168 625.125 722.73 625.691 723.082 c
626.258 723.434 628.773 723.996 629.582 724.348 c
630.387 724.699 631.227 725.262 631.5 725.613 c
631.773 725.965 631.453 726.527 631.555 726.879 c
631.656 727.227 632.035 727.793 632.238 728.141 c
632.438 728.492 632.848 729.055 633 729.406 c
633.156 729.758 633.254 730.32 633.348 730.672 c
633.441 731.023 633.547 731.586 633.676 731.938 c
633.809 732.289 634.156 732.852 634.289 733.203 c
634.422 733.551 634.453 734.117 634.629 734.465 c
634.805 734.816 635.246 735.379 635.547 735.73 c
635.852 736.082 636.305 736.645 636.809 736.996 c
637.313 737.348 638.406 737.91 639.184 738.262 c
639.965 738.613 641.941 739.176 642.426 739.527 c
642.906 739.875 642.488 740.441 642.664 740.789 c
642.836 741.141 643.402 741.703 643.676 742.055 c
643.949 742.406 644.434 742.969 644.641 743.32 c
644.848 743.672 645.047 744.234 645.176 744.586 c
645.305 744.938 645.504 745.5 645.582 745.852 c
645.664 746.199 645.672 746.766 645.754 747.113 c
645.836 747.465 646.09 748.027 646.176 748.379 c
646.258 748.73 646.297 749.293 646.359 749.645 c
646.422 749.996 646.578 750.559 646.621 750.91 c
646.664 751.262 646.617 751.824 646.668 752.176 c
646.719 752.523 646.879 753.09 646.984 753.438 c
647.09 753.789 647.355 754.352 647.418 754.703 c
647.484 755.055 647.418 755.617 647.441 755.969 c
647.465 756.32 647.531 756.883 647.598 757.234 c
647.664 757.586 647.727 758.148 647.922 758.5 c
648.117 758.852 648.848 759.414 649.008 759.762 c
649.164 760.113 649.035 760.676 649.066 761.027 c
649.098 761.379 649.117 761.941 649.23 762.293 c
649.344 762.645 649.57 763.207 649.887 763.559 c
650.203 763.91 651.16 764.473 651.512 764.824 c
651.863 765.176 652.285 765.738 652.418 766.09 c
652.547 766.438 652.395 767.004 652.445 767.352 c
652.5 767.703 652.164 768.266 652.797 768.617 c
653.434 768.969 656.352 769.531 657.031 769.883 c
657.711 770.234 657.492 770.797 657.691 771.148 c
657.895 771.5 658.313 772.063 658.496 772.414 c
658.676 772.762 658.676 773.328 659 773.676 c
659.324 774.027 660.492 774.59 660.82 774.941 c
661.145 775.293 660.891 775.855 661.359 776.207 c
661.828 776.559 663.785 777.121 664.191 777.473 c
664.598 777.824 664.137 778.387 664.277 778.738 c
664.418 779.086 664.887 779.652 665.211 780 c
665.535 780.352 666.379 780.914 666.617 781.266 c
666.859 781.617 666.871 782.18 666.953 782.531 c
667.035 782.883 667.113 783.445 667.203 783.797 c
667.297 784.148 667.539 784.711 667.617 785.063 c
667.699 785.414 667.664 785.977 667.785 786.324 c
667.902 786.676 668.188 787.238 668.477 787.59 c
668.77 787.941 669.477 788.504 669.879 788.855 c
670.281 789.207 671.063 789.77 671.375 790.121 c
671.684 790.473 671.863 791.035 672.125 791.387 c
672.387 791.734 673.035 792.301 673.258 792.648 c
673.477 793 673.57 793.563 673.723 793.914 c
673.879 794.266 674.195 794.828 674.367 795.18 c
674.535 795.531 674.848 796.094 674.949 796.445 c
675.055 796.797 675.074 797.359 675.125 797.711 c
675.172 798.059 675.223 798.625 675.297 798.973 c
675.375 799.324 675.531 799.887 675.684 800.238 c
675.84 800.59 676.23 801.152 676.418 801.504 c
676.605 801.855 676.934 802.418 677.051 802.77 c
677.168 803.121 677.219 803.684 677.27 804.035 c
677.32 804.383 676.938 804.949 677.414 805.297 c
677.887 805.648 680.219 806.211 680.688 806.563 c
681.16 806.914 680.648 807.477 680.813 807.828 c
680.98 808.18 681.68 808.742 681.887 809.094 c
682.094 809.445 682.203 810.008 682.305 810.359 c
682.402 810.711 682.438 811.273 682.602 811.625 c
682.766 811.973 683.133 812.535 683.492 812.887 c
683.848 813.238 684.918 813.801 685.176 814.152 c
685.434 814.504 685.172 815.066 685.344 815.418 c
685.516 815.77 686.234 816.332 686.414 816.684 c
686.598 817.035 686.566 817.598 686.652 817.949 c
686.734 818.297 686.84 818.863 687.027 819.211 c
687.215 819.563 687.863 820.125 688 820.477 c
688.137 820.828 687.672 821.391 688.016 821.742 c
688.359 822.094 690.094 822.656 690.473 823.008 c
690.855 823.359 690.645 823.922 690.762 824.273 c
690.879 824.621 691.035 825.188 691.32 825.535 c
691.609 825.887 692.559 826.449 692.836 826.801 c
693.113 827.152 693.148 827.715 693.324 828.066 c
693.5 828.418 693.902 828.98 694.098 829.332 c
694.293 829.684 694.461 830.246 694.73 830.598 c
695 830.945 695.547 831.512 696.035 831.859 c
696.527 832.211 697.824 832.773 698.258 833.125 c
698.691 833.477 698.727 834.039 699.164 834.391 c
699.602 834.742 701.102 835.305 701.414 835.656 c
701.727 836.008 701.375 836.57 701.426 836.922 c
701.477 837.27 701.559 837.836 701.777 838.184 c
701.996 838.535 702.777 839.098 702.992 839.449 c
703.203 839.801 703 840.363 703.316 840.715 c
703.633 841.066 704.902 841.629 705.277 841.98 c
705.652 842.332 705.641 842.895 706.008 843.246 c
706.375 843.598 707.59 844.16 707.934 844.508 c
708.273 844.859 708.223 845.422 708.477 845.773 c
708.727 846.125 709.563 846.688 709.758 847.039 c
709.953 847.391 709.773 847.953 709.879 848.305 c
709.988 848.656 710.379 849.219 710.535 849.57 c
710.688 849.922 710.871 850.484 711 850.836 c
711.125 851.184 711.277 851.746 711.457 852.098 c
711.633 852.449 712.164 853.012 712.285 853.363 c
712.41 853.715 712.16 854.277 712.34 854.629 c
712.516 854.98 713.219 855.543 713.57 855.895 c
713.926 856.246 714.664 856.809 714.891 857.16 c
715.113 857.508 715.035 858.074 715.188 858.422 c
715.34 858.773 715.82 859.336 715.98 859.688 c
716.145 860.039 716.277 860.602 716.363 860.953 c
716.449 861.305 716.148 861.867 716.605 862.219 c
717.066 862.57 719.145 863.133 719.68 863.484 c
720.215 863.832 720.293 864.398 720.457 864.746 c
720.617 865.098 720.75 865.66 720.848 866.012 c
720.945 866.363 720.953 866.926 721.164 867.277 c
721.371 867.629 722.07 868.191 722.352 868.543 c
722.637 868.895 723.047 869.457 723.203 869.809 c
723.359 870.156 723.441 870.723 723.488 871.07 c
723.535 871.422 723.496 871.984 723.543 872.336 c
723.594 872.688 723.684 873.25 723.84 873.602 c
723.996 873.953 724.531 874.516 724.668 874.867 c
724.805 875.219 724.309 875.781 724.816 876.133 c
725.328 876.48 727.828 877.047 728.344 877.395 c
728.859 877.746 728.332 878.309 728.535 878.66 c
728.738 879.012 729.402 879.574 729.801 879.926 c
730.199 880.277 731.152 880.84 731.406 881.191 c
731.66 881.543 731.516 882.105 731.633 882.457 c
731.754 882.805 731.781 883.371 732.254 883.719 c
732.727 884.07 734.539 884.633 735.031 884.984 c
735.523 885.336 735.457 885.898 735.793 886.25 c
736.129 886.602 737.145 887.164 737.457 887.516 c
737.77 887.867 737.934 888.43 738.055 888.781 c
738.176 889.129 738.035 889.695 738.34 890.043 c
738.641 890.395 739.887 890.957 740.238 891.309 c
740.59 891.66 740.668 892.223 740.875 892.574 c
741.078 892.926 741.227 893.488 741.727 893.84 c
742.223 894.191 743.797 894.754 744.469 895.105 c
745.137 895.457 746.156 896.02 746.551 896.367 c
746.945 896.719 746.93 897.281 747.313 897.633 c
747.699 897.984 748.813 898.547 749.316 898.898 c
749.824 899.25 750.602 899.813 750.969 900.164 c
751.336 900.516 751.813 901.078 751.965 901.43 c
752.121 901.781 751.988 902.344 752.086 902.695 c
752.18 903.043 752.504 903.609 752.656 903.957 c
752.805 904.309 752.996 904.871 753.172 905.223 c
753.344 905.574 753.613 906.137 753.906 906.488 c
754.199 906.84 755.004 907.402 755.289 907.754 c
755.57 908.105 755.809 908.668 755.945 909.02 c
756.086 909.367 756.195 909.934 756.281 910.281 c
756.363 910.633 756.453 911.195 756.559 911.547 c
756.668 911.898 756.852 912.461 757.055 912.813 c
757.258 913.164 757.758 913.727 758.023 914.078 c
758.289 914.43 758.82 914.992 758.965 915.344 c
759.109 915.691 758.926 916.258 759.063 916.605 c
759.195 916.957 759.711 917.52 759.93 917.871 c
760.148 918.223 760.383 918.785 760.637 919.137 c
760.891 919.488 761.551 920.051 761.754 920.402 c
761.957 920.754 761.809 921.316 762.105 921.668 c
762.402 922.016 763.566 922.582 763.906 922.93 c
764.246 923.281 764.402 923.844 764.563 924.195 c
764.719 924.547 764.934 925.109 765.039 925.461 c
765.148 925.813 765.227 926.375 765.344 926.727 c
765.457 927.078 765.742 927.641 765.867 927.992 c
765.996 928.344 765.973 928.906 766.262 929.258 c
766.555 929.605 767.715 930.168 767.969 930.52 c
768.223 930.871 768.008 931.434 768.098 931.785 c
768.191 932.137 768.504 932.699 768.629 933.051 c
768.75 933.402 768.902 933.965 768.984 934.316 c
769.066 934.668 769.191 935.23 769.227 935.582 c
769.262 935.93 769.098 936.492 769.234 936.844 c
769.375 937.195 769.945 937.758 770.219 938.109 c
770.492 938.461 771.059 939.023 771.203 939.375 c
771.352 939.727 771.242 940.289 771.277 940.641 c
771.313 940.992 771.406 941.555 771.453 941.906 c
771.504 942.254 771.48 942.82 771.617 943.168 c
771.758 943.52 772.332 944.082 772.453 944.434 c
772.574 944.785 772.477 945.348 772.488 945.699 c
772.504 946.051 772.344 946.613 772.543 946.965 c
772.742 947.316 773.707 947.879 773.926 948.23 c
774.145 948.578 773.996 949.145 774.113 949.492 c
774.227 949.844 774.445 950.406 774.754 950.758 c
775.059 951.109 776.094 951.672 776.324 952.023 c
776.559 952.375 776.395 952.938 776.426 953.289 c
776.457 953.641 776.402 954.203 776.555 954.555 c
776.711 954.906 777.395 955.469 777.543 955.816 c
777.691 956.168 777.523 956.73 777.617 957.082 c
777.707 957.434 778.113 957.996 778.211 958.348 c
778.309 958.699 778.063 959.262 778.32 959.613 c
778.574 959.965 779.773 960.527 780.063 960.879 c
780.352 961.227 780.199 961.793 780.398 962.141 c
780.598 962.492 781.117 963.055 781.504 963.406 c
781.887 963.758 782.914 964.32 783.172 964.672 c
783.43 965.023 783.332 965.586 783.363 965.938 c
783.398 966.289 783.285 966.852 783.418 967.203 c
783.547 967.555 784.172 968.117 784.301 968.465 c
784.43 968.816 784.328 969.379 784.352 969.73 c
784.375 970.082 784.348 970.645 784.469 970.996 c
784.59 971.348 784.82 971.91 785.223 972.262 c
785.625 972.613 787.004 973.176 787.363 973.527 c
787.719 973.879 787.578 974.441 787.797 974.793 c
788.02 975.141 788.785 975.703 788.949 976.055 c
789.109 976.406 788.945 976.969 788.973 977.32 c
789 977.672 789.051 978.234 789.141 978.586 c
789.234 978.938 789.531 979.5 789.633 979.852 c
789.734 980.203 789.703 980.766 789.871 981.117 c
790.039 981.465 790.387 982.027 790.844 982.379 c
791.301 982.73 792.754 983.293 793.156 983.645 c
793.559 983.996 793.484 984.559 793.75 984.91 c
794.02 985.262 794.863 985.824 795.086 986.176 c
795.309 986.527 795.09 987.09 795.352 987.441 c
795.613 987.789 796.594 988.355 796.965 988.703 c
797.336 989.055 797.773 989.617 798.027 989.969 c
798.285 990.32 798.461 990.883 798.805 991.234 c
799.145 991.586 800.234 992.148 800.492 992.5 c
800.754 992.852 800.621 993.414 800.672 993.766 c
800.719 994.113 800.695 994.68 800.852 995.027 c
801.004 995.379 801.52 995.941 801.785 996.293 c
802.051 996.645 802.617 997.207 802.77 997.559 c
802.918 997.91 802.734 998.473 802.867 998.824 c
803.004 999.176 803.328 999.738 803.746 1000.09 c
804.16 1000.44 805.391 1001 805.875 1001.35 c
806.359 1001.7 807.047 1002.27 807.242 1002.62 c
807.434 1002.97 807.109 1003.53 807.27 1003.88 c
807.43 1004.23 808.156 1004.8 808.398 1005.15 c
808.637 1005.5 808.859 1006.06 809 1006.41 c
809.137 1006.77 808.992 1007.33 809.402 1007.68 c
809.813 1008.03 811.527 1008.59 811.941 1008.94 c
812.355 1009.29 812.27 1009.86 812.395 1010.21 c
812.52 1010.56 812.574 1011.12 812.844 1011.47 c
813.113 1011.82 814.012 1012.39 814.328 1012.74 c
814.648 1013.09 814.902 1013.65 815.141 1014 c
815.379 1014.35 815.785 1014.91 816.051 1015.27 c
816.316 1015.62 816.918 1016.18 817.059 1016.53 c
817.199 1016.88 817.055 1017.45 817.07 1017.8 c
817.086 1018.15 817.008 1018.71 817.176 1019.06 c
817.344 1019.41 818.102 1019.98 818.285 1020.33 c
818.473 1020.68 818.191 1021.24 818.516 1021.59 c
818.836 1021.94 820.145 1022.5 820.613 1022.86 c
821.082 1023.21 821.273 1023.77 821.895 1024.12 c
822.52 1024.47 824.641 1025.04 825.102 1025.39 c
825.563 1025.74 825.148 1026.3 825.207 1026.65 c
825.266 1027 825.418 1027.57 825.531 1027.91 c
825.641 1028.27 825.691 1028.83 826.012 1029.18 c
826.332 1029.53 827.535 1030.09 827.848 1030.45 c
828.156 1030.8 828.012 1031.36 828.254 1031.71 c
828.496 1032.06 829.383 1032.63 829.602 1032.98 c
829.816 1033.32 829.703 1033.89 829.816 1034.24 c
829.934 1034.59 830.258 1035.15 830.438 1035.5 c
830.613 1035.86 830.996 1036.42 831.098 1036.77 c
831.203 1037.12 830.945 1037.68 831.184 1038.04 c
831.422 1038.39 832.594 1038.95 832.824 1039.3 c
833.059 1039.65 832.762 1040.21 832.867 1040.56 c
832.973 1040.91 833.301 1041.48 833.586 1041.83 c
833.875 1042.18 834.75 1042.74 834.941 1043.09 c
835.129 1043.45 834.824 1044.01 834.957 1044.36 c
835.094 1044.71 835.527 1045.27 835.902 1045.63 c
836.281 1045.98 837.363 1046.54 837.676 1046.89 c
837.992 1047.24 837.941 1047.8 838.172 1048.15 c
838.402 1048.5 838.82 1049.07 839.324 1049.42 c
839.832 1049.77 841.191 1050.33 841.816 1050.68 c
842.438 1051.04 843.504 1051.6 843.828 1051.95 c
844.152 1052.3 844.098 1052.86 844.156 1053.21 c
844.215 1053.56 844.125 1054.13 844.254 1054.48 c
844.383 1054.83 844.816 1055.39 845.086 1055.74 c
845.355 1056.09 846.023 1056.66 846.188 1057.01 c
846.352 1057.36 846.07 1057.92 846.273 1058.27 c
846.477 1058.63 847.211 1059.19 847.648 1059.54 c
848.09 1059.89 849.148 1060.45 849.445 1060.8 c
849.738 1061.15 849.648 1061.71 849.781 1062.07 c
849.914 1062.42 850.215 1062.98 850.402 1063.33 c
850.594 1063.68 850.297 1064.25 851.148 1064.6 c
851.996 1064.95 855.766 1065.51 856.527 1065.86 c
857.285 1066.21 856.484 1066.78 856.621 1067.13 c
856.762 1067.48 857.059 1068.04 857.516 1068.39 c
857.973 1068.74 859.195 1069.3 859.914 1069.66 c
860.633 1070.01 862.258 1070.57 862.684 1070.92 c
863.113 1071.27 862.914 1071.84 862.992 1072.19 c
863.066 1072.54 863.125 1073.1 863.23 1073.45 c
863.34 1073.8 863.477 1074.36 863.762 1074.71 c
864.043 1075.07 864.957 1075.63 865.27 1075.98 c
865.578 1076.33 865.836 1076.89 866.004 1077.25 c
866.172 1077.6 866.32 1078.16 866.484 1078.51 c
866.645 1078.86 866.855 1079.43 867.184 1079.77 c
867.516 1080.13 868.512 1080.69 868.859 1081.04 c
869.211 1081.39 869.414 1081.95 869.711 1082.3 c
870.012 1082.66 870.68 1083.22 871.02 1083.57 c
871.355 1083.92 871.59 1084.48 872.137 1084.84 c
872.684 1085.19 874.559 1085.75 874.961 1086.1 c
875.363 1086.45 874.957 1087.01 875.031 1087.36 c
875.105 1087.71 875.352 1088.28 875.504 1088.63 c
875.66 1088.98 875.855 1089.54 876.148 1089.89 c
876.441 1090.25 877.328 1090.81 877.621 1091.16 c
877.91 1091.51 877.855 1092.07 878.246 1092.43 c
878.637 1092.77 880.09 1093.34 880.43 1093.69 c
880.773 1094.04 880.402 1094.6 880.719 1094.95 c
881.031 1095.3 882.191 1095.87 882.703 1096.22 c
883.215 1096.57 884.063 1097.13 884.402 1097.48 c
884.742 1097.84 884.945 1098.4 885.148 1098.75 c
885.352 1099.1 885.707 1099.66 885.867 1100.01 c
886.027 1100.36 886.195 1100.93 886.293 1101.28 c
886.391 1101.63 886.438 1102.19 886.57 1102.54 c
886.707 1102.89 887.145 1103.46 887.254 1103.81 c
887.363 1104.16 887.004 1104.72 887.348 1105.07 c
887.695 1105.42 889.387 1105.99 889.738 1106.34 c
890.094 1106.69 889.457 1107.25 889.891 1107.6 c
890.328 1107.95 892.426 1108.52 892.879 1108.87 c
893.332 1109.22 892.809 1109.78 893.16 1110.13 c
893.512 1110.48 894.781 1111.05 895.422 1111.4 c
896.066 1111.75 897.145 1112.31 897.797 1112.66 c
898.449 1113.01 899.555 1113.57 900.129 1113.93 c
900.703 1114.28 901.453 1114.84 901.945 1115.19 c
902.438 1115.54 903.289 1116.11 903.684 1116.46 c
904.078 1116.81 903.965 1117.37 904.789 1117.72 c
905.613 1118.07 908.852 1118.64 909.617 1118.98 c
910.383 1119.34 909.98 1119.9 910.301 1120.25 c
910.625 1120.6 911.633 1121.16 911.938 1121.52 c
912.238 1121.87 911.766 1122.43 912.488 1122.78 c
913.211 1123.13 916.352 1123.7 917.137 1124.05 c
917.922 1124.4 917.922 1124.96 918.156 1125.31 c
918.391 1125.66 918.5 1126.22 918.832 1126.57 c
919.168 1126.93 919.984 1127.49 920.574 1127.84 c
921.16 1128.19 922.637 1128.75 923.066 1129.11 c
923.492 1129.46 923.438 1130.02 923.648 1130.37 c
923.859 1130.72 924.246 1131.29 924.586 1131.64 c
924.926 1131.98 925.891 1132.55 926.102 1132.9 c
926.316 1133.25 926.109 1133.81 926.121 1134.16 c
926.137 1134.52 926.047 1135.08 926.199 1135.43 c
926.355 1135.78 926.852 1136.34 927.223 1136.7 c
927.598 1137.05 928.637 1137.61 928.883 1137.96 c
929.129 1138.31 928.953 1138.88 929 1139.22 c
929.047 1139.57 928.613 1140.14 929.219 1140.49 c
929.82 1140.84 932.77 1141.4 933.348 1141.75 c
933.93 1142.11 933.395 1142.67 933.41 1143.02 c
933.422 1143.37 933.363 1143.93 933.441 1144.29 c
933.52 1144.63 933.473 1145.2 933.977 1145.55 c
934.48 1145.9 935.805 1146.46 937.082 1146.81 c
938.359 1147.16 942.227 1147.73 943.195 1148.08 c
944.164 1148.43 943.414 1148.99 944.074 1149.34 c
944.734 1149.7 947.297 1150.26 947.965 1150.61 c
948.629 1150.96 948.09 1151.52 948.867 1151.87 c
949.641 1152.22 952.84 1152.79 953.547 1153.14 c
954.254 1153.49 953.75 1154.05 953.961 1154.4 c
954.168 1154.75 954.484 1155.32 955.051 1155.67 c
955.613 1156.02 957.547 1156.58 958.02 1156.93 c
958.492 1157.28 958.156 1157.85 958.453 1158.2 c
958.75 1158.55 959.688 1159.11 960.148 1159.46 c
960.613 1159.81 961.152 1160.38 961.801 1160.73 c
962.449 1161.08 964.367 1161.64 964.828 1161.99 c
965.289 1162.34 964.754 1162.91 965.121 1163.26 c
965.492 1163.61 966.703 1164.17 967.492 1164.52 c
968.277 1164.87 969.266 1165.43 970.801 1165.79 c
972.336 1166.14 977.449 1166.7 978.551 1167.05 c
979.656 1167.4 978.707 1167.96 978.758 1168.32 c
978.809 1168.67 978.598 1169.23 978.914 1169.58 c
979.234 1169.93 979.25 1170.5 981.055 1170.85 c
982.855 1171.2 989.719 1171.76 991.914 1172.11 c
994.109 1172.46 995.609 1173.02 996.875 1173.38 c
998.141 1173.73 1000.21 1174.29 1001.03 1174.64 c
1001.85 1174.99 1002.13 1175.55 1002.8 1175.91 c
1003.47 1176.26 1004.59 1176.82 1005.88 1177.17 c
1007.18 1177.52 1010.89 1178.09 1012.15 1178.43 c
1013.4 1178.79 1014.53 1179.35 1014.93 1179.7 c
1015.32 1180.05 1013.26 1180.61 1015.01 1180.96 c
1016.76 1181.32 1024.65 1181.88 1027.55 1182.23 c
1030.46 1182.58 1034.03 1183.14 1035.96 1183.5 c
1037.89 1183.84 1040.48 1184.41 1041.46 1184.76 c
1042.45 1185.11 1041.6 1185.67 1043.05 1186.02 c
1044.51 1186.38 1050.58 1186.94 1051.97 1187.29 c
1053.37 1187.64 1052.68 1188.2 1053.11 1188.55 c
1053.53 1188.91 1054.78 1189.47 1055.05 1189.82 c
1055.32 1190.17 1055.05 1190.73 1055.05 1191.08 c
1055.05 1191.43 1055.05 1192 1055.05 1192.35 c
1055.05 1192.7 1055.05 1193.61 y
S
[ 14.9442 19.9255 ] 0 d
1 0 0 rg
1 0 0 RG
407.621 225.051 m
423.988 228.031 430.246 229.172 v
436.504 230.316 442.008 232.152 452.73 233.293 c
463.453 234.438 496.203 236.273 507.539 237.418 c
518.871 238.559 525.348 240.395 534.422 241.539 c
543.492 242.68 566.648 244.516 572.926 245.66 c
579.203 246.805 575.066 248.637 579.664 249.781 c
584.262 250.926 601.574 252.758 606.063 253.902 c
610.547 255.047 609.594 256.879 611.996 258.023 c
614.398 259.168 619.438 261 623.383 262.145 c
627.328 263.289 637.629 265.125 640.426 266.266 c
643.223 267.41 641.016 269.246 643.555 270.387 c
646.09 271.531 656.598 273.367 658.715 274.508 c
660.836 275.652 658.758 277.488 658.828 278.633 c
658.898 279.773 658.688 281.609 659.219 282.754 c
659.754 283.898 662.18 285.73 662.68 286.875 c
663.184 288.02 662.582 289.852 662.844 290.996 c
663.105 292.141 664.309 293.973 664.566 295.117 c
664.828 296.262 663.668 298.094 664.727 299.238 c
665.785 300.383 669.273 302.219 672.203 303.359 c
675.129 304.504 683.453 306.34 685.836 307.48 c
688.219 308.625 688.688 310.461 689.375 311.605 c
690.066 312.746 690.25 314.582 690.816 315.727 c
691.383 316.867 692.699 318.703 693.457 319.848 c
694.211 320.992 695.773 322.824 696.266 323.969 c
696.758 325.113 695.777 326.945 697.004 328.09 c
698.23 329.234 703.301 331.066 705.109 332.211 c
706.918 333.355 709.301 335.188 710.031 336.332 c
710.762 337.477 709.387 339.313 710.375 340.453 c
711.367 341.598 715.293 343.434 717.156 344.574 c
719.02 345.719 722.504 347.555 723.805 348.699 c
725.105 349.84 726.086 351.676 726.535 352.82 c
726.98 353.961 726.781 355.797 727.027 356.941 c
727.273 358.086 727.898 359.918 728.313 361.063 c
728.723 362.207 729.527 364.039 729.996 365.184 c
730.465 366.328 731.055 368.16 731.691 369.305 c
732.332 370.449 733.988 372.281 734.594 373.426 c
735.199 374.57 735.496 376.406 736.059 377.547 c
736.617 378.691 738.016 380.527 738.641 381.672 c
739.262 382.813 739.813 384.648 740.559 385.793 c
741.309 386.934 743.078 388.77 744.023 389.914 c
744.973 391.055 746.699 392.891 747.387 394.035 c
748.074 395.18 748.359 397.012 748.984 398.156 c
749.609 399.301 751.355 401.133 751.891 402.277 c
752.43 403.422 752.602 405.254 752.852 406.398 c
753.102 407.543 752.891 409.379 753.695 410.52 c
754.5 411.664 757.902 413.5 758.664 414.641 c
759.422 415.785 759.059 417.621 759.164 418.766 c
759.27 419.906 759.324 421.742 759.418 422.887 c
759.512 424.027 759.5 425.863 759.848 427.008 c
760.191 428.152 761.32 429.984 761.926 431.129 c
762.527 432.273 763.848 434.105 764.199 435.25 c
764.547 436.395 763.742 438.227 764.441 439.371 c
765.145 440.516 768.512 442.348 769.246 443.492 c
769.977 444.637 768.309 446.473 769.711 447.613 c
771.113 448.758 777.957 450.594 779.344 451.734 c
780.73 452.879 778.664 454.715 779.703 455.859 c
780.742 457 785.43 458.836 786.844 459.98 c
788.254 461.121 789.426 462.957 789.879 464.102 c
790.336 465.246 790.078 467.078 790.129 468.223 c
790.18 469.367 790.102 471.199 790.242 472.344 c
790.387 473.488 790.93 475.32 791.168 476.465 c
791.402 477.609 791.453 479.441 791.957 480.586 c
792.461 481.73 794.301 483.566 794.797 484.707 c
795.293 485.852 794.852 487.688 795.527 488.828 c
796.199 489.973 799.012 491.809 799.648 492.953 c
800.285 494.094 799.777 495.93 800.117 497.074 c
800.457 498.215 801.813 500.051 802.098 501.195 c
802.387 502.34 802.07 504.172 802.188 505.316 c
802.305 506.461 802.484 508.293 802.934 509.438 c
803.383 510.582 804.891 512.414 805.434 513.559 c
805.973 514.703 806.363 516.535 806.836 517.68 c
807.309 518.824 808.355 520.66 808.84 521.801 c
809.324 522.945 810.082 524.781 810.324 525.922 c
810.563 527.066 810 528.902 810.574 530.047 c
811.152 531.188 813.578 533.023 814.477 534.168 c
815.375 535.309 816.688 537.145 817.055 538.289 c
817.418 539.434 816.766 541.266 817.109 542.41 c
817.453 543.555 818.816 545.387 819.531 546.531 c
820.242 547.676 821.762 549.508 822.25 550.652 c
822.734 551.797 822.762 553.633 823.035 554.773 c
823.309 555.918 823.945 557.754 824.223 558.895 c
824.5 560.039 824.137 561.875 825.043 563.02 c
825.953 564.16 829.742 565.996 830.762 567.141 c
831.785 568.281 831.84 570.117 832.41 571.262 c
832.98 572.406 834.203 574.238 834.879 575.383 c
835.551 576.527 836.391 578.359 837.27 579.504 c
838.145 580.648 840.078 582.48 841.195 583.625 c
842.313 584.77 844.297 586.602 845.313 587.746 c
846.328 588.891 847.973 590.727 848.523 591.867 c
849.078 593.012 848.813 594.848 849.309 595.988 c
849.805 597.133 850.852 598.969 852.109 600.113 c
853.363 601.254 855.703 603.09 858.359 604.234 c
861.016 605.375 869.328 607.211 871.25 608.355 c
873.172 609.5 871.723 611.332 872.215 612.477 c
872.703 613.621 874.273 615.453 874.793 616.598 c
875.309 617.742 875.703 619.574 875.938 620.719 c
876.176 621.863 875.039 623.695 876.488 624.84 c
877.938 625.984 884.715 627.82 886.371 628.961 c
888.027 630.105 887.574 631.941 888.418 633.082 c
889.266 634.227 891.508 636.063 892.465 637.207 c
893.422 638.348 893.59 640.184 895.32 641.328 c
897.047 642.469 903.359 644.305 904.91 645.449 c
906.461 646.594 905.176 648.426 906.508 649.57 c
907.84 650.715 912.793 652.547 914.512 653.691 c
916.23 654.836 918.168 656.668 918.895 657.813 c
919.625 658.957 919.637 660.793 919.773 661.934 c
919.906 663.078 919.418 664.914 919.863 666.055 c
920.305 667.199 922.371 669.035 922.965 670.18 c
923.563 671.32 923.527 673.156 924.148 674.301 c
924.77 675.441 925.863 677.277 927.441 678.422 c
929.016 679.566 934.371 681.398 935.496 682.543 c
936.621 683.688 935.316 685.52 935.551 686.664 c
935.781 687.809 936.816 689.641 937.18 690.785 c
937.539 691.93 937.188 693.762 938.16 694.906 c
939.129 696.051 943.266 697.887 944.176 699.027 c
945.09 700.172 944.418 702.008 944.719 703.148 c
945.023 704.293 945.914 706.129 946.352 707.273 c
946.789 708.414 947.398 710.25 947.875 711.395 c
948.352 712.535 949.395 714.371 949.789 715.516 c
950.184 716.66 950.578 718.492 950.715 719.637 c
950.855 720.781 950.352 722.613 950.793 723.758 c
951.23 724.902 953.355 726.734 953.879 727.879 c
954.406 729.023 954.391 730.855 954.578 732 c
954.762 733.145 955.07 734.98 955.211 736.121 c
955.352 737.266 955.496 739.102 955.594 740.242 c
955.688 741.387 955.59 743.223 955.895 744.367 c
956.199 745.508 957.465 747.344 957.781 748.488 c
958.102 749.629 957.898 751.465 958.191 752.609 c
958.48 753.754 959.625 755.586 959.879 756.73 c
960.133 757.875 959.945 759.707 960.016 760.852 c
960.086 761.996 960.063 763.828 960.387 764.973 c
960.711 766.117 961.863 767.949 962.352 769.094 c
962.84 770.238 963.484 772.074 963.91 773.215 c
964.336 774.359 964.289 776.195 965.422 777.336 c
966.551 778.48 971.035 780.316 972.063 781.461 c
973.086 782.602 972.465 784.438 972.809 785.582 c
973.156 786.723 973.793 788.559 974.543 789.703 c
975.297 790.848 977.172 792.68 978.234 793.824 c
979.293 794.969 981.492 796.801 982.195 797.945 c
982.895 799.09 983.047 800.922 983.285 802.066 c
983.527 803.211 983.684 805.043 983.934 806.188 c
984.18 807.332 984.453 809.168 985.07 810.309 c
985.688 811.453 987.762 813.289 988.387 814.43 c
989.016 815.574 989.168 817.41 989.59 818.555 c
990.012 819.695 991.164 821.531 991.418 822.676 c
991.676 823.816 991.367 825.652 991.426 826.797 c
991.484 827.941 991.68 829.773 991.852 830.918 c
992.027 832.063 992.508 833.895 992.688 835.039 c
992.867 836.184 992.949 838.016 993.145 839.16 c
993.344 840.305 993.922 842.137 994.105 843.281 c
994.293 844.426 994.25 846.262 994.484 847.402 c
994.723 848.547 995.43 850.383 995.816 851.527 c
996.207 852.668 996.98 854.504 997.285 855.648 c
997.594 856.789 997.871 858.625 998.035 859.77 c
998.199 860.914 997.902 862.746 998.461 863.891 c
999.016 865.035 1001.46 866.867 1002.05 868.012 c
1002.63 869.156 1002.35 870.988 1002.67 872.133 c
1003 873.277 1003.63 875.109 1004.39 876.254 c
1005.14 877.398 1007.48 879.234 1008.13 880.375 c
1008.77 881.52 1008.73 883.355 1009.01 884.496 c
1009.29 885.641 1009.93 887.477 1010.13 888.621 c
1010.34 889.762 1010.16 891.598 1010.52 892.742 c
1010.88 893.883 1012.42 895.719 1012.75 896.863 c
1013.07 898.008 1012.8 899.84 1012.87 900.984 c
1012.94 902.129 1013.13 903.961 1013.23 905.105 c
1013.33 906.25 1013.48 908.082 1013.59 909.227 c
1013.7 910.371 1013.73 912.203 1014.03 913.348 c
1014.32 914.492 1015.23 916.328 1015.73 917.469 c
1016.24 918.613 1017.21 920.449 1017.69 921.59 c
1018.17 922.734 1018.92 924.57 1019.18 925.715 c
1019.45 926.855 1019.46 928.691 1019.6 929.836 c
1019.75 930.98 1020 932.813 1020.23 933.957 c
1020.45 935.102 1020.99 936.934 1021.19 938.078 c
1021.38 939.223 1021.49 941.055 1021.63 942.199 c
1021.77 943.344 1022.07 945.176 1022.2 946.32 c
1022.34 947.465 1022.22 949.301 1022.59 950.441 c
1022.95 951.586 1024.4 953.422 1024.82 954.563 c
1025.24 955.707 1025.48 957.543 1025.59 958.684 c
1025.71 959.828 1025.6 961.664 1025.65 962.809 c
1025.71 963.949 1025.91 965.785 1025.97 966.93 c
1026.03 968.07 1026.08 969.906 1026.1 971.051 c
1026.12 972.195 1025.93 974.027 1026.13 975.172 c
1026.32 976.316 1027.13 978.148 1027.47 979.293 c
1027.82 980.438 1028.25 982.27 1028.61 983.414 c
1028.97 984.559 1029.83 986.391 1030.08 987.535 c
1030.33 988.68 1030.2 990.516 1030.42 991.656 c
1030.64 992.801 1031.43 994.637 1031.65 995.781 c
1031.87 996.922 1031.52 998.758 1032.01 999.902 c
1032.5 1001.04 1034.6 1002.88 1035.17 1004.02 c
1035.75 1005.16 1035.97 1007 1036.15 1008.14 c
1036.34 1009.29 1036.05 1011.12 1036.48 1012.27 c
1036.92 1013.41 1038.88 1015.24 1039.3 1016.39 c
1039.73 1017.53 1039.5 1019.36 1039.56 1020.51 c
1039.63 1021.65 1039.68 1023.49 1039.8 1024.63 c
1039.91 1025.77 1039.75 1027.61 1040.39 1028.75 c
1041.04 1029.89 1043.85 1031.73 1044.46 1032.88 c
1045.06 1034.02 1044.55 1035.85 1044.77 1037 c
1044.98 1038.14 1045.64 1039.97 1046.02 1041.12 c
1046.41 1042.26 1047.19 1044.09 1047.54 1045.24 c
1047.89 1046.38 1048.29 1048.21 1048.53 1049.36 c
1048.78 1050.5 1049.16 1052.34 1049.3 1053.48 c
1049.44 1054.63 1049.39 1056.46 1049.52 1057.6 c
1049.66 1058.75 1049.52 1060.58 1050.29 1061.72 c
1051.05 1062.87 1054.39 1064.7 1055.05 1065.85 c
1055.71 1066.99 1055.05 1068.82 1055.05 1069.97 c
1055.05 1071.11 1055.05 1072.95 1055.05 1074.09 c
1055.05 1075.23 1055.05 1077.07 1055.05 1078.21 c
1055.05 1079.36 1055.05 1081.19 1055.05 1082.33 c
1055.05 1083.48 1055.05 1085.31 1055.05 1086.45 c
1055.05 1087.6 1055.05 1089.43 1055.05 1090.57 c
1055.05 1091.72 1055.05 1093.55 1055.05 1094.7 c
1055.05 1095.84 1055.05 1097.68 1055.05 1098.82 c
1055.05 1099.96 1055.05 1101.8 1055.05 1102.94 c
1055.05 1104.08 1055.05 1105.92 1055.05 1107.06 c
1055.05 1108.2 1055.05 1110.04 1055.05 1111.18 c
1055.05 1112.32 1055.05 1114.16 1055.05 1115.3 c
1055.05 1116.45 1055.05 1118.28 1055.05 1119.43 c
1055.05 1120.57 1055.05 1122.4 1055.05 1123.55 c
1055.05 1124.69 1055.05 1126.52 1055.05 1127.67 c
1055.05 1128.81 1055.05 1130.65 1055.05 1131.79 c
1055.05 1132.93 1055.05 1134.77 1055.05 1135.91 c
1055.05 1137.05 1055.05 1138.89 1055.05 1140.04 c
1055.05 1141.18 1055.05 1143.01 1055.05 1144.16 c
1055.05 1145.3 1055.05 1147.13 1055.05 1148.28 c
1055.05 1149.42 1055.05 1151.25 1055.05 1152.4 c
1055.05 1153.54 1055.05 1155.38 1055.05 1156.52 c
1055.05 1157.66 1055.05 1159.5 1055.05 1160.64 c
1055.05 1161.79 1055.05 1163.62 1055.05 1164.76 c
1055.05 1165.91 1055.05 1167.74 1055.05 1168.88 c
1055.05 1170.03 1055.05 1171.86 1055.05 1173 c
1055.05 1174.15 1055.05 1175.98 1055.05 1177.13 c
1055.05 1178.27 1055.05 1180.11 1055.05 1181.25 c
1055.05 1182.39 1055.05 1184.23 1055.05 1185.37 c
1055.05 1186.52 1055.05 1188.35 1055.05 1189.49 c
1055.05 1190.64 1055.05 1193.61 y
S
[ ] 0 d
29.8883 w
0 1 0 rg
0 1 0 RG
261.34 222.945 m
261.34 228.984 l
262.406 231 l
262.492 233.012 l
264.508 235.027 l
267.824 237.039 l
271.688 239.055 l
271.832 241.066 l
272.754 243.082 l
273.281 245.098 l
273.457 247.109 l
273.805 249.125 l
274.004 251.137 l
274.117 253.152 l
274.23 255.164 l
274.914 257.18 l
275.563 259.191 l
278.719 261.207 l
280 263.219 l
280.313 265.234 l
280.773 267.246 l
281.652 269.262 l
282.441 271.277 l
283.375 273.289 l
283.516 275.305 l
283.918 277.316 l
287.324 279.332 l
287.797 281.344 l
288.395 283.359 l
289.688 285.371 l
292.137 287.387 l
293.168 289.398 l
293.914 291.414 l
295.148 293.43 l
295.379 295.441 l
296.219 297.457 l
297.008 299.469 l
300.297 301.484 l
300.945 303.496 l
301.117 305.512 l
301.789 307.523 l
302.941 309.539 l
305.266 311.551 l
306.023 313.566 l
308.66 315.582 l
308.883 317.594 l
310.078 319.609 l
311.145 321.621 l
311.363 323.637 l
311.781 325.648 l
312.813 327.664 l
313.863 329.676 l
314.344 331.691 l
315.184 333.703 l
316.363 335.719 l
319.859 337.734 l
322.477 339.746 l
322.742 341.762 l
324.133 343.773 l
325.059 345.789 l
325.645 347.801 l
327.066 349.816 l
327.473 351.828 l
327.598 353.844 l
327.613 355.855 l
327.988 357.871 l
328.508 359.883 l
330.926 361.898 l
331.953 363.914 l
332.078 365.926 l
333.578 367.941 l
333.648 369.953 l
335.098 371.969 l
336.664 373.98 l
338.625 375.996 l
338.73 378.008 l
338.895 380.023 l
340.387 382.035 l
340.535 384.051 l
340.789 386.063 l
341.484 388.078 l
341.508 390.094 l
342.73 392.105 l
343.523 394.121 l
345.352 396.133 l
346.68 398.148 l
347.566 400.16 l
350.152 402.176 l
353.875 404.188 l
354.633 406.203 l
355.09 408.215 l
355.176 410.23 l
357.953 412.246 l
361.617 414.258 l
362.16 416.273 l
362.359 418.285 l
362.465 420.301 l
362.781 422.313 l
363.938 424.328 l
365.492 426.34 l
366.582 428.355 l
367.207 430.367 l
367.75 432.383 l
367.891 434.398 l
368.559 436.41 l
370.32 438.426 l
370.688 440.438 l
370.898 442.453 l
370.898 444.465 l
371.074 446.48 l
371.797 448.492 l
371.992 450.508 l
373.273 452.52 l
374.246 454.535 l
374.773 456.547 l
375.184 458.563 l
375.57 460.578 l
376.219 462.59 l
376.934 464.605 l
380.656 466.617 l
381.297 468.633 l
382.051 470.645 l
382.625 472.66 l
383.285 474.672 l
386.281 476.688 l
389.184 478.699 l
389.426 480.715 l
396.004 482.73 l
397.066 484.742 l
399.953 486.758 l
401.609 488.77 l
403.727 490.785 l
407.207 492.797 l
408.324 494.813 l
408.813 496.824 l
412.539 498.84 l
413.613 500.852 l
413.707 502.867 l
414.711 504.883 l
415.758 506.895 l
416.082 508.91 l
416.238 510.922 l
417.254 512.938 l
417.523 514.949 l
419.391 516.965 l
419.996 518.977 l
420.387 520.992 l
420.844 523.004 l
422.738 525.02 l
422.766 527.035 l
424.738 529.047 l
429.305 531.063 l
430.18 533.074 l
430.477 535.09 l
433.332 537.102 l
434.934 539.117 l
436.887 541.129 l
437.766 543.145 l
438.207 545.156 l
438.414 547.172 l
439.781 549.184 l
441.074 551.199 l
441.855 553.215 l
442.77 555.227 l
444.621 557.242 l
447.148 559.254 l
447.254 561.27 l
448.566 563.281 l
449.848 565.297 l
450.004 567.309 l
450.262 569.324 l
454.996 571.336 l
457.988 573.352 l
459.211 575.363 l
462.273 577.379 l
463.727 579.395 l
464.684 581.406 l
465.84 583.422 l
467.516 585.434 l
472.719 587.449 l
473.559 589.461 l
474.914 591.477 l
477.5 593.488 l
478.059 595.504 l
484.816 597.516 l
486.117 599.531 l
486.629 601.547 l
487.914 603.559 l
492.473 605.574 l
493.848 607.586 l
495.043 609.602 l
498.453 611.613 l
499.172 613.629 l
504.234 615.641 l
506.598 617.656 l
509.914 619.668 l
513.594 621.684 l
514.539 623.695 l
516.152 625.711 l
516.328 627.727 l
517.398 629.738 l
519.363 631.754 l
521.367 633.766 l
525.238 635.781 l
526.461 637.793 l
527.121 639.809 l
527.328 641.82 l
529.238 643.836 l
529.414 645.852 l
533.348 647.863 l
533.41 649.879 l
536.227 651.891 l
540.707 653.906 l
544.34 655.918 l
546.344 657.934 l
551.742 659.945 l
553.125 661.961 l
554.902 663.973 l
556.379 665.988 l
557.91 668 l
562.203 670.016 l
562.535 672.031 l
564.949 674.043 l
565.223 676.059 l
566.414 678.07 l
566.734 680.086 l
569.691 682.098 l
571.551 684.113 l
572.25 686.125 l
574.102 688.141 l
574.348 690.152 l
575.785 692.168 l
576.488 694.184 l
577.938 696.195 l
578.969 698.211 l
579.824 700.223 l
581.18 702.238 l
581.941 704.25 l
585.023 706.266 l
588.41 708.277 l
590.816 710.293 l
591.227 712.305 l
591.711 714.32 l
592.832 716.332 l
598.637 718.348 l
599.078 720.363 l
602.141 722.375 l
603.926 724.391 l
604.023 726.402 l
607.898 728.418 l
609.32 730.43 l
609.535 732.445 l
609.672 734.457 l
610.691 736.473 l
611.434 738.484 l
615.16 740.5 l
616.117 742.512 l
617.461 744.527 l
618.414 746.543 l
618.492 748.555 l
620.352 750.57 l
622.262 752.582 l
622.773 754.598 l
627.035 756.609 l
630.547 758.625 l
631.391 760.637 l
639.91 762.652 l
641.938 764.668 l
642.145 766.68 l
642.902 768.695 l
643.359 770.707 l
644.836 772.723 l
646.668 774.734 l
647.938 776.75 l
654.66 778.762 l
658.473 780.777 l
665.391 782.789 l
666.496 784.805 l
666.609 786.816 l
666.887 788.832 l
669.273 790.848 l
671.148 792.859 l
672.355 794.875 l
675.004 796.887 l
675.102 798.902 l
675.754 800.914 l
690.578 802.93 l
690.633 804.941 l
690.949 806.957 l
698.746 808.969 l
700.582 810.984 l
701.313 812.996 l
705.387 815.012 l
706.375 817.027 l
707.047 819.039 l
709.566 821.055 l
711.914 823.066 l
718.578 825.082 l
722.535 827.094 l
724.691 829.109 l
725.055 831.121 l
726.262 833.137 l
727.086 835.148 l
732.797 837.164 l
733.191 839.18 l
734.898 841.191 l
737.352 843.207 l
738.219 845.219 l
744.504 847.234 l
745.188 849.246 l
748.445 851.262 l
749.02 853.273 l
752.223 855.289 l
753.531 857.301 l
756.398 859.316 l
761.969 861.332 l
764.969 863.344 l
766.289 865.359 l
766.43 867.371 l
768.391 869.387 l
769.254 871.398 l
769.52 873.414 l
779.492 875.426 l
783.238 877.441 l
783.551 879.453 l
784.961 881.469 l
786.316 883.48 l
787.043 885.496 l
787.539 887.512 l
789.742 889.523 l
789.914 891.539 l
792.586 893.551 l
793.754 895.566 l
795.078 897.578 l
796.266 899.594 l
796.914 901.605 l
797.105 903.621 l
797.301 905.633 l
797.426 907.648 l
797.918 909.66 l
797.977 911.676 l
802.293 913.691 l
804.137 915.703 l
805.5 917.719 l
805.836 919.73 l
808.777 921.746 l
810.031 923.758 l
810.496 925.773 l
812.32 927.785 l
815.816 929.801 l
819.438 931.813 l
821.141 933.828 l
822.191 935.844 l
822.91 937.855 l
823.652 939.871 l
824.695 941.883 l
824.793 943.898 l
825.188 945.91 l
826.434 947.926 l
827.563 949.938 l
831.781 951.953 l
832.633 953.965 l
835.324 955.98 l
841.422 957.996 l
842.871 960.008 l
843.625 962.023 l
848.781 964.035 l
848.785 966.051 l
848.977 968.063 l
849.695 970.078 l
850.133 972.09 l
852.402 974.105 l
854.609 976.117 l
858.32 978.133 l
858.441 980.148 l
858.523 982.16 l
861.102 984.176 l
863.785 986.188 l
866.445 988.203 l
866.484 990.215 l
866.973 992.23 l
867.012 994.242 l
868.457 996.258 l
873.48 998.27 l
876.336 1000.29 l
876.512 1002.3 l
876.715 1004.31 l
878.289 1006.33 l
879.633 1008.34 l
883.496 1010.36 l
884.359 1012.37 l
885.223 1014.38 l
885.848 1016.39 l
887.754 1018.41 l
888.363 1020.42 l
888.941 1022.44 l
896.398 1024.45 l
896.469 1026.46 l
898.844 1028.48 l
900.328 1030.49 l
900.391 1032.51 l
901.207 1034.52 l
904.98 1036.54 l
905.207 1038.55 l
906.258 1040.56 l
906.496 1042.57 l
906.895 1044.59 l
906.926 1046.6 l
908.02 1048.62 l
909.566 1050.63 l
910.078 1052.64 l
910.094 1054.66 l
910.605 1056.67 l
912.637 1058.69 l
917.926 1060.7 l
918.465 1062.71 l
920.203 1064.73 l
920.852 1066.74 l
922.531 1068.75 l
925.492 1070.77 l
926.773 1072.78 l
929.969 1074.8 l
930.469 1076.81 l
933.828 1078.82 l
935.77 1080.84 l
936.891 1082.85 l
938.383 1084.87 l
938.98 1086.88 l
942.711 1088.89 l
944.359 1090.91 l
944.586 1092.92 l
950.625 1094.93 l
951.523 1096.95 l
952.023 1098.96 l
952.27 1100.98 l
956.133 1102.99 l
959.035 1105 l
961.047 1107.02 l
961.191 1109.03 l
964 1111.05 l
967.582 1113.06 l
970.012 1115.07 l
970.449 1117.09 l
972.391 1119.1 l
972.637 1121.11 l
974.637 1123.13 l
976.41 1125.14 l
979.855 1127.16 l
980.336 1129.17 l
982.184 1131.18 l
982.461 1133.2 l
984.918 1135.21 l
985.344 1137.23 l
985.945 1139.24 l
988.711 1141.25 l
990.945 1143.27 l
996.383 1145.28 l
996.824 1147.3 l
1000.4 1149.31 l
1001.48 1151.32 l
1001.8 1153.34 l
1002.35 1155.35 l
1008.73 1157.36 l
1010 1159.38 l
1012.93 1161.39 l
1013.12 1163.41 l
1016.31 1165.42 l
1018.92 1167.43 l
1021.28 1169.45 l
1033.68 1171.46 l
1034.32 1173.48 l
1034.95 1175.49 l
1041.46 1177.5 l
1044.29 1179.52 l
1044.63 1181.53 l
1046.54 1183.54 l
1055.05 1185.56 l
1055.05 1187.57 l
1055.05 1189.59 l
1055.05 1191.6 l
1055.05 1193.61 l
S
[ 29.8883 19.9255 3.985 19.9255 ] 0 d
14.9442 w
0.5 g
0.5 G
261.34 224.391 m
325.023 226.891 338.305 227.852 v
351.59 228.813 353.438 230.355 357.078 231.313 c
360.719 232.273 359.902 233.816 364.547 234.777 c
369.188 235.738 385.441 237.277 390.547 238.238 c
395.656 239.199 391.906 240.738 401.352 241.699 c
410.797 242.66 447.07 244.199 458.617 245.16 c
470.164 246.121 479.203 247.66 484.57 248.621 c
489.938 249.582 489.219 251.121 497.309 252.082 c
505.398 253.043 535.684 254.586 542.887 255.543 c
550.09 256.504 548.176 258.047 549.227 259.008 c
550.281 259.969 549.953 261.508 550.477 262.469 c
551 263.43 550.793 264.969 553 265.93 c
555.207 266.891 564.328 268.43 566.387 269.391 c
568.441 270.352 565.102 271.891 567.824 272.852 c
570.547 273.813 581.84 275.355 586.004 276.313 c
590.168 277.273 595.777 278.816 597.84 279.777 c
599.902 280.734 600.23 282.277 600.863 283.238 c
601.492 284.199 601.992 285.738 602.387 286.699 c
602.785 287.66 602.965 289.199 603.727 290.16 c
604.484 291.121 607.227 292.66 607.871 293.621 c
608.516 294.582 607.496 296.121 608.367 297.082 c
609.238 298.043 613.148 299.586 614.152 300.543 c
615.156 301.504 615.402 303.047 615.609 304.008 c
615.82 304.965 614.82 306.508 615.656 307.469 c
616.492 308.43 619.965 309.969 621.645 310.93 c
623.32 311.891 626.281 313.43 627.75 314.391 c
629.223 315.352 630.922 316.891 632.246 317.852 c
633.57 318.813 636.051 320.352 637.309 321.313 c
638.566 322.273 639.195 323.816 641.309 324.773 c
643.422 325.734 650.477 327.277 652.531 328.238 c
654.586 329.195 653.035 330.738 656.125 331.699 c
659.215 332.66 669.203 334.199 674.801 335.16 c
680.395 336.121 692.848 337.66 696.445 338.621 c
700.043 339.582 699.945 341.121 700.723 342.082 c
701.5 343.043 701.121 344.582 702.055 345.543 c
702.988 346.504 706.371 348.047 707.445 349.004 c
708.52 349.965 709.242 351.508 709.789 352.469 c
710.336 353.426 710.457 354.969 711.383 355.93 c
712.309 356.891 715.336 358.43 716.465 359.391 c
717.594 360.352 718.996 361.891 719.523 362.852 c
720.051 363.813 718.09 365.352 720.258 366.313 c
722.43 367.273 732.852 368.813 735.16 369.773 c
737.469 370.734 736.559 372.277 736.898 373.234 c
737.242 374.195 736.992 375.738 737.637 376.699 c
738.281 377.656 740.918 379.199 741.555 380.16 c
742.191 381.121 741.027 382.66 742.23 383.621 c
743.43 384.582 749.055 386.121 750.211 387.082 c
751.371 388.043 750.301 389.582 750.586 390.543 c
750.867 391.504 751.699 393.043 752.25 394.004 c
752.801 394.965 754.105 396.508 754.563 397.465 c
755.02 398.426 755.332 399.969 755.547 400.93 c
755.762 401.891 755.852 403.43 756.113 404.391 c
756.379 405.352 757.082 406.891 757.457 407.852 c
757.832 408.813 758.359 410.352 758.816 411.313 c
759.277 412.273 760.27 413.813 760.766 414.773 c
761.258 415.734 761.125 417.277 762.371 418.234 c
763.613 419.195 768.379 420.738 769.73 421.695 c
771.082 422.656 770.98 424.199 772.113 425.16 c
773.246 426.121 776.93 427.66 777.895 428.621 c
778.863 429.582 778.832 431.121 779.09 432.082 c
779.344 433.043 779.566 434.582 779.742 435.543 c
779.918 436.504 779.984 438.043 780.367 439.004 c
780.75 439.965 781.176 441.504 782.5 442.465 c
783.824 443.426 788.523 444.969 789.918 445.926 c
791.309 446.887 791.953 448.43 792.539 449.391 c
793.121 450.352 793.762 451.891 794.133 452.852 c
794.5 453.813 793.977 455.352 795.191 456.313 c
796.41 457.273 800.574 458.813 802.906 459.773 c
805.238 460.734 810.625 462.273 812 463.234 c
813.375 464.195 812.645 465.738 812.813 466.695 c
812.984 467.656 811.234 469.199 813.215 470.16 c
815.199 471.117 825.141 472.66 827.102 473.621 c
829.059 474.582 827.25 476.121 827.336 477.082 c
827.422 478.043 827.355 479.582 827.715 480.543 c
828.074 481.504 829.027 483.043 829.922 484.004 c
830.816 484.965 831.629 486.504 834.168 487.465 c
836.703 488.426 846.227 489.969 848.207 490.926 c
850.188 491.887 848.152 493.43 848.438 494.391 c
848.723 495.348 849.715 496.891 850.266 497.852 c
850.816 498.813 851.613 500.352 852.414 501.313 c
853.211 502.273 855.242 503.813 856.031 504.773 c
856.816 505.734 857.453 507.273 858.086 508.234 c
858.719 509.195 859.457 510.734 860.598 511.695 c
861.738 512.656 864.941 514.199 866.309 515.156 c
867.676 516.117 869.777 517.66 870.449 518.621 c
871.121 519.578 871.031 521.121 871.152 522.082 c
871.277 523.043 870.59 524.582 871.336 525.543 c
872.086 526.504 875.598 528.043 876.547 529.004 c
877.5 529.965 877.555 531.504 878.195 532.465 c
878.836 533.426 880.281 534.965 881.164 535.926 c
882.047 536.887 883.914 538.43 884.563 539.387 c
885.211 540.348 885.477 541.891 885.836 542.852 c
886.195 543.809 886.121 545.352 887.148 546.313 c
888.18 547.273 891.898 548.813 893.254 549.773 c
894.613 550.734 896.395 552.273 896.926 553.234 c
897.453 554.195 896.746 555.734 897.066 556.695 c
897.387 557.656 898.711 559.195 899.227 560.156 c
899.742 561.117 900.367 562.66 900.789 563.617 c
901.207 564.578 901.848 566.121 902.25 567.082 c
902.652 568.039 903.27 569.582 903.684 570.543 c
904.098 571.504 904.809 573.043 905.234 574.004 c
905.656 574.965 906.301 576.504 906.742 577.465 c
907.184 578.426 907.988 579.965 908.414 580.926 c
908.84 581.887 909.445 583.43 909.816 584.387 c
910.184 585.348 910.496 586.891 911.082 587.852 c
911.668 588.809 913.109 590.352 914.031 591.313 c
914.953 592.273 917.105 593.813 917.73 594.773 c
918.352 595.734 917.953 597.273 918.52 598.234 c
919.082 599.195 921.297 600.734 921.793 601.695 c
922.289 602.656 921.977 604.195 922.094 605.156 c
922.211 606.117 922.523 607.656 922.648 608.617 c
922.773 609.578 922.855 611.121 922.984 612.078 c
923.113 613.039 923.242 614.582 923.578 615.543 c
923.91 616.504 925.105 618.043 925.387 619.004 c
925.668 619.965 925.164 621.504 925.605 622.465 c
926.043 623.426 927.879 624.965 928.551 625.926 c
929.223 626.887 929.965 628.426 930.438 629.387 c
930.906 630.348 931.602 631.891 931.949 632.848 c
932.297 633.809 932.086 635.352 932.941 636.313 c
933.797 637.27 937.227 638.813 938.109 639.773 c
938.988 640.734 938.863 642.273 939.289 643.234 c
939.715 644.195 940.855 645.734 941.184 646.695 c
941.516 647.656 941.535 649.195 941.664 650.156 c
941.793 651.117 941.969 652.656 942.117 653.617 c
942.266 654.578 942.367 656.121 942.734 657.078 c
943.102 658.039 944.395 659.582 944.762 660.543 c
945.133 661.5 945.289 663.043 945.391 664.004 c
945.492 664.965 945.438 666.504 945.488 667.465 c
945.543 668.426 945.332 669.965 945.773 670.926 c
946.211 671.887 948.184 673.426 948.664 674.387 c
949.145 675.348 949.078 676.887 949.223 677.848 c
949.363 678.809 949.523 680.352 949.691 681.309 c
949.859 682.27 950.227 683.813 950.434 684.773 c
950.641 685.73 951.066 687.273 951.184 688.234 c
951.301 689.195 951.25 690.734 951.277 691.695 c
951.309 692.656 951.168 694.195 951.395 695.156 c
951.621 696.117 952.504 697.656 952.918 698.617 c
953.332 699.578 954.137 701.117 954.379 702.078 c
954.621 703.039 954.16 704.582 954.652 705.539 c
955.148 706.5 957.395 708.043 957.949 709.004 c
958.508 709.961 958.402 711.504 958.672 712.465 c
958.941 713.426 959.66 714.965 959.887 715.926 c
960.117 716.887 960.211 718.426 960.313 719.387 c
960.41 720.348 960.457 721.887 960.605 722.848 c
960.75 723.809 961.043 725.348 961.367 726.309 c
961.691 727.27 962.68 728.813 962.945 729.77 c
963.211 730.73 962.91 732.273 963.293 733.234 c
963.672 734.191 965.191 735.734 965.688 736.695 c
966.184 737.656 966.68 739.195 966.859 740.156 c
967.039 741.117 966.906 742.656 966.98 743.617 c
967.051 744.578 967.191 746.117 967.383 747.078 c
967.57 748.039 968.07 749.578 968.344 750.539 c
968.613 751.5 969.141 753.043 969.344 754 c
969.551 754.961 969.645 756.504 969.824 757.465 c
970.004 758.426 970.457 759.965 970.645 760.926 c
970.832 761.887 970.672 763.426 971.164 764.387 c
971.66 765.348 973.777 766.887 974.215 767.848 c
974.656 768.809 974.07 770.348 974.336 771.309 c
974.598 772.27 975.828 773.809 976.129 774.77 c
976.434 775.73 976.355 777.273 976.516 778.234 c
976.676 779.191 977.078 780.734 977.277 781.695 c
977.477 782.656 977.828 784.195 977.945 785.156 c
978.066 786.117 977.91 787.656 978.129 788.617 c
978.344 789.578 979.305 791.117 979.516 792.078 c
979.727 793.039 979.445 794.578 979.645 795.539 c
979.84 796.5 980.547 798.039 980.934 799 c
981.316 799.961 982.203 801.504 982.41 802.465 c
982.613 803.422 982.332 804.965 982.414 805.926 c
982.496 806.887 982.723 808.426 983 809.387 c
983.273 810.348 984.195 811.887 984.41 812.848 c
984.625 813.809 984.441 815.348 984.535 816.309 c
984.633 817.27 984.879 818.809 985.098 819.77 c
985.313 820.73 985.805 822.273 986.105 823.23 c
986.41 824.191 987.004 825.734 987.281 826.695 c
987.559 827.652 987.234 829.195 988.105 830.156 c
988.977 831.117 992.793 832.656 993.559 833.617 c
994.324 834.578 993.379 836.117 993.613 837.078 c
993.848 838.039 994.609 839.578 995.25 840.539 c
995.891 841.5 997.766 843.039 998.238 844 c
998.715 844.961 998.516 846.504 998.668 847.461 c
998.82 848.422 999.141 849.965 999.34 850.926 c
999.535 851.883 999.313 853.426 1000.08 854.387 c
1000.85 855.348 1004.03 856.887 1004.88 857.848 c
1005.73 858.809 1005.71 860.348 1006.21 861.309 c
1006.7 862.27 1007.76 863.809 1008.42 864.77 c
1009.07 865.73 1010.34 867.27 1010.96 868.23 c
1011.57 869.191 1012.22 870.734 1012.88 871.691 c
1013.53 872.652 1015 874.195 1015.68 875.156 c
1016.37 876.113 1017.03 877.656 1017.82 878.617 c
1018.61 879.578 1020.8 881.117 1021.38 882.078 c
1021.96 883.039 1021.68 884.578 1021.98 885.539 c
1022.27 886.5 1023.19 888.039 1023.51 889 c
1023.83 889.961 1024.11 891.5 1024.29 892.461 c
1024.47 893.422 1024.54 894.965 1024.82 895.922 c
1025.09 896.883 1026 898.426 1026.26 899.387 c
1026.52 900.344 1026.64 901.887 1026.7 902.848 c
1026.77 903.809 1026.68 905.348 1026.7 906.309 c
1026.73 907.27 1026.57 908.809 1026.87 909.77 c
1027.17 910.73 1028.23 912.27 1028.83 913.23 c
1029.44 914.191 1030.79 915.73 1031.23 916.691 c
1031.68 917.652 1031.89 919.195 1032.04 920.152 c
1032.2 921.113 1032.2 922.656 1032.31 923.617 c
1032.43 924.574 1032.52 926.117 1032.84 927.078 c
1033.16 928.039 1034.27 929.578 1034.59 930.539 c
1034.92 931.5 1035 933.039 1035.21 934 c
1035.42 934.961 1035.95 936.5 1036.1 937.461 c
1036.25 938.422 1036.2 939.961 1036.28 940.922 c
1036.36 941.883 1036.57 943.426 1036.68 944.383 c
1036.78 945.344 1036.88 946.887 1037.01 947.848 c
1037.14 948.809 1037.38 950.348 1037.61 951.309 c
1037.83 952.27 1038.31 953.809 1038.61 954.77 c
1038.91 955.73 1039.59 957.27 1039.79 958.23 c
1039.98 959.191 1039.91 960.73 1039.99 961.691 c
1040.07 962.652 1040.28 964.191 1040.35 965.152 c
1040.43 966.113 1040.35 967.656 1040.53 968.617 c
1040.71 969.574 1041.46 971.117 1041.68 972.078 c
1041.9 973.039 1042.02 974.578 1042.1 975.539 c
1042.18 976.5 1042.2 978.039 1042.25 979 c
1042.3 979.961 1042.34 981.5 1042.48 982.461 c
1042.63 983.422 1042.95 984.961 1043.32 985.922 c
1043.69 986.883 1044.81 988.426 1045.13 989.383 c
1045.45 990.344 1045.46 991.887 1045.62 992.848 c
1045.78 993.805 1046.17 995.348 1046.28 996.309 c
1046.39 997.27 1046.3 998.809 1046.41 999.77 c
1046.52 1000.73 1046.77 1002.27 1047.05 1003.23 c
1047.32 1004.19 1048.02 1005.73 1048.42 1006.69 c
1048.82 1007.65 1049.7 1009.19 1049.92 1010.15 c
1050.14 1011.11 1049.98 1012.66 1050 1013.61 c
1050.01 1014.57 1049.93 1016.12 1050.03 1017.08 c
1050.13 1018.04 1050.55 1019.58 1050.69 1020.54 c
1050.82 1021.5 1050.81 1023.04 1051 1024 c
1051.2 1024.96 1051.84 1026.5 1052.09 1027.46 c
1052.34 1028.42 1052.64 1029.96 1052.78 1030.92 c
1052.91 1031.88 1052.75 1033.42 1053.07 1034.38 c
1053.38 1035.34 1054.78 1036.89 1055.05 1037.84 c
1055.32 1038.8 1055.05 1040.35 1055.05 1041.31 c
1055.05 1042.27 1055.05 1043.81 1055.05 1044.77 c
1055.05 1045.73 1055.05 1047.27 1055.05 1048.23 c
1055.05 1049.19 1055.05 1050.73 1055.05 1051.69 c
1055.05 1052.65 1055.05 1054.19 1055.05 1055.15 c
1055.05 1056.11 1055.05 1057.65 1055.05 1058.61 c
1055.05 1059.57 1055.05 1061.12 1055.05 1062.07 c
1055.05 1063.04 1055.05 1064.58 1055.05 1065.54 c
1055.05 1066.5 1055.05 1068.04 1055.05 1069 c
1055.05 1069.96 1055.05 1071.5 1055.05 1072.46 c
1055.05 1073.42 1055.05 1074.96 1055.05 1075.92 c
1055.05 1076.88 1055.05 1078.42 1055.05 1079.38 c
1055.05 1080.34 1055.05 1081.88 1055.05 1082.84 c
1055.05 1083.8 1055.05 1085.35 1055.05 1086.3 c
1055.05 1087.27 1055.05 1088.81 1055.05 1089.77 c
1055.05 1090.73 1055.05 1092.27 1055.05 1093.23 c
1055.05 1094.19 1055.05 1095.73 1055.05 1096.69 c
1055.05 1097.65 1055.05 1099.19 1055.05 1100.15 c
1055.05 1101.11 1055.05 1102.65 1055.05 1103.61 c
1055.05 1104.57 1055.05 1106.11 1055.05 1107.07 c
1055.05 1108.04 1055.05 1109.58 1055.05 1110.54 c
1055.05 1111.5 1055.05 1113.04 1055.05 1114 c
1055.05 1114.96 1055.05 1116.5 1055.05 1117.46 c
1055.05 1118.42 1055.05 1119.96 1055.05 1120.92 c
1055.05 1121.88 1055.05 1123.42 1055.05 1124.38 c
1055.05 1125.34 1055.05 1126.88 1055.05 1127.84 c
1055.05 1128.8 1055.05 1130.34 1055.05 1131.3 c
1055.05 1132.27 1055.05 1133.81 1055.05 1134.77 c
1055.05 1135.73 1055.05 1137.27 1055.05 1138.23 c
1055.05 1139.19 1055.05 1140.73 1055.05 1141.69 c
1055.05 1142.65 1055.05 1144.19 1055.05 1145.15 c
1055.05 1146.11 1055.05 1147.65 1055.05 1148.61 c
1055.05 1149.57 1055.05 1151.11 1055.05 1152.07 c
1055.05 1153.04 1055.05 1154.58 1055.05 1155.54 c
1055.05 1156.5 1055.05 1158.04 1055.05 1159 c
1055.05 1159.96 1055.05 1161.5 1055.05 1162.46 c
1055.05 1163.42 1055.05 1164.96 1055.05 1165.92 c
1055.05 1166.88 1055.05 1168.42 1055.05 1169.38 c
1055.05 1170.34 1055.05 1171.88 1055.05 1172.84 c
1055.05 1173.8 1055.05 1175.34 1055.05 1176.3 c
1055.05 1177.27 1055.05 1178.81 1055.05 1179.77 c
1055.05 1180.73 1055.05 1182.27 1055.05 1183.23 c
1055.05 1184.19 1055.05 1185.73 1055.05 1186.69 c
1055.05 1187.65 1055.05 1189.19 1055.05 1190.15 c
1055.05 1191.11 1055.05 1193.61 y
S
Q
q
10 0 0 10 0 0 cm BT
/R6 9.9626 Tf
1 0 0 1 20.9801 6.80703 Tm
[(5G)-333.691(Ut)-0.899972(i)-0.800112(l)-0.800112(i)-0.800724(z)-0.399443(at)-0.899972(i)-0.800724(on)-334.613<28>-0.899972(%)-0.299582<29>-0.900585]TJ
0 1 -1 0 11.7891 47.3738 Tm
[(C)-0.199722(D)-0.899972(F)-333.801<28>-0.899972(%)-0.299582<29>-0.899972]TJ
ET
Q
[ 29.8883 29.8883 ] 0 d
14.9442 w
1 J
1 j
292.289 1156.15 m
323.008 1156.15 334.809 1156.15 v
346.609 1156.15 377.332 1156.15 y
S
q
10 0 0 10 0 0 cm BT
/R6 9.9626 Tf
1 0 0 1 41.7871 112.626 Tm
[(R)-0.0998608(1)-333.011<28>-0.899972(p)-0.599777(4a\))-0.899972]TJ
ET
Q
[ ] 0 d
0 0 1 rg
0 0 1 RG
292.289 1049.31 m
323.008 1049.31 334.809 1049.31 v
346.609 1049.31 377.332 1049.31 y
S
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R6 9.9626 Tf
1 0 0 1 41.7871 101.942 Tm
[(R)-0.0998608(1\()-0.899972(A\))-0.89936]TJ
ET
Q
[ 14.9442 19.9255 ] 0 d
1 0 0 rg
1 0 0 RG
292.289 942.469 m
323.008 942.469 334.809 942.469 v
346.609 942.469 377.332 942.469 y
S
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R6 9.9626 Tf
1 0 0 1 41.7871 91.259 Tm
[(R)-0.0998608(4\()-0.899972(A\))-0.89936]TJ
ET
Q
[ ] 0 d
29.8883 w
0 1 0 rg
0 1 0 RG
292.289 835.641 m
377.332 835.641 l
S
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R6 9.9626 Tf
1 0 0 1 41.7871 80.575 Tm
[(R)-0.0998608(6)-333.011<28>-0.899972(V\))-0.899972]TJ
ET
Q
[ 29.8883 19.9255 3.985 19.9255 ] 0 d
14.9442 w
0.5 g
0.5 G
292.289 728.801 m
323.008 728.801 334.809 728.801 v
346.609 728.801 377.332 728.801 y
S
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R6 9.9626 Tf
1 0 0 1 41.7871 69.891 Tm
[(R)-0.0998608(12)-333.006<28>-0.899972(T)-0.199722<29>-0.899972]TJ
ET
Q
Q
endstream
endobj
pagesave restore
%%PageTrailer
%%Trailer
end
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
